var N = null;var searchIndex = {};
searchIndex["wayland_client"]={"doc":"Client-side Wayland connector","items":[[3,"AnonymousObject","wayland_client","Anonymous interface",N,N],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",0,N],[16,"Event","","Set of events associated to this interface",0,N],[18,"NAME","","Name of this interface",0,N],[18,"VERSION","","Maximum supported version of this interface",0,N],[10,"c_interface","","Pointer to the C representation of this interface",0,N],[8,"MessageGroup","","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",1,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",1,N],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",1,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,N],[10,"into_raw","","Turn this message into its raw representation",1,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,N],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["self"],["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[3,"Display","","A connection to a wayland server",N,N],[3,"EventQueue","","An event queue for protocol messages",N,N],[3,"QueueToken","","A token representing this event queue",N,N],[3,"ReadEventsGuard","","A guard over a read intention.",N,N],[3,"GlobalManager","","An utility to manage global objects",N,N],[3,"NewProxy","","A newly-created proxy that needs implementation",N,N],[3,"Proxy","","An handle to a wayland proxy",N,N],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",N,N],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",2,N],[13,"XdgRuntimeDirNotSet","","The `XDG_RUNTIME_DIR` variable is not set while it should be",2,N],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",2,N],[13,"InvalidName","","The provided socket name is invalid",2,N],[13,"InvalidFd","","The FD provided in `WAYLAND_SOCKET` was invalid",2,N],[4,"GlobalError","","An error that occurred trying to bind a global",N,N],[13,"Missing","","The requested global was missing",3,N],[13,"VersionTooLow","","The global advertised by the server has a lower version number than the one requested",3,N],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",N,N],[13,"New","","A new global was created",4,N],[12,"id","wayland_client::GlobalEvent","Id of the new global",4,N],[12,"interface","","Interface of the new global",4,N],[12,"version","","Maximum supported version of the new global",4,N],[13,"Removed","wayland_client","A global was removed",4,N],[12,"id","wayland_client::GlobalEvent","Id of the removed global",4,N],[12,"interface","","Interface of the removed global",4,N],[4,"ProxyMap","wayland_client","This type only exists for type-level compatibility with the rust implementation.",N,N],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents of the environment variables",5,[[],["result",["connecterror"]]]],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given name",5,[[["s"]],["result",["connecterror"]]]],[11,"from_fd","","Attempt to use an already connected unix socket on given FD to start a wayland connection",5,[[["rawfd"]],["result",["connecterror"]]]],[11,"flush","","Non-blocking write to the server",5,[[["self"]],["result"]]],[11,"create_event_queue","","Create a new event queue associated with this wayland connection",5,[[["self"]],["eventqueue"]]],[11,"from_external_display","","Create a Display and Event Queue from an external display",5,N],[11,"get_display_ptr","","Retrieve the `wl_display` pointer",5,N],[11,"dispatch","","Dispatches events from the internal buffer.",6,[[["self"]],["result",["u32"]]]],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",6,[[["self"]],["result",["u32"]]]],[11,"sync_roundtrip","","Synchronous roundtrip",6,[[["self"]],["result",["u32"]]]],[11,"get_token","","Create a new token associated with this event queue",6,[[["self"]],["queuetoken"]]],[11,"prepare_read","","Prepare an concurrent read",6,[[["self"]],["option",["readeventsguard"]]]],[11,"read_events","","Read events",7,[[["self"]],["result",["i32"]]]],[11,"cancel","","Cancel the read",7,[[["self"]]]],[11,"new","","Create a global manager handling a registry",8,[[["proxy"]],["globalmanager"]]],[11,"new_with_cb","","Create a global manager handling a registry with a callback",8,[[["proxy"],["f"]],["globalmanager"]]],[11,"instantiate_auto","","Instantiate a global with highest available version",8,[[["self"],["f"]],["result",["proxy","globalerror"]]]],[11,"instantiate_exact","","Instantiate a global with a specific version",8,[[["self"],["u32"],["f"]],["result",["proxy","globalerror"]]]],[11,"list","","Retrieve the list of currently known globals",8,[[["self"]],["vec"]]],[11,"send","","Send a request through this object",9,N],[11,"send_constructor","","Send a request creating an object through this object",9,N],[11,"is_alive","","Check if the object associated with this proxy is still alive",9,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object instance",9,[[["self"]],["u32"]]],[11,"id","","Retrieve the object id of this wayland object",9,[[["self"]],["u32"]]],[11,"user_data","","Access the arbitrary payload associated to this object",9,[[["self"]],["option"]]],[11,"equals","","Check if the other proxy refers to the same underlying wayland object",9,[[["self"],["proxy"]],["bool"]]],[11,"child","","Create a new child object",9,[[["self"]],["newproxy"]]],[11,"anonymize","","Creates a handle of this proxy with its actual type erased",9,[[["self"]],["proxy",["anonymousobject"]]]],[11,"make_wrapper","","Create a wrapper for this object for queue management",9,[[["self"],["queuetoken"]],["result",["proxy"]]]],[11,"child_placeholder","","Create a placeholder object, to be used with `send_constructor`",9,[[["self"]],["proxy"]]],[11,"is_external","","Check whether this proxy is managed by the library or not",9,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",9,N],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",9,N],[11,"implement","","Implement this proxy using given function and implementation data.",10,[[["self"],["f"],["ud"]],["proxy"]]],[11,"implement_nonsend","","Implement this proxy using given function and implementation data.",10,[[["self"],["impl"],["ud"],["queuetoken"]],["proxy"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",10,N],[11,"from_c_ptr","","Create a `NewProxy` instance from a C pointer.",10,N],[0,"cursor","","Cursor utilities",N,N],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",N,N],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",N,N],[3,"CursorImageBuffer","","A buffer containing a cursor image.",N,N],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",N,[[],["bool"]]],[5,"load_theme","","Attempts to load a cursor theme from given name.",N,[[["option",["str"]],["u32"],["proxy"]],["cursortheme"]]],[11,"get_cursor","","Retrieve a cursor from the theme.",11,[[["self"],["str"]],["option",["cursor"]]]],[11,"name","","Retrieve the name of this cursor.",12,[[["self"]],["string"]]],[11,"image_count","","Retrieve the number of images contained in this animated cursor",12,[[["self"]],["usize"]]],[11,"frame","","Retrieve the image number of cursor animation.",12,[[["self"],["u32"]],["usize"]]],[11,"frame_and_duration","","Retrieve the image number and its duration.",12,N],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",12,[[["self"],["usize"]],["option",["cursorimagebuffer"]]]],[11,"frame_info","","Retrieve the metadata associated with given frame of the animation.",12,[[["self"],["usize"]],["option"]]],[0,"egl","wayland_client","EGL utilities",N,N],[3,"WlEglSurface","wayland_client::egl","EGL surface",N,N],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",N,[[],["bool"]]],[11,"new","","Create an EGL surface from a wayland surface",13,[[["proxy"],["i32"],["i32"]],["wleglsurface"]]],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",13,N],[11,"get_size","","Fetch current size of the EGL surface",13,N],[11,"resize","","Resize the EGL surface",13,[[["self"],["i32"],["i32"],["i32"],["i32"]]]],[11,"ptr","","Raw pointer to the EGL surface",13,N],[11,"get","wayland_client","Unusable method only existing for type-level compatibility",14,[[["self"],["u32"]],["option",["proxy"]]]],[11,"get_new","","Unusable method only existing for type-level compatibility",14,[[["self"],["u32"]],["option",["newproxy"]]]],[0,"sys","","C-associated types",N,N],[0,"client","wayland_client::sys","Bindings to the client library `libwayland-client.so`",N,N],[4,"wl_proxy","wayland_client::sys::client","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_queue","","",N,N],[3,"WaylandClient","","",N,N],[12,"wl_display_connect_to_fd","","",15,N],[12,"wl_display_connect","","",15,N],[12,"wl_display_disconnect","","",15,N],[12,"wl_display_get_fd","","",15,N],[12,"wl_display_roundtrip","","",15,N],[12,"wl_display_read_events","","",15,N],[12,"wl_display_prepare_read","","",15,N],[12,"wl_display_cancel_read","","",15,N],[12,"wl_display_dispatch","","",15,N],[12,"wl_display_dispatch_pending","","",15,N],[12,"wl_display_get_error","","",15,N],[12,"wl_display_get_protocol_error","","",15,N],[12,"wl_display_flush","","",15,N],[12,"wl_event_queue_destroy","","",15,N],[12,"wl_display_create_queue","","",15,N],[12,"wl_display_roundtrip_queue","","",15,N],[12,"wl_display_prepare_read_queue","","",15,N],[12,"wl_display_dispatch_queue","","",15,N],[12,"wl_display_dispatch_queue_pending","","",15,N],[12,"wl_proxy_create","","",15,N],[12,"wl_proxy_destroy","","",15,N],[12,"wl_proxy_add_listener","","",15,N],[12,"wl_proxy_get_listener","","",15,N],[12,"wl_proxy_add_dispatcher","","",15,N],[12,"wl_proxy_marshal_array_constructor","","",15,N],[12,"wl_proxy_marshal_array_constructor_versioned","","",15,N],[12,"wl_proxy_marshal_array","","",15,N],[12,"wl_proxy_set_user_data","","",15,N],[12,"wl_proxy_get_user_data","","",15,N],[12,"wl_proxy_get_id","","",15,N],[12,"wl_proxy_get_class","","",15,N],[12,"wl_proxy_set_queue","","",15,N],[12,"wl_proxy_get_version","","",15,N],[12,"wl_proxy_create_wrapper","","",15,N],[12,"wl_proxy_wrapper_destroy","","",15,N],[12,"wl_log_set_handler_client","","",15,N],[12,"wl_list_init","","",15,N],[12,"wl_list_insert","","",15,N],[12,"wl_list_remove","","",15,N],[12,"wl_list_length","","",15,N],[12,"wl_list_empty","","",15,N],[12,"wl_list_insert_list","","",15,N],[12,"wl_array_init","","",15,N],[12,"wl_array_release","","",15,N],[12,"wl_array_add","","",15,N],[12,"wl_array_copy","","",15,N],[12,"wl_proxy_marshal_constructor","","",15,N],[12,"wl_proxy_marshal_constructor_versioned","","",15,N],[12,"wl_proxy_marshal","","",15,N],[3,"WAYLAND_CLIENT_OPTION","","",N,N],[3,"WAYLAND_CLIENT_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"common","wayland_client::sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_client::sys::common","",N,N],[12,"name","","",16,N],[12,"signature","","",16,N],[12,"types","","",16,N],[3,"wl_interface","","",N,N],[12,"name","","",17,N],[12,"version","","",17,N],[12,"request_count","","",17,N],[12,"requests","","",17,N],[12,"event_count","","",17,N],[12,"events","","",17,N],[3,"wl_list","","",N,N],[12,"prev","","",18,N],[12,"next","","",18,N],[3,"wl_array","","",N,N],[12,"size","","",19,N],[12,"alloc","","",19,N],[12,"data","","",19,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",20,N],[12,"u","","",20,N],[12,"f","","",20,N],[12,"s","","",20,N],[12,"o","","",20,N],[12,"n","","",20,N],[12,"a","","",20,N],[12,"h","","",20,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"protocol_interfaces","wayland_client::sys","",N,N],[7,"wl_display_requests","wayland_client::sys::protocol_interfaces","",N,N],[7,"wl_display_events","","",N,N],[7,"wl_display_interface","","",N,N],[7,"wl_registry_requests","","",N,N],[7,"wl_registry_events","","",N,N],[7,"wl_registry_interface","","",N,N],[7,"wl_callback_events","","",N,N],[7,"wl_callback_interface","","",N,N],[7,"wl_compositor_requests","","",N,N],[7,"wl_compositor_interface","","",N,N],[7,"wl_shm_pool_requests","","",N,N],[7,"wl_shm_pool_interface","","",N,N],[7,"wl_shm_requests","","",N,N],[7,"wl_shm_events","","",N,N],[7,"wl_shm_interface","","",N,N],[7,"wl_buffer_requests","","",N,N],[7,"wl_buffer_events","","",N,N],[7,"wl_buffer_interface","","",N,N],[7,"wl_data_offer_requests","","",N,N],[7,"wl_data_offer_events","","",N,N],[7,"wl_data_offer_interface","","",N,N],[7,"wl_data_source_requests","","",N,N],[7,"wl_data_source_events","","",N,N],[7,"wl_data_source_interface","","",N,N],[7,"wl_data_device_requests","","",N,N],[7,"wl_data_device_events","","",N,N],[7,"wl_data_device_interface","","",N,N],[7,"wl_data_device_manager_requests","","",N,N],[7,"wl_data_device_manager_interface","","",N,N],[7,"wl_shell_requests","","",N,N],[7,"wl_shell_interface","","",N,N],[7,"wl_shell_surface_requests","","",N,N],[7,"wl_shell_surface_events","","",N,N],[7,"wl_shell_surface_interface","","",N,N],[7,"wl_surface_requests","","",N,N],[7,"wl_surface_events","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_seat_requests","","",N,N],[7,"wl_seat_events","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"wl_pointer_requests","","",N,N],[7,"wl_pointer_events","","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_keyboard_requests","","",N,N],[7,"wl_keyboard_events","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"wl_touch_requests","","",N,N],[7,"wl_touch_events","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"wl_output_requests","","",N,N],[7,"wl_output_events","","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_region_requests","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_subcompositor_requests","","",N,N],[7,"wl_subcompositor_interface","","",N,N],[7,"wl_subsurface_requests","","",N,N],[7,"wl_subsurface_interface","","",N,N],[0,"protocol","wayland_client","Generated interfaces for the core wayland protocol",N,N],[0,"wl_display","wayland_client::protocol","core global object",N,N],[3,"WlDisplay","wayland_client::protocol::wl_display","",N,N],[4,"Error","","global error values",N,N],[13,"InvalidObject","","server couldn't find object",21,N],[13,"InvalidMethod","","method doesn't exist on the specified interface",21,N],[13,"NoMemory","","server is out of memory",21,N],[4,"Request","","",N,N],[13,"Sync","","asynchronous roundtrip",22,N],[12,"callback","wayland_client::protocol::wl_display::Request","",22,N],[13,"GetRegistry","wayland_client::protocol::wl_display","get global registry object",22,N],[12,"registry","wayland_client::protocol::wl_display::Request","",22,N],[4,"Event","wayland_client::protocol::wl_display","",N,N],[13,"Error","","fatal error event",23,N],[12,"object_id","wayland_client::protocol::wl_display::Event","",23,N],[12,"code","","",23,N],[12,"message","","",23,N],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",23,N],[12,"id","wayland_client::protocol::wl_display::Event","",23,N],[8,"RequestsTrait","wayland_client::protocol::wl_display","",N,N],[10,"sync","","asynchronous roundtrip",24,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_registry","","get global registry object",24,[[["self"],["f"]],["result",["proxy"]]]],[0,"wl_registry","wayland_client::protocol","global registry object",N,N],[3,"WlRegistry","wayland_client::protocol::wl_registry","",N,N],[4,"Request","","",N,N],[13,"Bind","","bind an object to the display",25,N],[12,"name","wayland_client::protocol::wl_registry::Request","",25,N],[12,"id","","",25,N],[4,"Event","wayland_client::protocol::wl_registry","",N,N],[13,"Global","","announce global object",26,N],[12,"name","wayland_client::protocol::wl_registry::Event","",26,N],[12,"interface","","",26,N],[12,"version","","",26,N],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",26,N],[12,"name","wayland_client::protocol::wl_registry::Event","",26,N],[8,"RequestsTrait","wayland_client::protocol::wl_registry","",N,N],[10,"bind","","bind an object to the display",27,[[["self"],["u32"],["u32"],["f"]],["result",["proxy"]]]],[0,"wl_callback","wayland_client::protocol","callback object",N,N],[3,"WlCallback","wayland_client::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",28,N],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",28,N],[8,"RequestsTrait","wayland_client::protocol::wl_callback","",N,N],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",29,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",29,N],[13,"CreateRegion","wayland_client::protocol::wl_compositor","create new region",29,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",29,N],[4,"Event","wayland_client::protocol::wl_compositor","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_surface","","create new surface",30,[[["self"],["f"]],["result",["proxy"]]]],[10,"create_region","","create new region",30,[[["self"],["f"]],["result",["proxy"]]]],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",31,N],[12,"id","wayland_client::protocol::wl_shm_pool::Request","",31,N],[12,"offset","","",31,N],[12,"width","","",31,N],[12,"height","","",31,N],[12,"stride","","",31,N],[12,"format","","",31,N],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",31,N],[13,"Resize","","change the size of the pool mapping",31,N],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",31,N],[4,"Event","wayland_client::protocol::wl_shm_pool","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_buffer","","create a buffer from the pool",32,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the pool",32,N],[10,"resize","","change the size of the pool mapping",32,N],[0,"wl_shm","wayland_client::protocol","shared memory support",N,N],[3,"WlShm","wayland_client::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",33,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",33,N],[13,"InvalidFd","","mmapping the file descriptor failed",33,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",34,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",34,N],[13,"C8","","8-bit color index format, [7:0] C",34,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",34,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",34,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",34,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",34,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",34,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",34,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",34,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",34,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",34,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",34,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",34,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",34,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",34,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",34,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",34,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",34,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",34,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",34,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",34,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",34,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",34,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",34,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",34,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",34,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",34,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",34,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",34,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",34,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",34,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",34,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",34,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",34,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",34,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",34,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",34,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",34,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",34,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",34,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",34,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",34,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",34,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",34,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",34,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",34,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",34,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",34,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",34,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",34,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",34,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",34,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",34,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",34,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",34,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",34,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",34,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",35,N],[12,"id","wayland_client::protocol::wl_shm::Request","",35,N],[12,"fd","","",35,N],[12,"size","","",35,N],[4,"Event","wayland_client::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",36,N],[12,"format","wayland_client::protocol::wl_shm::Event","",36,N],[8,"RequestsTrait","wayland_client::protocol::wl_shm","",N,N],[10,"create_pool","","create a shm pool",37,[[["self"],["rawfd"],["i32"],["f"]],["result",["proxy"]]]],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",38,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",39,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy a buffer",40,N],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",41,N],[13,"InvalidActionMask","","action mask contains invalid values",41,N],[13,"InvalidAction","","action argument has an invalid value",41,N],[13,"InvalidOffer","","offer doesn't accept this request",41,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",42,N],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",42,N],[12,"mime_type","","",42,N],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",42,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",42,N],[12,"fd","","",42,N],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",42,N],[13,"Finish","","the offer will no longer be used",42,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",42,N],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",42,N],[12,"preferred_action","","",42,N],[4,"Event","wayland_client::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",43,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",43,N],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",43,N],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",43,N],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",43,N],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",43,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_offer","",N,N],[10,"accept","","accept one of the offered mime types",44,N],[10,"receive","","request that the data is transferred",44,N],[10,"destroy","","destroy data offer",44,N],[10,"finish","","the offer will no longer be used",44,N],[10,"set_actions","","set the available/preferred drag-and-drop actions",44,N],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",45,N],[13,"InvalidSource","","source doesn't accept this request",45,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",46,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",46,N],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",46,N],[13,"SetActions","","set the available drag-and-drop actions",46,N],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",46,N],[4,"Event","wayland_client::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",47,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",47,N],[13,"Send","wayland_client::protocol::wl_data_source","send the data",47,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",47,N],[12,"fd","","",47,N],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",47,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",47,N],[13,"DndFinished","","the drag-and-drop operation concluded",47,N],[13,"Action","","notify the selected action",47,N],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",47,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_source","",N,N],[10,"offer","","add an offered mime type",48,N],[10,"destroy","","destroy the data source",48,N],[10,"set_actions","","set the available drag-and-drop actions",48,N],[0,"wl_data_device","wayland_client::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",49,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",50,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",50,N],[12,"origin","","",50,N],[12,"icon","","",50,N],[12,"serial","","",50,N],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",50,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",50,N],[12,"serial","","",50,N],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",50,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",51,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",51,N],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",51,N],[12,"serial","wayland_client::protocol::wl_data_device::Event","",51,N],[12,"surface","","",51,N],[12,"x","","",51,N],[12,"y","","",51,N],[12,"id","","",51,N],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",51,N],[13,"Motion","","drag-and-drop session motion",51,N],[12,"time","wayland_client::protocol::wl_data_device::Event","",51,N],[12,"x","","",51,N],[12,"y","","",51,N],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",51,N],[13,"Selection","","advertise new selection",51,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",51,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_device","",N,N],[10,"start_drag","","start drag-and-drop operation",52,N],[10,"set_selection","","copy data to the selection",52,N],[10,"release","","destroy data device",52,N],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",N,N],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",53,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",53,N],[13,"GetDataDevice","wayland_client::protocol::wl_data_device_manager","create a new data device",53,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",53,N],[12,"seat","","",53,N],[4,"Event","wayland_client::protocol::wl_data_device_manager","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_data_source","","create a new data source",54,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_data_device","","create a new data device",54,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_client::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",55,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",56,N],[12,"id","wayland_client::protocol::wl_shell::Request","",56,N],[12,"surface","","",56,N],[4,"Event","wayland_client::protocol::wl_shell","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_shell_surface","","create a shell surface from a surface",57,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",58,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",58,N],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",58,N],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",58,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",59,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",59,N],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",59,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",59,N],[12,"serial","","",59,N],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",59,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",59,N],[12,"serial","","",59,N],[12,"edges","","",59,N],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",59,N],[13,"SetTransient","","make the surface a transient surface",59,N],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",59,N],[12,"x","","",59,N],[12,"y","","",59,N],[12,"flags","","",59,N],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",59,N],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",59,N],[12,"framerate","","",59,N],[12,"output","","",59,N],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",59,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",59,N],[12,"serial","","",59,N],[12,"parent","","",59,N],[12,"x","","",59,N],[12,"y","","",59,N],[12,"flags","","",59,N],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",59,N],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",59,N],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",59,N],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",59,N],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",59,N],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",59,N],[4,"Event","wayland_client::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",60,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",60,N],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",60,N],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",60,N],[12,"width","","",60,N],[12,"height","","",60,N],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",60,N],[8,"RequestsTrait","","",N,N],[10,"pong","","respond to a ping event",61,N],[10,"_move","","start an interactive move",61,N],[10,"resize","","start an interactive resize",61,N],[10,"set_toplevel","","make the surface a toplevel surface",61,N],[10,"set_transient","","make the surface a transient surface",61,N],[10,"set_fullscreen","","make the surface a fullscreen surface",61,N],[10,"set_popup","","make the surface a popup surface",61,N],[10,"set_maximized","","make the surface a maximized surface",61,N],[10,"set_title","","set surface title",61,N],[10,"set_class","","set surface class",61,N],[0,"wl_surface","wayland_client::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_client::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",62,N],[13,"InvalidTransform","","buffer transform value is invalid",62,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",63,N],[13,"Attach","","set the surface contents",63,N],[12,"buffer","wayland_client::protocol::wl_surface::Request","",63,N],[12,"x","","",63,N],[12,"y","","",63,N],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",63,N],[12,"x","wayland_client::protocol::wl_surface::Request","",63,N],[12,"y","","",63,N],[12,"width","","",63,N],[12,"height","","",63,N],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",63,N],[12,"callback","wayland_client::protocol::wl_surface::Request","",63,N],[13,"SetOpaqueRegion","wayland_client::protocol::wl_surface","set opaque region",63,N],[12,"region","wayland_client::protocol::wl_surface::Request","",63,N],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",63,N],[12,"region","wayland_client::protocol::wl_surface::Request","",63,N],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",63,N],[13,"SetBufferTransform","","sets the buffer transformation",63,N],[12,"transform","wayland_client::protocol::wl_surface::Request","",63,N],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",63,N],[12,"scale","wayland_client::protocol::wl_surface::Request","",63,N],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",63,N],[12,"x","wayland_client::protocol::wl_surface::Request","",63,N],[12,"y","","",63,N],[12,"width","","",63,N],[12,"height","","",63,N],[4,"Event","wayland_client::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",64,N],[12,"output","wayland_client::protocol::wl_surface::Event","",64,N],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",64,N],[12,"output","wayland_client::protocol::wl_surface::Event","",64,N],[8,"RequestsTrait","wayland_client::protocol::wl_surface","",N,N],[10,"destroy","","delete surface",65,N],[10,"attach","","set the surface contents",65,N],[10,"damage","","mark part of the surface damaged",65,N],[10,"frame","","request a frame throttling hint",65,[[["self"],["f"]],["result",["proxy"]]]],[10,"set_opaque_region","","set opaque region",65,N],[10,"set_input_region","","set input region",65,N],[10,"commit","","commit pending surface state",65,N],[10,"set_buffer_transform","","sets the buffer transformation",65,N],[10,"set_buffer_scale","","sets the buffer scaling factor",65,N],[10,"damage_buffer","","mark part of the surface damaged using buffer coordinates",65,N],[0,"wl_seat","wayland_client::protocol","group of input devices",N,N],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",66,N],[12,"id","wayland_client::protocol::wl_seat::Request","",66,N],[13,"GetKeyboard","wayland_client::protocol::wl_seat","return keyboard object",66,N],[12,"id","wayland_client::protocol::wl_seat::Request","",66,N],[13,"GetTouch","wayland_client::protocol::wl_seat","return touch object",66,N],[12,"id","wayland_client::protocol::wl_seat::Request","",66,N],[13,"Release","wayland_client::protocol::wl_seat","release the seat object",66,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",67,N],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",67,N],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",67,N],[12,"name","wayland_client::protocol::wl_seat::Event","",67,N],[8,"RequestsTrait","wayland_client::protocol::wl_seat","",N,N],[10,"get_pointer","","return pointer object",68,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_keyboard","","return keyboard object",68,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_touch","","return touch object",68,[[["self"],["f"]],["result",["proxy"]]]],[10,"release","","release the seat object",68,N],[0,"wl_pointer","wayland_client::protocol","pointer input device",N,N],[3,"WlPointer","wayland_client::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",69,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",70,N],[13,"Pressed","","the button is pressed",70,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",71,N],[13,"HorizontalScroll","","horizontal axis",71,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel rotation",72,N],[13,"Finger","","finger on a touch surface",72,N],[13,"Continuous","","continuous coordinate space",72,N],[13,"WheelTilt","","a physical wheel tilt",72,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",73,N],[12,"serial","wayland_client::protocol::wl_pointer::Request","",73,N],[12,"surface","","",73,N],[12,"hotspot_x","","",73,N],[12,"hotspot_y","","",73,N],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",73,N],[4,"Event","","",N,N],[13,"Enter","","enter event",74,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",74,N],[12,"surface","","",74,N],[12,"surface_x","","",74,N],[12,"surface_y","","",74,N],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",74,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",74,N],[12,"surface","","",74,N],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",74,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",74,N],[12,"surface_x","","",74,N],[12,"surface_y","","",74,N],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",74,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",74,N],[12,"time","","",74,N],[12,"button","","",74,N],[12,"state","","",74,N],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",74,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",74,N],[12,"axis","","",74,N],[12,"value","","",74,N],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",74,N],[13,"AxisSource","","axis source event",74,N],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",74,N],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",74,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",74,N],[12,"axis","","",74,N],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",74,N],[12,"axis","wayland_client::protocol::wl_pointer::Event","",74,N],[12,"discrete","","",74,N],[8,"RequestsTrait","wayland_client::protocol::wl_pointer","",N,N],[10,"set_cursor","","set the pointer surface",75,N],[10,"release","","release the pointer object",75,N],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",76,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",76,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",77,N],[13,"Pressed","","key is pressed",77,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",78,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",79,N],[12,"format","wayland_client::protocol::wl_keyboard::Event","",79,N],[12,"fd","","",79,N],[12,"size","","",79,N],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",79,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",79,N],[12,"surface","","",79,N],[12,"keys","","",79,N],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",79,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",79,N],[12,"surface","","",79,N],[13,"Key","wayland_client::protocol::wl_keyboard","key event",79,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",79,N],[12,"time","","",79,N],[12,"key","","",79,N],[12,"state","","",79,N],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",79,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",79,N],[12,"mods_depressed","","",79,N],[12,"mods_latched","","",79,N],[12,"mods_locked","","",79,N],[12,"group","","",79,N],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",79,N],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",79,N],[12,"delay","","",79,N],[8,"RequestsTrait","wayland_client::protocol::wl_keyboard","",N,N],[10,"release","","release the keyboard object",80,N],[0,"wl_touch","wayland_client::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_client::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",81,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",82,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",82,N],[12,"time","","",82,N],[12,"surface","","",82,N],[12,"id","","",82,N],[12,"x","","",82,N],[12,"y","","",82,N],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",82,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",82,N],[12,"time","","",82,N],[12,"id","","",82,N],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",82,N],[12,"time","wayland_client::protocol::wl_touch::Event","",82,N],[12,"id","","",82,N],[12,"x","","",82,N],[12,"y","","",82,N],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",82,N],[13,"Cancel","","touch session cancelled",82,N],[13,"Shape","","update shape of touch point",82,N],[12,"id","wayland_client::protocol::wl_touch::Event","",82,N],[12,"major","","",82,N],[12,"minor","","",82,N],[13,"Orientation","wayland_client::protocol::wl_touch","update orientation of touch point",82,N],[12,"id","wayland_client::protocol::wl_touch::Event","",82,N],[12,"orientation","","",82,N],[8,"RequestsTrait","wayland_client::protocol::wl_touch","",N,N],[10,"release","","release the touch object",83,N],[0,"wl_output","wayland_client::protocol","compositor output region",N,N],[3,"Mode","wayland_client::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",84,N],[13,"None","","no geometry",84,N],[13,"HorizontalRgb","","horizontal RGB",84,N],[13,"HorizontalBgr","","horizontal BGR",84,N],[13,"VerticalRgb","","vertical RGB",84,N],[13,"VerticalBgr","","vertical BGR",84,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",85,N],[13,"_90","","90 degrees counter-clockwise",85,N],[13,"_180","","180 degrees counter-clockwise",85,N],[13,"_270","","270 degrees counter-clockwise",85,N],[13,"Flipped","","180 degree flip around a vertical axis",85,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",85,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",85,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",85,N],[4,"Request","","",N,N],[13,"Release","","release the output object",86,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",87,N],[12,"x","wayland_client::protocol::wl_output::Event","",87,N],[12,"y","","",87,N],[12,"physical_width","","",87,N],[12,"physical_height","","",87,N],[12,"subpixel","","",87,N],[12,"make","","",87,N],[12,"model","","",87,N],[12,"transform","","",87,N],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",87,N],[12,"flags","wayland_client::protocol::wl_output::Event","",87,N],[12,"width","","",87,N],[12,"height","","",87,N],[12,"refresh","","",87,N],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",87,N],[13,"Scale","","output scaling properties",87,N],[12,"factor","wayland_client::protocol::wl_output::Event","",87,N],[8,"RequestsTrait","wayland_client::protocol::wl_output","",N,N],[10,"release","","release the output object",88,N],[0,"wl_region","wayland_client::protocol","region interface",N,N],[3,"WlRegion","wayland_client::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",89,N],[13,"Add","","add rectangle to region",89,N],[12,"x","wayland_client::protocol::wl_region::Request","",89,N],[12,"y","","",89,N],[12,"width","","",89,N],[12,"height","","",89,N],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",89,N],[12,"x","wayland_client::protocol::wl_region::Request","",89,N],[12,"y","","",89,N],[12,"width","","",89,N],[12,"height","","",89,N],[4,"Event","wayland_client::protocol::wl_region","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy region",90,N],[10,"add","","add rectangle to region",90,N],[10,"subtract","","subtract rectangle from region",90,N],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",91,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",92,N],[13,"GetSubsurface","","give a surface the role sub-surface",92,N],[12,"id","wayland_client::protocol::wl_subcompositor::Request","",92,N],[12,"surface","","",92,N],[12,"parent","","",92,N],[4,"Event","wayland_client::protocol::wl_subcompositor","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the subcompositor interface",93,N],[10,"get_subsurface","","give a surface the role sub-surface",93,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",94,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",95,N],[13,"SetPosition","","reposition the sub-surface",95,N],[12,"x","wayland_client::protocol::wl_subsurface::Request","",95,N],[12,"y","","",95,N],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",95,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",95,N],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",95,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",95,N],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",95,N],[13,"SetDesync","","set sub-surface to desynchronized mode",95,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove sub-surface interface",96,N],[10,"set_position","","reposition the sub-surface",96,N],[10,"place_above","","restack the sub-surface",96,N],[10,"place_below","","restack the sub-surface",96,N],[10,"set_sync","","set sub-surface to synchronized mode",96,N],[10,"set_desync","","set sub-surface to desynchronized mode",96,N],[11,"from_raw","wayland_client::protocol::wl_display","",21,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",21,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_shm","",33,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",33,[[["self"]],["u32"]]],[11,"from_raw","","",34,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_data_offer","",41,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",41,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_data_source","",45,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",45,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_data_device","",49,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",49,[[["self"]],["u32"]]],[18,"None","wayland_client::protocol::wl_data_device_manager","no action",97,N],[18,"Copy","","copy action",97,N],[18,"Move","","move action",97,N],[18,"Ask","","ask action",97,N],[11,"empty","","Returns an empty set of flags.",97,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",97,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",97,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",97,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",97,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",97,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",97,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",97,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",97,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",97,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",97,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",97,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",97,[[["self"],["dndaction"],["bool"]]]],[11,"from_raw","","",97,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",97,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_shell","",55,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",55,[[["self"]],["u32"]]],[18,"None","wayland_client::protocol::wl_shell_surface","no edge",98,N],[18,"Top","","top edge",98,N],[18,"Bottom","","bottom edge",98,N],[18,"Left","","left edge",98,N],[18,"TopLeft","","top and left edges",98,N],[18,"BottomLeft","","bottom and left edges",98,N],[18,"Right","","right edge",98,N],[18,"TopRight","","top and right edges",98,N],[18,"BottomRight","","bottom and right edges",98,N],[11,"empty","","Returns an empty set of flags.",98,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",98,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",98,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",98,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",98,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",98,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",98,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",98,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",98,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",98,[[["self"],["resize"],["bool"]]]],[11,"from_raw","","",98,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",98,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",99,N],[11,"empty","","Returns an empty set of flags.",99,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",99,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",99,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",99,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",99,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",99,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",99,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",99,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",99,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",99,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",99,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",99,[[["self"],["transient"],["bool"]]]],[11,"from_raw","","",99,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",99,[[["self"]],["u32"]]],[11,"from_raw","","",58,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",58,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_surface","",62,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",62,[[["self"]],["u32"]]],[18,"Pointer","wayland_client::protocol::wl_seat","the seat has pointer devices",100,N],[18,"Keyboard","","the seat has one or more keyboards",100,N],[18,"Touch","","the seat has touch devices",100,N],[11,"empty","","Returns an empty set of flags.",100,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",100,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",100,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",100,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",100,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",100,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",100,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",100,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",100,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",100,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",100,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",100,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",100,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",100,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_pointer","",69,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",69,[[["self"]],["u32"]]],[11,"from_raw","","",70,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",70,[[["self"]],["u32"]]],[11,"from_raw","","",71,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",71,[[["self"]],["u32"]]],[11,"from_raw","","",72,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",72,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_keyboard","",76,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",76,[[["self"]],["u32"]]],[11,"from_raw","","",77,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",77,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_output","",84,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",84,[[["self"]],["u32"]]],[11,"from_raw","","",85,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",85,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",101,N],[18,"Preferred","","indicates this is the preferred mode",101,N],[11,"empty","","Returns an empty set of flags.",101,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",101,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",101,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",101,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",101,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",101,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",101,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",101,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",101,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",101,[[["self"],["mode"],["bool"]]]],[11,"from_raw","","",101,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",101,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_subcompositor","",91,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",91,[[["self"]],["u32"]]],[11,"from_raw","wayland_client::protocol::wl_subsurface","",94,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",94,[[["self"]],["u32"]]],[8,"GlobalImplementor","wayland_client","A trait for implementation of the global advertisement",N,N],[10,"new_global","","A new global of given interface has been instantiated and you are supposed to provide an implementation for it.",102,[[["self"],["newproxy"]],["proxy"]]],[11,"error","","A global was advertised but its version was lower than the minimal version you requested.",102,[[["self"],["u32"]]]],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",N,N],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","wayland_client::cursor","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","wayland_client::egl","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","wayland_client::sys::client","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","wayland_client::sys::common","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_display","",112,[[["t"]],["t"]]],[11,"into","","",112,[[["self"]],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"try_into","","",112,[[["self"]],["result"]]],[11,"get_type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_registry","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_callback","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[["self"]],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"try_into","","",115,[[["self"]],["result"]]],[11,"get_type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_compositor","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_shm_pool","",118,[[["t"]],["t"]]],[11,"into","","",118,[[["self"]],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"try_into","","",118,[[["self"]],["result"]]],[11,"get_type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_shm","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_buffer","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_data_offer","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_data_source","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_data_device","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_data_device_manager","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,N],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_shell","",127,[[["t"]],["t"]]],[11,"into","","",127,[[["self"]],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"try_into","","",127,[[["self"]],["result"]]],[11,"get_type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_shell_surface","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,N],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,N],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_surface","",130,[[["t"]],["t"]]],[11,"into","","",130,[[["self"]],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"try_into","","",130,[[["self"]],["result"]]],[11,"get_type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_seat","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,N],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_pointer","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,N],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,N],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_keyboard","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,N],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,N],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_touch","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_output","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,N],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[["self"]],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"try_into","","",135,[[["self"]],["result"]]],[11,"get_type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,N],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,N],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_region","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_subcompositor","",138,[[["t"]],["t"]]],[11,"into","","",138,[[["self"]],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"try_into","","",138,[[["self"]],["result"]]],[11,"get_type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,N],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","wayland_client::protocol::wl_subsurface","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,N],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"is_destructor","wayland_client","",104,[[["self"]],["bool"]]],[11,"opcode","","",104,[[["self"]],["u16"]]],[11,"child","","",104,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",104,N],[11,"into_raw","","",104,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",104,N],[11,"as_raw_c_in","","",104,[[["self"],["f"]],["t"]]],[11,"c_interface","","",103,N],[11,"initialize","wayland_client::sys::client","",110,N],[11,"initialize","","",111,N],[11,"deref","","",111,[[["self"]],["waylandclient"]]],[11,"deref","","",110,[[["self"]],["option"]]],[11,"sync","wayland_client","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_registry","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"bind","","",9,[[["self"],["u32"],["u32"],["f"]],["result",["proxy"]]]],[11,"create_surface","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"create_region","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"create_buffer","","",9,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"],["f"]],["result",["proxy"]]]],[11,"destroy","","",9,N],[11,"resize","","",9,N],[11,"create_pool","","",9,[[["self"],["rawfd"],["i32"],["f"]],["result",["proxy"]]]],[11,"destroy","","",9,N],[11,"accept","","",9,N],[11,"receive","","",9,N],[11,"destroy","","",9,N],[11,"finish","","",9,N],[11,"set_actions","","",9,N],[11,"offer","","",9,N],[11,"destroy","","",9,N],[11,"set_actions","","",9,N],[11,"start_drag","","",9,N],[11,"set_selection","","",9,N],[11,"release","","",9,N],[11,"create_data_source","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_data_device","","",9,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[11,"get_shell_surface","","",9,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[11,"pong","","",9,N],[11,"_move","","",9,N],[11,"resize","","",9,N],[11,"set_toplevel","","",9,N],[11,"set_transient","","",9,N],[11,"set_fullscreen","","",9,N],[11,"set_popup","","",9,N],[11,"set_maximized","","",9,N],[11,"set_title","","",9,N],[11,"set_class","","",9,N],[11,"destroy","","",9,N],[11,"attach","","",9,N],[11,"damage","","",9,N],[11,"frame","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"set_opaque_region","","",9,N],[11,"set_input_region","","",9,N],[11,"commit","","",9,N],[11,"set_buffer_transform","","",9,N],[11,"set_buffer_scale","","",9,N],[11,"damage_buffer","","",9,N],[11,"get_pointer","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_keyboard","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"get_touch","","",9,[[["self"],["f"]],["result",["proxy"]]]],[11,"release","","",9,N],[11,"set_cursor","","",9,N],[11,"release","","",9,N],[11,"release","","",9,N],[11,"release","","",9,N],[11,"release","","",9,N],[11,"destroy","","",9,N],[11,"add","","",9,N],[11,"subtract","","",9,N],[11,"destroy","","",9,N],[11,"get_subsurface","","",9,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[11,"destroy","","",9,N],[11,"set_position","","",9,N],[11,"place_above","","",9,N],[11,"place_below","","",9,N],[11,"set_sync","","",9,N],[11,"set_desync","","",9,N],[11,"clone","","",8,[[["self"]],["globalmanager"]]],[11,"clone","","",9,[[["self"]],["proxy"]]],[11,"clone","wayland_client::protocol::wl_display","",21,[[["self"]],["error"]]],[11,"clone","wayland_client::protocol::wl_shm","",33,[[["self"]],["error"]]],[11,"clone","","",34,[[["self"]],["format"]]],[11,"clone","wayland_client::protocol::wl_data_offer","",41,[[["self"]],["error"]]],[11,"clone","wayland_client::protocol::wl_data_source","",45,[[["self"]],["error"]]],[11,"clone","wayland_client::protocol::wl_data_device","",49,[[["self"]],["error"]]],[11,"clone","wayland_client::protocol::wl_data_device_manager","",97,[[["self"]],["dndaction"]]],[11,"clone","wayland_client::protocol::wl_shell","",55,[[["self"]],["error"]]],[11,"clone","wayland_client::protocol::wl_shell_surface","",98,[[["self"]],["resize"]]],[11,"clone","","",99,[[["self"]],["transient"]]],[11,"clone","","",58,[[["self"]],["fullscreenmethod"]]],[11,"clone","wayland_client::protocol::wl_surface","",62,[[["self"]],["error"]]],[11,"clone","wayland_client::protocol::wl_seat","",100,[[["self"]],["capability"]]],[11,"clone","wayland_client::protocol::wl_pointer","",69,[[["self"]],["error"]]],[11,"clone","","",70,[[["self"]],["buttonstate"]]],[11,"clone","","",71,[[["self"]],["axis"]]],[11,"clone","","",72,[[["self"]],["axissource"]]],[11,"clone","wayland_client::protocol::wl_keyboard","",76,[[["self"]],["keymapformat"]]],[11,"clone","","",77,[[["self"]],["keystate"]]],[11,"clone","wayland_client::protocol::wl_output","",84,[[["self"]],["subpixel"]]],[11,"clone","","",85,[[["self"]],["transform"]]],[11,"clone","","",101,[[["self"]],["mode"]]],[11,"clone","wayland_client::protocol::wl_subcompositor","",91,[[["self"]],["error"]]],[11,"clone","wayland_client::protocol::wl_subsurface","",94,[[["self"]],["error"]]],[11,"extend","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["t"]]]],[11,"extend","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["t"]]]],[11,"extend","","",99,[[["self"],["t"]]]],[11,"extend","wayland_client::protocol::wl_seat","",100,[[["self"],["t"]]]],[11,"extend","wayland_client::protocol::wl_output","",101,[[["self"],["t"]]]],[11,"drop","wayland_client","",7,[[["self"]]]],[11,"drop","wayland_client::cursor","",11,[[["self"]]]],[11,"drop","wayland_client::egl","",13,[[["self"]]]],[11,"partial_cmp","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",97,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",97,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",97,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",97,[[["self"],["dndaction"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",98,[[["self"],["resize"]],["bool"]]],[11,"le","","",98,[[["self"],["resize"]],["bool"]]],[11,"gt","","",98,[[["self"],["resize"]],["bool"]]],[11,"ge","","",98,[[["self"],["resize"]],["bool"]]],[11,"partial_cmp","","",99,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",99,[[["self"],["transient"]],["bool"]]],[11,"le","","",99,[[["self"],["transient"]],["bool"]]],[11,"gt","","",99,[[["self"],["transient"]],["bool"]]],[11,"ge","","",99,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_seat","",100,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",100,[[["self"],["capability"]],["bool"]]],[11,"le","","",100,[[["self"],["capability"]],["bool"]]],[11,"gt","","",100,[[["self"],["capability"]],["bool"]]],[11,"ge","","",100,[[["self"],["capability"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_output","",101,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",101,[[["self"],["mode"]],["bool"]]],[11,"le","","",101,[[["self"],["mode"]],["bool"]]],[11,"gt","","",101,[[["self"],["mode"]],["bool"]]],[11,"ge","","",101,[[["self"],["mode"]],["bool"]]],[11,"eq","wayland_client","",3,[[["self"],["globalerror"]],["bool"]]],[11,"ne","","",3,[[["self"],["globalerror"]],["bool"]]],[11,"eq","","",9,[[["self"],["proxy"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_display","",21,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shm","",33,[[["self"],["error"]],["bool"]]],[11,"eq","","",34,[[["self"],["format"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_offer","",41,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_source","",45,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device","",49,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",97,[[["self"],["dndaction"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell","",55,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["resize"]],["bool"]]],[11,"ne","","",98,[[["self"],["resize"]],["bool"]]],[11,"eq","","",99,[[["self"],["transient"]],["bool"]]],[11,"ne","","",99,[[["self"],["transient"]],["bool"]]],[11,"eq","","",58,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_surface","",62,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_seat","",100,[[["self"],["capability"]],["bool"]]],[11,"ne","","",100,[[["self"],["capability"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_pointer","",69,[[["self"],["error"]],["bool"]]],[11,"eq","","",70,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",71,[[["self"],["axis"]],["bool"]]],[11,"eq","","",72,[[["self"],["axissource"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_keyboard","",76,[[["self"],["keymapformat"]],["bool"]]],[11,"eq","","",77,[[["self"],["keystate"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_output","",84,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",85,[[["self"],["transform"]],["bool"]]],[11,"eq","","",101,[[["self"],["mode"]],["bool"]]],[11,"ne","","",101,[[["self"],["mode"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subcompositor","",91,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subsurface","",94,[[["self"],["error"]],["bool"]]],[11,"cmp","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["dndaction"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["resize"]],["ordering"]]],[11,"cmp","","",99,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_seat","",100,[[["self"],["capability"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_output","",101,[[["self"],["mode"]],["ordering"]]],[11,"hash","wayland_client::protocol::wl_data_device_manager","",97,N],[11,"hash","wayland_client::protocol::wl_shell_surface","",98,N],[11,"hash","","",99,N],[11,"hash","wayland_client::protocol::wl_seat","",100,N],[11,"hash","wayland_client::protocol::wl_output","",101,N],[11,"fmt","wayland_client","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_display","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shm","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_offer","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_source","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_surface","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_pointer","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_keyboard","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subcompositor","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subsurface","",94,[[["self"],["formatter"]],["result"]]],[11,"sub","wayland_client::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",97,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub","wayland_client::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",98,[[["self"],["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",99,[[["self"],["transient"]],["transient"]]],[11,"sub","wayland_client::protocol::wl_seat","Returns the set difference of the two sets of flags.",100,[[["self"],["capability"]],["capability"]]],[11,"sub","wayland_client::protocol::wl_output","Returns the set difference of the two sets of flags.",101,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags enabled in the set.",97,[[["self"],["dndaction"]]]],[11,"sub_assign","wayland_client::protocol::wl_shell_surface","Disables all flags enabled in the set.",98,[[["self"],["resize"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",99,[[["self"],["transient"]]]],[11,"sub_assign","wayland_client::protocol::wl_seat","Disables all flags enabled in the set.",100,[[["self"],["capability"]]]],[11,"sub_assign","wayland_client::protocol::wl_output","Disables all flags enabled in the set.",101,[[["self"],["mode"]]]],[11,"not","wayland_client::protocol::wl_data_device_manager","Returns the complement of this set of flags.",97,[[["self"]],["dndaction"]]],[11,"not","wayland_client::protocol::wl_shell_surface","Returns the complement of this set of flags.",98,[[["self"]],["resize"]]],[11,"not","","Returns the complement of this set of flags.",99,[[["self"]],["transient"]]],[11,"not","wayland_client::protocol::wl_seat","Returns the complement of this set of flags.",100,[[["self"]],["capability"]]],[11,"not","wayland_client::protocol::wl_output","Returns the complement of this set of flags.",101,[[["self"]],["mode"]]],[11,"bitand","wayland_client::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",97,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand","wayland_client::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",98,[[["self"],["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",99,[[["self"],["transient"]],["transient"]]],[11,"bitand","wayland_client::protocol::wl_seat","Returns the intersection between the two sets of flags.",100,[[["self"],["capability"]],["capability"]]],[11,"bitand","wayland_client::protocol::wl_output","Returns the intersection between the two sets of flags.",101,[[["self"],["mode"]],["mode"]]],[11,"bitor","wayland_client::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",97,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor","wayland_client::protocol::wl_shell_surface","Returns the union of the two sets of flags.",98,[[["self"],["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",99,[[["self"],["transient"]],["transient"]]],[11,"bitor","wayland_client::protocol::wl_seat","Returns the union of the two sets of flags.",100,[[["self"],["capability"]],["capability"]]],[11,"bitor","wayland_client::protocol::wl_output","Returns the union of the two sets of flags.",101,[[["self"],["mode"]],["mode"]]],[11,"bitxor","wayland_client::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags toggled.",97,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_client::protocol::wl_shell_surface","Returns the left flags, but with all the right flags toggled.",98,[[["self"],["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",99,[[["self"],["transient"]],["transient"]]],[11,"bitxor","wayland_client::protocol::wl_seat","Returns the left flags, but with all the right flags toggled.",100,[[["self"],["capability"]],["capability"]]],[11,"bitxor","wayland_client::protocol::wl_output","Returns the left flags, but with all the right flags toggled.",101,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags disabled in the set.",97,[[["self"],["dndaction"]]]],[11,"bitand_assign","wayland_client::protocol::wl_shell_surface","Disables all flags disabled in the set.",98,[[["self"],["resize"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",99,[[["self"],["transient"]]]],[11,"bitand_assign","wayland_client::protocol::wl_seat","Disables all flags disabled in the set.",100,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_client::protocol::wl_output","Disables all flags disabled in the set.",101,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_client::protocol::wl_data_device_manager","Adds the set of flags.",97,[[["self"],["dndaction"]]]],[11,"bitor_assign","wayland_client::protocol::wl_shell_surface","Adds the set of flags.",98,[[["self"],["resize"]]]],[11,"bitor_assign","","Adds the set of flags.",99,[[["self"],["transient"]]]],[11,"bitor_assign","wayland_client::protocol::wl_seat","Adds the set of flags.",100,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_client::protocol::wl_output","Adds the set of flags.",101,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_data_device_manager","Toggles the set of flags.",97,[[["self"],["dndaction"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_shell_surface","Toggles the set of flags.",98,[[["self"],["resize"]]]],[11,"bitxor_assign","","Toggles the set of flags.",99,[[["self"],["transient"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_seat","Toggles the set of flags.",100,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_output","Toggles the set of flags.",101,[[["self"],["mode"]]]],[11,"deref","wayland_client","",5,[[["self"]],["proxy"]]],[11,"deref","wayland_client::cursor","",106,[[["self"]],["proxy"]]],[11,"from_iter","wayland_client::protocol::wl_data_device_manager","",97,[[["t"]],["dndaction"]]],[11,"from_iter","wayland_client::protocol::wl_shell_surface","",98,[[["t"]],["resize"]]],[11,"from_iter","","",99,[[["t"]],["transient"]]],[11,"from_iter","wayland_client::protocol::wl_seat","",100,[[["t"]],["capability"]]],[11,"from_iter","wayland_client::protocol::wl_output","",101,[[["t"]],["mode"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",101,[[["self"],["formatter"]],["result"]]],[11,"interest","wayland_client","",6,[[["self"]],["ready"]]],[11,"pollopts","","",6,[[["self"]],["pollopt"]]],[11,"make_dispatcher","","",6,[[["self"],["f"]],["rc",["refcell"]]]],[11,"register","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"reregister","","",6,[[["self"],["poll"],["token"],["ready"],["pollopt"]],["result"]]],[11,"deregister","","",6,[[["self"],["poll"]],["result"]]],[11,"is_destructor","wayland_client::protocol::wl_display","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",22,N],[11,"as_raw_c_in","","",22,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_registry","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",25,N],[11,"into_raw","","",25,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",25,N],[11,"as_raw_c_in","","",25,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",26,N],[11,"into_raw","","",26,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",26,N],[11,"as_raw_c_in","","",26,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_callback","",115,[[["self"]],["bool"]]],[11,"opcode","","",115,[[["self"]],["u16"]]],[11,"child","","",115,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",115,N],[11,"into_raw","","",115,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",115,N],[11,"as_raw_c_in","","",115,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",28,N],[11,"into_raw","","",28,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",28,N],[11,"as_raw_c_in","","",28,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_compositor","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",29,N],[11,"into_raw","","",29,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",29,N],[11,"as_raw_c_in","","",29,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",117,[[["self"]],["bool"]]],[11,"opcode","","",117,[[["self"]],["u16"]]],[11,"child","","",117,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",117,N],[11,"into_raw","","",117,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",117,N],[11,"as_raw_c_in","","",117,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",31,N],[11,"into_raw","","",31,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",31,N],[11,"as_raw_c_in","","",31,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",119,[[["self"]],["bool"]]],[11,"opcode","","",119,[[["self"]],["u16"]]],[11,"child","","",119,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",119,N],[11,"into_raw","","",119,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",119,N],[11,"as_raw_c_in","","",119,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shm","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",35,N],[11,"into_raw","","",35,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",35,N],[11,"as_raw_c_in","","",35,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",36,N],[11,"into_raw","","",36,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",36,N],[11,"as_raw_c_in","","",36,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_buffer","",38,[[["self"]],["bool"]]],[11,"opcode","","",38,[[["self"]],["u16"]]],[11,"child","","",38,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",38,N],[11,"into_raw","","",38,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",38,N],[11,"as_raw_c_in","","",38,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",39,N],[11,"into_raw","","",39,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",39,N],[11,"as_raw_c_in","","",39,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_offer","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",42,N],[11,"into_raw","","",42,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",42,N],[11,"as_raw_c_in","","",42,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_source","",46,[[["self"]],["bool"]]],[11,"opcode","","",46,[[["self"]],["u16"]]],[11,"child","","",46,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",46,N],[11,"into_raw","","",46,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",46,N],[11,"as_raw_c_in","","",46,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",47,N],[11,"into_raw","","",47,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",47,N],[11,"as_raw_c_in","","",47,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",50,N],[11,"into_raw","","",50,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",50,N],[11,"as_raw_c_in","","",50,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",51,N],[11,"into_raw","","",51,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device_manager","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",53,N],[11,"into_raw","","",53,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",53,N],[11,"as_raw_c_in","","",53,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",126,[[["self"]],["bool"]]],[11,"opcode","","",126,[[["self"]],["u16"]]],[11,"child","","",126,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",126,N],[11,"into_raw","","",126,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",126,N],[11,"as_raw_c_in","","",126,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shell","",56,[[["self"]],["bool"]]],[11,"opcode","","",56,[[["self"]],["u16"]]],[11,"child","","",56,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",56,N],[11,"into_raw","","",56,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",56,N],[11,"as_raw_c_in","","",56,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",128,[[["self"]],["bool"]]],[11,"opcode","","",128,[[["self"]],["u16"]]],[11,"child","","",128,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",128,N],[11,"into_raw","","",128,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",128,N],[11,"as_raw_c_in","","",128,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shell_surface","",59,[[["self"]],["bool"]]],[11,"opcode","","",59,[[["self"]],["u16"]]],[11,"child","","",59,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",59,N],[11,"into_raw","","",59,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",59,N],[11,"as_raw_c_in","","",59,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",60,N],[11,"into_raw","","",60,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_surface","",63,[[["self"]],["bool"]]],[11,"opcode","","",63,[[["self"]],["u16"]]],[11,"child","","",63,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",63,N],[11,"into_raw","","",63,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",63,N],[11,"as_raw_c_in","","",63,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",64,[[["self"]],["bool"]]],[11,"opcode","","",64,[[["self"]],["u16"]]],[11,"child","","",64,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",64,N],[11,"into_raw","","",64,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",64,N],[11,"as_raw_c_in","","",64,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_seat","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",66,N],[11,"into_raw","","",66,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",66,N],[11,"as_raw_c_in","","",66,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",67,N],[11,"into_raw","","",67,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_pointer","",73,[[["self"]],["bool"]]],[11,"opcode","","",73,[[["self"]],["u16"]]],[11,"child","","",73,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",73,N],[11,"into_raw","","",73,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",73,N],[11,"as_raw_c_in","","",73,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",74,[[["self"]],["bool"]]],[11,"opcode","","",74,[[["self"]],["u16"]]],[11,"child","","",74,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",74,N],[11,"into_raw","","",74,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",74,N],[11,"as_raw_c_in","","",74,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_keyboard","",78,[[["self"]],["bool"]]],[11,"opcode","","",78,[[["self"]],["u16"]]],[11,"child","","",78,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",78,N],[11,"into_raw","","",78,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",78,N],[11,"as_raw_c_in","","",78,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",79,[[["self"]],["bool"]]],[11,"opcode","","",79,[[["self"]],["u16"]]],[11,"child","","",79,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",79,N],[11,"into_raw","","",79,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",79,N],[11,"as_raw_c_in","","",79,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_touch","",81,[[["self"]],["bool"]]],[11,"opcode","","",81,[[["self"]],["u16"]]],[11,"child","","",81,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",81,N],[11,"into_raw","","",81,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",81,N],[11,"as_raw_c_in","","",81,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",82,N],[11,"into_raw","","",82,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",82,N],[11,"as_raw_c_in","","",82,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_output","",86,[[["self"]],["bool"]]],[11,"opcode","","",86,[[["self"]],["u16"]]],[11,"child","","",86,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",86,N],[11,"into_raw","","",86,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",86,N],[11,"as_raw_c_in","","",86,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",87,[[["self"]],["bool"]]],[11,"opcode","","",87,[[["self"]],["u16"]]],[11,"child","","",87,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",87,N],[11,"into_raw","","",87,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",87,N],[11,"as_raw_c_in","","",87,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_region","",89,[[["self"]],["bool"]]],[11,"opcode","","",89,[[["self"]],["u16"]]],[11,"child","","",89,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",89,N],[11,"into_raw","","",89,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",89,N],[11,"as_raw_c_in","","",89,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",137,[[["self"]],["bool"]]],[11,"opcode","","",137,[[["self"]],["u16"]]],[11,"child","","",137,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",137,N],[11,"into_raw","","",137,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",137,N],[11,"as_raw_c_in","","",137,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_subcompositor","",92,[[["self"]],["bool"]]],[11,"opcode","","",92,[[["self"]],["u16"]]],[11,"child","","",92,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",92,N],[11,"into_raw","","",92,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",92,N],[11,"as_raw_c_in","","",92,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",139,[[["self"]],["bool"]]],[11,"opcode","","",139,[[["self"]],["u16"]]],[11,"child","","",139,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",139,N],[11,"into_raw","","",139,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",139,N],[11,"as_raw_c_in","","",139,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_subsurface","",95,[[["self"]],["bool"]]],[11,"opcode","","",95,[[["self"]],["u16"]]],[11,"child","","",95,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",95,N],[11,"into_raw","","",95,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",95,N],[11,"as_raw_c_in","","",95,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",141,[[["self"]],["bool"]]],[11,"opcode","","",141,[[["self"]],["u16"]]],[11,"child","","",141,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",141,N],[11,"into_raw","","",141,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",141,N],[11,"as_raw_c_in","","",141,[[["self"],["f"]],["t"]]],[11,"c_interface","wayland_client::protocol::wl_display","",112,N],[11,"c_interface","wayland_client::protocol::wl_registry","",113,N],[11,"c_interface","wayland_client::protocol::wl_callback","",114,N],[11,"c_interface","wayland_client::protocol::wl_compositor","",116,N],[11,"c_interface","wayland_client::protocol::wl_shm_pool","",118,N],[11,"c_interface","wayland_client::protocol::wl_shm","",120,N],[11,"c_interface","wayland_client::protocol::wl_buffer","",121,N],[11,"c_interface","wayland_client::protocol::wl_data_offer","",122,N],[11,"c_interface","wayland_client::protocol::wl_data_source","",123,N],[11,"c_interface","wayland_client::protocol::wl_data_device","",124,N],[11,"c_interface","wayland_client::protocol::wl_data_device_manager","",125,N],[11,"c_interface","wayland_client::protocol::wl_shell","",127,N],[11,"c_interface","wayland_client::protocol::wl_shell_surface","",129,N],[11,"c_interface","wayland_client::protocol::wl_surface","",130,N],[11,"c_interface","wayland_client::protocol::wl_seat","",131,N],[11,"c_interface","wayland_client::protocol::wl_pointer","",132,N],[11,"c_interface","wayland_client::protocol::wl_keyboard","",133,N],[11,"c_interface","wayland_client::protocol::wl_touch","",134,N],[11,"c_interface","wayland_client::protocol::wl_output","",135,N],[11,"c_interface","wayland_client::protocol::wl_region","",136,N],[11,"c_interface","wayland_client::protocol::wl_subcompositor","",138,N],[11,"c_interface","wayland_client::protocol::wl_subsurface","",140,N],[11,"error","wayland_client","A global was advertised but its version was lower than the minimal version you requested.",102,[[["self"],["u32"]]]],[11,"open","wayland_client::sys::client","",15,[[["str"]],["result",["waylandclient","dlerror"]]]]],"paths":[[8,"Interface"],[8,"MessageGroup"],[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"NewProxy"],[3,"CursorTheme"],[3,"Cursor"],[3,"WlEglSurface"],[4,"ProxyMap"],[3,"WaylandClient"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[3,"DndAction"],[3,"Resize"],[3,"Transient"],[3,"Capability"],[3,"Mode"],[8,"GlobalImplementor"],[3,"AnonymousObject"],[4,"NoMessage"],[3,"QueueToken"],[3,"CursorImageBuffer"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WlDisplay"],[3,"WlRegistry"],[3,"WlCallback"],[4,"Request"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[4,"Event"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[4,"Event"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"Event"]]};
searchIndex["wayland_commons"]={"doc":"Common definitions for wayland","items":[[3,"AnonymousObject","wayland_commons","Anonymous interface",N,N],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[0,"map","","Wayland objects map",N,N],[3,"Object","wayland_commons::map","The representation of a protocol object",N,N],[12,"interface","","Interface name of this object",0,N],[12,"version","","Version of this object",0,N],[12,"requests","","Description of the requests of this object",0,N],[12,"events","","Description of the events of this object",0,N],[12,"meta","","Metadata associated to this object (ex: its event queue client side)",0,N],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this event if any",0,N],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this request if any",0,N],[3,"ObjectMap","","A holder for the object store of a connection",N,N],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created objects IDs in the namespace",N,N],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation may attach to an object.",N,N],[10,"child","","Create the metadata for a child object",1,[[["self"]],["self"]]],[11,"from_interface","","Create an Object corresponding to given interface and version",0,[[["u32"],["meta"]],["object"]]],[11,"event_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given event opcode",0,[[["self"],["u16"]],["option",["object"]]]],[11,"request_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given request opcode",0,[[["self"],["u16"]],["option",["object"]]]],[11,"is_interface","","Check whether this object is of given interface",0,[[["self"]],["bool"]]],[11,"placeholder","","Create a placeholder object that will be filled-in by the message logic",0,[[["meta"]],["object"]]],[11,"new","","Create a new empty object map",2,[[],["objectmap"]]],[11,"find","","Find an object in the store",2,[[["self"],["u32"]],["option",["object"]]]],[11,"remove","","Remove an object from the store",2,[[["self"],["u32"]]]],[11,"insert_at","","Insert given object for given id",2,[[["self"],["u32"],["object"]],["result"]]],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",2,[[["self"],["object"]],["u32"]]],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",2,[[["self"],["object"]],["u32"]]],[11,"with","","Mutably access an object of the map",2,[[["self"],["u32"],["f"]],["result"]]],[11,"with_all","","Mutably access all objects of the map in sequence",2,[[["self"],["f"]]]],[0,"socket","wayland_commons","Wayland socket manipulation",N,N],[3,"Socket","wayland_commons::socket","A wayland socket",N,N],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles buffering and conversion from/to wayland messages",N,N],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket message",N,N],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single socket message",N,N],[11,"send_msg","","Send a single message to the socket",3,N],[11,"rcv_msg","","Receive a single message from the socket",3,N],[11,"new","","Wrap a Socket into a Buffered Socket",4,[[["socket"]],["bufferedsocket"]]],[11,"get_socket","","Get direct access to the underlying socket",4,[[["self"]],["socket"]]],[11,"into_socket","","Retrieve ownership of the underlying Socket",4,[[["self"]],["socket"]]],[11,"flush","","Flush the contents of the outgoing buffer into the socket",4,[[["self"]],["nixresult"]]],[11,"write_message","","Write a message to the outgoing buffer",4,[[["self"],["message"]],["nixresult"]]],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to prepare a new round of parsing.",4,[[["self"]],["nixresult"]]],[11,"read_one_message","","Read and deserialize a single message from the incoming buffers socket",4,[[["self"],["f"]],["result",["message","messageparseerror"]]]],[11,"read_messages","","Read and deserialize messages from the socket",4,[[["self"],["f1"],["f2"]],["nixresult",["result"]]]],[0,"utils","wayland_commons","Various utilities used for other implementations",N,N],[3,"UserData","wayland_commons::utils","A wrapper for user data, able to store any type, and correctly handling access from a wrong thread",N,N],[3,"UserDataMap","","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",N,N],[11,"new_threadsafe","","Create a new `UserData` using a threadsafe type",5,[[["t"]],["userdata"]]],[11,"new","","Create a new `UserData` using a non-threadsafe type",5,[[["t"]],["userdata"]]],[11,"empty","","Create a new `UserData` containing nothing",5,[[],["userdata"]]],[11,"get","","Attempt to access the wrapped user data",5,[[["self"]],["option"]]],[11,"new","","Create a new map",6,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",6,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",6,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",6,[[["self"],["f"]],["bool"]]],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the wire format",N,N],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",N,N],[12,"name","","Name of this message",7,N],[12,"signature","","Signature of the message",7,N],[12,"since","","Minimum required version of the interface",7,N],[3,"Message","","A wire message",N,N],[12,"sender_id","","ID of the object sending this message",8,N],[12,"opcode","","Opcode of the message",8,N],[12,"args","","Arguments of the message",8,N],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",N,N],[13,"Int","","i32",9,N],[13,"Uint","","u32",9,N],[13,"Fixed","","fixed point, 1/256 precision",9,N],[13,"Str","","CString",9,N],[13,"Object","","id of a wayland object",9,N],[13,"NewId","","id of a newly created wayland object",9,N],[13,"Array","","Vec",9,N],[13,"Fd","","RawFd",9,N],[4,"Argument","","Enum of possible argument as recognized by the wire, including values",N,N],[13,"Int","","i32",10,N],[13,"Uint","","u32",10,N],[13,"Fixed","","fixed point, 1/256 precision",10,N],[13,"Str","","CString",10,N],[13,"Object","","id of a wayland object",10,N],[13,"NewId","","id of a newly created wayland object",10,N],[13,"Array","","Vec",10,N],[13,"Fd","","RawFd",10,N],[4,"MessageWriteError","","Error generated when trying to serialize a message into buffers",N,N],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",11,N],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",11,N],[4,"MessageParseError","","Error generated when trying to deserialize a message from buffers",N,N],[13,"MissingFD","","The message references a FD but the buffer FD is empty",12,N],[13,"MissingData","","More data is needed to deserialize the message",12,N],[13,"Malformed","","The message is malformed and cannot be parsed",12,N],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",N,[[["rawfd"]],["nixresult",["rawfd"]]]],[11,"get_type","","Retrieve the type of a given argument instance",10,[[["self"]],["argumenttype"]]],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",8,N],[11,"from_raw","","Attempts to parse a single wayland message with the given signature.",8,N],[8,"MessageGroup","wayland_commons","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",13,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",13,N],[10,"opcode","","The opcode of this message",13,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",13,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",13,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",13,N],[10,"into_raw","","Turn this message into its raw representation",13,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",13,N],[10,"as_raw_c_in","","Build a C representation of this message",13,[[["self"],["f"]],["t"]]],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",14,N],[16,"Event","","Set of events associated to this interface",14,N],[18,"NAME","","Name of this interface",14,N],[18,"VERSION","","Maximum supported version of this interface",14,N],[10,"c_interface","","Pointer to the C representation of this interface",14,N],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","wayland_commons::map","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","wayland_commons::socket","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_commons::utils","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","wayland_commons::wire","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"is_destructor","wayland_commons","",16,[[["self"]],["bool"]]],[11,"opcode","","",16,[[["self"]],["u16"]]],[11,"child","","",16,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",16,N],[11,"into_raw","","",16,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",16,N],[11,"as_raw_c_in","","",16,[[["self"],["f"]],["t"]]],[11,"c_interface","","",15,N],[11,"clone","wayland_commons::map","",0,[[["self"]],["object"]]],[11,"clone","wayland_commons::wire","",9,[[["self"]],["argumenttype"]]],[11,"clone","","",10,[[["self"]],["argument"]]],[11,"clone","","",8,[[["self"]],["message"]]],[11,"clone","","",11,[[["self"]],["messagewriteerror"]]],[11,"clone","","",12,[[["self"]],["messageparseerror"]]],[11,"drop","wayland_commons::socket","",3,[[["self"]]]],[11,"eq","wayland_commons::wire","",9,[[["self"],["argumenttype"]],["bool"]]],[11,"eq","","",10,[[["self"],["argument"]],["bool"]]],[11,"ne","","",10,[[["self"],["argument"]],["bool"]]],[11,"eq","","",8,[[["self"],["message"]],["bool"]]],[11,"ne","","",8,[[["self"],["message"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"from_raw_fd","wayland_commons::socket","",3,[[["rawfd"]],["socket"]]],[11,"into_raw_fd","","",3,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",3,[[["self"]],["rawfd"]]]],"paths":[[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[3,"AnonymousObject"],[4,"NoMessage"]]};
searchIndex["wayland_protocols"]={"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",N,N],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",N,N],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",N,N],[0,"client","wayland_protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",N,N],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[4,"Capability","","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",0,N],[13,"CursorPlane","","compositor has a separate cursor plane",0,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",1,N],[13,"Center","","center the surface on the output",1,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",1,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",1,N],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",1,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",2,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",3,N],[13,"PresentSurface","","present surface for display",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"method","","",3,N],[12,"output","","",3,N],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","present surface for display at a particular mode",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"output","","",3,N],[12,"framerate","","",3,N],[12,"feedback","","",3,N],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",4,N],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event","",4,N],[8,"RequestsTrait","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[10,"release","","release the wl_fullscreen_shell interface",5,N],[10,"present_surface","","present surface for display",5,N],[10,"present_surface_for_mode","","present surface for display at a particular mode",5,[[["self"],["proxy"],["proxy"],["i32"],["f"]],["result",["proxy"]]]],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","",N,N],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",6,N],[13,"ModeFailed","","mode switch failed",6,N],[13,"PresentCancelled","","mode switch cancelled",6,N],[8,"RequestsTrait","","",N,N],[0,"server","wayland_protocols::unstable::fullscreen_shell::v1","Server-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","displays a single surface per output",N,N],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",N,N],[4,"Capability","","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",7,N],[13,"CursorPlane","","compositor has a separate cursor plane",7,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",8,N],[13,"Center","","center the surface on the output",8,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",8,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",8,N],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",8,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",9,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",10,N],[13,"PresentSurface","","present surface for display",10,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",10,N],[12,"method","","",10,N],[12,"output","","",10,N],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","present surface for display at a particular mode",10,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",10,N],[12,"output","","",10,N],[12,"framerate","","",10,N],[12,"feedback","","",10,N],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",11,N],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Event","",11,N],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","",N,N],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",12,N],[13,"ModeFailed","","mode switch failed",12,N],[13,"PresentCancelled","","mode switch cancelled",12,N],[0,"c_interfaces","wayland_protocols::unstable::fullscreen_shell::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::fullscreen_shell::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"zwp_fullscreen_shell_v1_requests","","",N,N],[7,"zwp_fullscreen_shell_v1_events","","",N,N],[7,"zwp_fullscreen_shell_v1_interface","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_events","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",0,[[["self"]],["u32"]]],[11,"from_raw","","",1,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",1,[[["self"]],["u32"]]],[11,"from_raw","","",2,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",2,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",7,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",7,[[["self"]],["u32"]]],[11,"from_raw","","",8,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",8,[[["self"]],["u32"]]],[11,"from_raw","","",9,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",9,[[["self"]],["u32"]]],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",N,N],[0,"v1","wayland_protocols::unstable::idle_inhibit","",N,N],[0,"client","wayland_protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",N,N],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",13,N],[13,"CreateInhibitor","","create a new inhibitor object",13,N],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request","",13,N],[12,"surface","","",13,N],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",14,N],[10,"create_inhibitor","","create a new inhibitor object",14,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",N,N],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",15,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",16,N],[0,"server","wayland_protocols::unstable::idle_inhibit::v1","Server-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::server","control behavior when display idles",N,N],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",17,N],[13,"CreateInhibitor","","create a new inhibitor object",17,N],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1::Request","",17,N],[12,"surface","","",17,N],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",N,N],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::server","context object for inhibiting idle behavior",N,N],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",18,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::unstable::idle_inhibit::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::idle_inhibit::v1::c_interfaces","",N,N],[7,"zwp_idle_inhibit_manager_v1_requests","","",N,N],[7,"zwp_idle_inhibit_manager_v1_interface","","",N,N],[7,"zwp_idle_inhibitor_v1_requests","","",N,N],[7,"zwp_idle_inhibitor_v1_interface","","",N,N],[0,"input_method","wayland_protocols::unstable","Input method protocol",N,N],[0,"v1","wayland_protocols::unstable::input_method","",N,N],[0,"client","wayland_protocols::unstable::input_method::v1","Client-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::client","input method context",N,N],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",19,N],[13,"CommitString","","commit string",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"text","","",19,N],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit string",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"text","","",19,N],[12,"commit","","",19,N],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit styling",19,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"length","","",19,N],[12,"style","","",19,N],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit cursor",19,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","delete text",19,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"length","","",19,N],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","set cursor to a new position",19,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"anchor","","",19,N],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,N],[12,"map","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[13,"Keysym","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","keysym",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"time","","",19,N],[12,"sym","","",19,N],[12,"state","","",19,N],[12,"modifiers","","",19,N],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","grab hardware keyboard",19,N],[12,"keyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[13,"Key","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward key event",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"time","","",19,N],[12,"key","","",19,N],[12,"state","","",19,N],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward modifiers event",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"mods_depressed","","",19,N],[12,"mods_latched","","",19,N],[12,"mods_locked","","",19,N],[12,"group","","",19,N],[13,"Language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"language","","",19,N],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",19,N],[12,"direction","","",19,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",20,N],[12,"text","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",20,N],[12,"cursor","","",20,N],[12,"anchor","","",20,N],[13,"Reset","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",20,N],[13,"ContentType","","",20,N],[12,"hint","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",20,N],[12,"purpose","","",20,N],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",20,N],[12,"button","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",20,N],[12,"index","","",20,N],[13,"CommitState","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",20,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",20,N],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",20,N],[12,"language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",20,N],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",21,N],[10,"commit_string","","commit string",21,N],[10,"preedit_string","","pre-edit string",21,N],[10,"preedit_styling","","pre-edit styling",21,N],[10,"preedit_cursor","","pre-edit cursor",21,N],[10,"delete_surrounding_text","","delete text",21,N],[10,"cursor_position","","set cursor to a new position",21,N],[10,"modifiers_map","","",21,N],[10,"keysym","","keysym",21,N],[10,"grab_keyboard","","grab hardware keyboard",21,[[["self"],["f"]],["result",["proxy"]]]],[10,"key","","forward key event",21,N],[10,"modifiers","","forward modifiers event",21,N],[10,"language","","",21,N],[10,"text_direction","","",21,N],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::client","input method",N,N],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",22,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",22,N],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","deactivate event",22,N],[12,"context","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",22,N],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::client","interface for implementing keyboards",N,N],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[4,"Request","","",N,N],[13,"GetInputPanelSurface","","",23,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request","",23,N],[12,"surface","","",23,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_input_panel_surface","","",24,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::client","",N,N],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",N,N],[4,"Position","","",N,N],[13,"CenterBottom","","",25,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",26,N],[12,"output","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request","",26,N],[12,"position","","",26,N],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","set the surface type as an overlay panel",26,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_toplevel","","set the surface type as a keyboard",27,N],[10,"set_overlay_panel","","set the surface type as an overlay panel",27,N],[0,"server","wayland_protocols::unstable::input_method::v1","Server-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::server","input method context",N,N],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",28,N],[13,"CommitString","","commit string",28,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"text","","",28,N],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit string",28,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"text","","",28,N],[12,"commit","","",28,N],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit styling",28,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"length","","",28,N],[12,"style","","",28,N],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit cursor",28,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","delete text",28,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"length","","",28,N],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","set cursor to a new position",28,N],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"anchor","","",28,N],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,N],[12,"map","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[13,"Keysym","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","keysym",28,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"time","","",28,N],[12,"sym","","",28,N],[12,"state","","",28,N],[12,"modifiers","","",28,N],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","grab hardware keyboard",28,N],[12,"keyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[13,"Key","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward key event",28,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"time","","",28,N],[12,"key","","",28,N],[12,"state","","",28,N],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward modifiers event",28,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"mods_depressed","","",28,N],[12,"mods_latched","","",28,N],[12,"mods_locked","","",28,N],[12,"group","","",28,N],[13,"Language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"language","","",28,N],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",28,N],[12,"direction","","",28,N],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",29,N],[12,"text","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",29,N],[12,"cursor","","",29,N],[12,"anchor","","",29,N],[13,"Reset","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",29,N],[13,"ContentType","","",29,N],[12,"hint","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",29,N],[12,"purpose","","",29,N],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",29,N],[12,"button","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",29,N],[12,"index","","",29,N],[13,"CommitState","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",29,N],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",29,N],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",29,N],[12,"language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",29,N],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::server","input method",N,N],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",30,N],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",30,N],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","deactivate event",30,N],[12,"context","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",30,N],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::server","interface for implementing keyboards",N,N],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",N,N],[4,"Request","","",N,N],[13,"GetInputPanelSurface","","",31,N],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1::Request","",31,N],[12,"surface","","",31,N],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",N,N],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::server","",N,N],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",N,N],[4,"Position","","",N,N],[13,"CenterBottom","","",32,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",33,N],[12,"output","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1::Request","",33,N],[12,"position","","",33,N],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","set the surface type as an overlay panel",33,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::unstable::input_method::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::input_method::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"zwp_input_method_context_v1_requests","","",N,N],[7,"zwp_input_method_context_v1_events","","",N,N],[7,"zwp_input_method_context_v1_interface","","",N,N],[7,"zwp_input_method_v1_events","","",N,N],[7,"zwp_input_method_v1_interface","","",N,N],[7,"zwp_input_panel_v1_requests","","",N,N],[7,"zwp_input_panel_v1_interface","","",N,N],[7,"zwp_input_panel_surface_v1_requests","","",N,N],[7,"zwp_input_panel_surface_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",25,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",25,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",32,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",32,[[["self"]],["u32"]]],[0,"input_timestamps","wayland_protocols::unstable","Input timestamps protocol",N,N],[0,"v1","wayland_protocols::unstable::input_timestamps","",N,N],[0,"client","wayland_protocols::unstable::input_timestamps::v1","Client-side API of this protocol",N,N],[0,"zwp_input_timestamps_manager_v1","wayland_protocols::unstable::input_timestamps::v1::client","context object for high-resolution input timestamps",N,N],[3,"ZwpInputTimestampsManagerV1","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps manager object",34,N],[13,"GetKeyboardTimestamps","","subscribe to high-resolution keyboard timestamp events",34,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request","",34,N],[12,"keyboard","","",34,N],[13,"GetPointerTimestamps","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","subscribe to high-resolution pointer timestamp events",34,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request","",34,N],[12,"pointer","","",34,N],[13,"GetTouchTimestamps","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","subscribe to high-resolution touch timestamp events",34,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request","",34,N],[12,"touch","","",34,N],[4,"Event","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the input timestamps manager object",35,N],[10,"get_keyboard_timestamps","","subscribe to high-resolution keyboard timestamp events",35,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"get_pointer_timestamps","","subscribe to high-resolution pointer timestamp events",35,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"get_touch_timestamps","","subscribe to high-resolution touch timestamp events",35,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_input_timestamps_v1","wayland_protocols::unstable::input_timestamps::v1::client","context object for input timestamps",N,N],[3,"ZwpInputTimestampsV1","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps object",36,N],[4,"Event","","",N,N],[13,"Timestamp","","high-resolution timestamp event",37,N],[12,"tv_sec_hi","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1::Event","",37,N],[12,"tv_sec_lo","","",37,N],[12,"tv_nsec","","",37,N],[8,"RequestsTrait","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",N,N],[10,"destroy","","destroy the input timestamps object",38,N],[0,"server","wayland_protocols::unstable::input_timestamps::v1","Server-side API of this protocol",N,N],[0,"zwp_input_timestamps_manager_v1","wayland_protocols::unstable::input_timestamps::v1::server","context object for high-resolution input timestamps",N,N],[3,"ZwpInputTimestampsManagerV1","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps manager object",39,N],[13,"GetKeyboardTimestamps","","subscribe to high-resolution keyboard timestamp events",39,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",39,N],[12,"keyboard","","",39,N],[13,"GetPointerTimestamps","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","subscribe to high-resolution pointer timestamp events",39,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",39,N],[12,"pointer","","",39,N],[13,"GetTouchTimestamps","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","subscribe to high-resolution touch timestamp events",39,N],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",39,N],[12,"touch","","",39,N],[4,"Event","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",N,N],[0,"zwp_input_timestamps_v1","wayland_protocols::unstable::input_timestamps::v1::server","context object for input timestamps",N,N],[3,"ZwpInputTimestampsV1","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input timestamps object",40,N],[4,"Event","","",N,N],[13,"Timestamp","","high-resolution timestamp event",41,N],[12,"tv_sec_hi","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1::Event","",41,N],[12,"tv_sec_lo","","",41,N],[12,"tv_nsec","","",41,N],[0,"c_interfaces","wayland_protocols::unstable::input_timestamps::v1","C interfaces for this protocol",N,N],[7,"wl_keyboard_interface","wayland_protocols::unstable::input_timestamps::v1::c_interfaces","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"zwp_input_timestamps_manager_v1_requests","","",N,N],[7,"zwp_input_timestamps_manager_v1_interface","","",N,N],[7,"zwp_input_timestamps_v1_requests","","",N,N],[7,"zwp_input_timestamps_v1_events","","",N,N],[7,"zwp_input_timestamps_v1_interface","","",N,N],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",N,N],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",N,N],[0,"client","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",42,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",43,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",43,N],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",43,N],[12,"surface","","",43,N],[12,"seat","","",43,N],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",44,N],[10,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",44,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",N,N],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",45,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",46,N],[13,"Inactive","","shortcuts are restored",46,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",47,N],[0,"server","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Server-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard grab_manager",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",48,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",49,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",49,N],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",49,N],[12,"surface","","",49,N],[12,"seat","","",49,N],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard shortcuts inhibitor",N,N],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",50,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",51,N],[13,"Inactive","","shortcuts are restored",51,N],[0,"c_interfaces","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","","",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_requests","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_events","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",42,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",42,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",48,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",48,[[["self"]],["u32"]]],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",N,N],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",N,N],[0,"client","wayland_protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",N,N],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unbind the factory",52,N],[13,"CreateParams","","create a temporary object for buffer parameters",52,N],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Request","",52,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",53,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",53,N],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format modifier",53,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",53,N],[12,"modifier_hi","","",53,N],[12,"modifier_lo","","",53,N],[8,"RequestsTrait","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[10,"destroy","","unbind the factory",54,N],[10,"create_params","","create a temporary object for buffer parameters",54,[[["self"],["f"]],["result",["proxy"]]]],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",N,N],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",55,N],[13,"PlaneIdx","","plane index out of bounds",55,N],[13,"PlaneSet","","the plane index was already set",55,N],[13,"Incomplete","","missing or too many planes to create a buffer",55,N],[13,"InvalidFormat","","format not supported",55,N],[13,"InvalidDimensions","","invalid width or height",55,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",55,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",55,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",56,N],[13,"Interlaced","","content is interlaced",56,N],[13,"BottomFirst","","bottom field first",56,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",57,N],[13,"Add","","add a dmabuf to the temporary set",57,N],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",57,N],[12,"plane_idx","","",57,N],[12,"offset","","",57,N],[12,"stride","","",57,N],[12,"modifier_hi","","",57,N],[12,"modifier_lo","","",57,N],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",57,N],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",57,N],[12,"height","","",57,N],[12,"format","","",57,N],[12,"flags","","",57,N],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",57,N],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",57,N],[12,"width","","",57,N],[12,"height","","",57,N],[12,"format","","",57,N],[12,"flags","","",57,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",58,N],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event","",58,N],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation failed",58,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","delete this object, used or not",59,N],[10,"add","","add a dmabuf to the temporary set",59,N],[10,"create","","create a wl_buffer from the given dmabufs",59,N],[10,"create_immed","","immediately create a wl_buffer from the given dmabufs",59,[[["self"],["i32"],["i32"],["u32"],["u32"],["f"]],["result",["proxy"]]]],[0,"server","wayland_protocols::unstable::linux_dmabuf::v1","Server-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","factory for creating dmabuf-based wl_buffers",N,N],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unbind the factory",60,N],[13,"CreateParams","","create a temporary object for buffer parameters",60,N],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Request","",60,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",61,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",61,N],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","supported buffer format modifier",61,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",61,N],[12,"modifier_hi","","",61,N],[12,"modifier_lo","","",61,N],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","parameters for creating a dmabuf-based wl_buffer",N,N],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",62,N],[13,"PlaneIdx","","plane index out of bounds",62,N],[13,"PlaneSet","","the plane index was already set",62,N],[13,"Incomplete","","missing or too many planes to create a buffer",62,N],[13,"InvalidFormat","","format not supported",62,N],[13,"InvalidDimensions","","invalid width or height",62,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",62,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",62,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",63,N],[13,"Interlaced","","content is interlaced",63,N],[13,"BottomFirst","","bottom field first",63,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",64,N],[13,"Add","","add a dmabuf to the temporary set",64,N],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",64,N],[12,"plane_idx","","",64,N],[12,"offset","","",64,N],[12,"stride","","",64,N],[12,"modifier_hi","","",64,N],[12,"modifier_lo","","",64,N],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",64,N],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",64,N],[12,"height","","",64,N],[12,"format","","",64,N],[12,"flags","","",64,N],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",64,N],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",64,N],[12,"width","","",64,N],[12,"height","","",64,N],[12,"format","","",64,N],[12,"flags","","",64,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",65,N],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Event","",65,N],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","buffer creation failed",65,N],[0,"c_interfaces","wayland_protocols::unstable::linux_dmabuf::v1","C interfaces for this protocol",N,N],[7,"wl_buffer_interface","wayland_protocols::unstable::linux_dmabuf::v1::c_interfaces","",N,N],[7,"zwp_linux_dmabuf_v1_requests","","",N,N],[7,"zwp_linux_dmabuf_v1_events","","",N,N],[7,"zwp_linux_dmabuf_v1_interface","","",N,N],[7,"zwp_linux_buffer_params_v1_requests","","",N,N],[7,"zwp_linux_buffer_params_v1_events","","",N,N],[7,"zwp_linux_buffer_params_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",55,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",55,[[["self"]],["u32"]]],[11,"from_raw","","",56,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",56,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",62,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",62,[[["self"]],["u32"]]],[11,"from_raw","","",63,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[0,"linux_explicit_synchronization","wayland_protocols::unstable","Linux explicit synchronization protocol",N,N],[0,"v1","wayland_protocols::unstable::linux_explicit_synchronization","",N,N],[0,"client","wayland_protocols::unstable::linux_explicit_synchronization::v1","Client-side API of this protocol",N,N],[0,"zwp_linux_explicit_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client","protocol for providing explicit synchronization",N,N],[3,"ZwpLinuxExplicitSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"SynchronizationExists","","the surface already has a synchronization object associated",66,N],[4,"Request","","",N,N],[13,"Destroy","","destroy explicit synchronization factory object",67,N],[13,"GetSynchronization","","extend surface interface for explicit synchronization",67,N],[12,"id","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1::Request","",67,N],[12,"surface","","",67,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy explicit synchronization factory object",68,N],[10,"get_synchronization","","extend surface interface for explicit synchronization",68,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_linux_surface_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client","per-surface explicit synchronization support",N,N],[3,"ZwpLinuxSurfaceSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidFence","","the fence specified by the client could not be imported",69,N],[13,"DuplicateFence","","multiple fences added for a single surface commit",69,N],[13,"DuplicateRelease","","multiple releases added for a single surface commit",69,N],[13,"NoSurface","","the associated wl_surface was destroyed",69,N],[13,"UnsupportedBuffer","","the buffer does not support explicit synchronization",69,N],[13,"NoBuffer","","no buffer was attached",69,N],[4,"Request","","",N,N],[13,"Destroy","","destroy synchronization object",70,N],[13,"SetAcquireFence","","set the acquire fence",70,N],[12,"fd","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1::Request","",70,N],[13,"GetRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","release fence for last-attached buffer",70,N],[12,"release","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1::Request","",70,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy synchronization object",71,N],[10,"set_acquire_fence","","set the acquire fence",71,N],[10,"get_release","","release fence for last-attached buffer",71,[[["self"],["f"]],["result",["proxy"]]]],[0,"zwp_linux_buffer_release_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client","buffer release explicit synchronization",N,N],[3,"ZwpLinuxBufferReleaseV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"FencedRelease","","release buffer with fence",72,N],[12,"fence","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1::Event","",72,N],[13,"ImmediateRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","release buffer immediately",72,N],[8,"RequestsTrait","","",N,N],[0,"server","wayland_protocols::unstable::linux_explicit_synchronization::v1","Server-side API of this protocol",N,N],[0,"zwp_linux_explicit_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","protocol for providing explicit synchronization",N,N],[3,"ZwpLinuxExplicitSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"SynchronizationExists","","the surface already has a synchronization object associated",73,N],[4,"Request","","",N,N],[13,"Destroy","","destroy explicit synchronization factory object",74,N],[13,"GetSynchronization","","extend surface interface for explicit synchronization",74,N],[12,"id","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1::Request","",74,N],[12,"surface","","",74,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",N,N],[0,"zwp_linux_surface_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","per-surface explicit synchronization support",N,N],[3,"ZwpLinuxSurfaceSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidFence","","the fence specified by the client could not be imported",75,N],[13,"DuplicateFence","","multiple fences added for a single surface commit",75,N],[13,"DuplicateRelease","","multiple releases added for a single surface commit",75,N],[13,"NoSurface","","the associated wl_surface was destroyed",75,N],[13,"UnsupportedBuffer","","the buffer does not support explicit synchronization",75,N],[13,"NoBuffer","","no buffer was attached",75,N],[4,"Request","","",N,N],[13,"Destroy","","destroy synchronization object",76,N],[13,"SetAcquireFence","","set the acquire fence",76,N],[12,"fd","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1::Request","",76,N],[13,"GetRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","release fence for last-attached buffer",76,N],[12,"release","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1::Request","",76,N],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",N,N],[0,"zwp_linux_buffer_release_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","buffer release explicit synchronization",N,N],[3,"ZwpLinuxBufferReleaseV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"FencedRelease","","release buffer with fence",77,N],[12,"fence","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1::Event","",77,N],[13,"ImmediateRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","release buffer immediately",77,N],[0,"c_interfaces","wayland_protocols::unstable::linux_explicit_synchronization::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::c_interfaces","",N,N],[7,"zwp_linux_explicit_synchronization_v1_requests","","",N,N],[7,"zwp_linux_explicit_synchronization_v1_interface","","",N,N],[7,"zwp_linux_surface_synchronization_v1_requests","","",N,N],[7,"zwp_linux_surface_synchronization_v1_interface","","",N,N],[7,"zwp_linux_buffer_release_v1_events","","",N,N],[7,"zwp_linux_buffer_release_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",66,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",66,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",69,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",69,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",73,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",75,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",75,[[["self"]],["u32"]]],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",N,N],[0,"v1","wayland_protocols::unstable::pointer_constraints","",N,N],[0,"client","wayland_protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",N,N],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[4,"Error","","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",78,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",79,N],[13,"Persistent","","the pointer constraint may reactivate",79,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",80,N],[13,"LockPointer","","lock pointer to a position",80,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",80,N],[12,"surface","","",80,N],[12,"pointer","","",80,N],[12,"region","","",80,N],[12,"lifetime","","",80,N],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","confine pointer to a region",80,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",80,N],[12,"surface","","",80,N],[12,"pointer","","",80,N],[12,"region","","",80,N],[12,"lifetime","","",80,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the pointer constraints manager object",81,N],[10,"lock_pointer","","lock pointer to a position",81,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"],["f"]],["result",["proxy"]]]],[10,"confine_pointer","","confine pointer to a region",81,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"],["f"]],["result",["proxy"]]]],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",N,N],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the locked pointer object",82,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",82,N],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",82,N],[12,"surface_y","","",82,N],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","set a new lock region",82,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",82,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",83,N],[13,"Unlocked","","lock deactivation event",83,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the locked pointer object",84,N],[10,"set_cursor_position_hint","","set the pointer cursor position hint",84,N],[10,"set_region","","set a new lock region",84,N],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","confined pointer object",N,N],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the confined pointer object",85,N],[13,"SetRegion","","set a new confine region",85,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request","",85,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",86,N],[13,"Unconfined","","pointer unconfined",86,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the confined pointer object",87,N],[10,"set_region","","set a new confine region",87,N],[0,"server","wayland_protocols::unstable::pointer_constraints::v1","Server-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::server","constrain the movement of a pointer",N,N],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",N,N],[4,"Error","","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",88,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",89,N],[13,"Persistent","","the pointer constraint may reactivate",89,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",90,N],[13,"LockPointer","","lock pointer to a position",90,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",90,N],[12,"surface","","",90,N],[12,"pointer","","",90,N],[12,"region","","",90,N],[12,"lifetime","","",90,N],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","confine pointer to a region",90,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",90,N],[12,"surface","","",90,N],[12,"pointer","","",90,N],[12,"region","","",90,N],[12,"lifetime","","",90,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",N,N],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","receive relative pointer motion events",N,N],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the locked pointer object",91,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",91,N],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",91,N],[12,"surface_y","","",91,N],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","set a new lock region",91,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",91,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",92,N],[13,"Unlocked","","lock deactivation event",92,N],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","confined pointer object",N,N],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the confined pointer object",93,N],[13,"SetRegion","","set a new confine region",93,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1::Request","",93,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",94,N],[13,"Unconfined","","pointer unconfined",94,N],[0,"c_interfaces","wayland_protocols::unstable::pointer_constraints::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_constraints::v1::c_interfaces","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_region_interface","","",N,N],[7,"zwp_pointer_constraints_v1_requests","","",N,N],[7,"zwp_pointer_constraints_v1_interface","","",N,N],[7,"zwp_locked_pointer_v1_requests","","",N,N],[7,"zwp_locked_pointer_v1_events","","",N,N],[7,"zwp_locked_pointer_v1_interface","","",N,N],[7,"zwp_confined_pointer_v1_requests","","",N,N],[7,"zwp_confined_pointer_v1_events","","",N,N],[7,"zwp_confined_pointer_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",78,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",78,[[["self"]],["u32"]]],[11,"from_raw","","",79,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",79,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",88,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",88,[[["self"]],["u32"]]],[11,"from_raw","","",89,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",89,[[["self"]],["u32"]]],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",N,N],[0,"v1","wayland_protocols::unstable::pointer_gestures","",N,N],[0,"client","wayland_protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::client","touchpad gestures",N,N],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[4,"Request","","",N,N],[13,"GetSwipeGesture","","get swipe gesture",95,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",95,N],[12,"pointer","","",95,N],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get pinch gesture",95,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",95,N],[12,"pointer","","",95,N],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_swipe_gesture","","get swipe gesture",96,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"get_pinch_gesture","","get pinch gesture",96,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",N,N],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",97,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",98,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",98,N],[12,"time","","",98,N],[12,"surface","","",98,N],[12,"fingers","","",98,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",98,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",98,N],[12,"dx","","",98,N],[12,"dy","","",98,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",98,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",98,N],[12,"time","","",98,N],[12,"cancelled","","",98,N],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[10,"destroy","","destroy the pointer swipe gesture object",99,N],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",N,N],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pinch gesture object",100,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",101,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",101,N],[12,"time","","",101,N],[12,"surface","","",101,N],[12,"fingers","","",101,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",101,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",101,N],[12,"dx","","",101,N],[12,"dy","","",101,N],[12,"scale","","",101,N],[12,"rotation","","",101,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",101,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",101,N],[12,"time","","",101,N],[12,"cancelled","","",101,N],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[10,"destroy","","destroy the pinch gesture object",102,N],[0,"server","wayland_protocols::unstable::pointer_gestures::v1","Server-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::server","touchpad gestures",N,N],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",N,N],[4,"Request","","",N,N],[13,"GetSwipeGesture","","get swipe gesture",103,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",103,N],[12,"pointer","","",103,N],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","get pinch gesture",103,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",103,N],[12,"pointer","","",103,N],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",N,N],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a swipe gesture object",N,N],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",104,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",105,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",105,N],[12,"time","","",105,N],[12,"surface","","",105,N],[12,"fingers","","",105,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",105,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",105,N],[12,"dx","","",105,N],[12,"dy","","",105,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",105,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",105,N],[12,"time","","",105,N],[12,"cancelled","","",105,N],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a pinch gesture object",N,N],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pinch gesture object",106,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",107,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",107,N],[12,"time","","",107,N],[12,"surface","","",107,N],[12,"fingers","","",107,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",107,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",107,N],[12,"dx","","",107,N],[12,"dy","","",107,N],[12,"scale","","",107,N],[12,"rotation","","",107,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",107,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",107,N],[12,"time","","",107,N],[12,"cancelled","","",107,N],[0,"c_interfaces","wayland_protocols::unstable::pointer_gestures::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_gestures::v1::c_interfaces","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"zwp_pointer_gestures_v1_requests","","",N,N],[7,"zwp_pointer_gestures_v1_interface","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_requests","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_events","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_interface","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_requests","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_events","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_interface","","",N,N],[0,"primary_selection","wayland_protocols::unstable","Primary selection protocol",N,N],[0,"v1","wayland_protocols::unstable::primary_selection","",N,N],[0,"client","wayland_protocols::unstable::primary_selection::v1","Client-side API of this protocol",N,N],[0,"zwp_primary_selection_device_manager_v1","wayland_protocols::unstable::primary_selection::v1::client","X primary selection emulation",N,N],[3,"ZwpPrimarySelectionDeviceManagerV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateSource","","create a new primary selection source",108,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1::Request","",108,N],[13,"GetDevice","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","create a new primary selection device",108,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1::Request","",108,N],[12,"seat","","",108,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","destroy the primary selection device manager",108,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_source","","create a new primary selection source",109,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_device","","create a new primary selection device",109,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the primary selection device manager",109,N],[0,"zwp_primary_selection_device_v1","wayland_protocols::unstable::primary_selection::v1::client","",N,N],[3,"ZwpPrimarySelectionDeviceV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",N,N],[4,"Request","","",N,N],[13,"SetSelection","","set the primary selection",110,N],[12,"source","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Request","",110,N],[12,"serial","","",110,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","destroy the primary selection device",110,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wp_primary_selection_offer",111,N],[12,"offer","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Event","",111,N],[13,"Selection","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","advertise a new primary selection",111,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Event","",111,N],[8,"RequestsTrait","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",N,N],[10,"set_selection","","set the primary selection",112,N],[10,"destroy","","destroy the primary selection device",112,N],[0,"zwp_primary_selection_offer_v1","wayland_protocols::unstable::primary_selection::v1::client","offer to transfer primary selection contents",N,N],[3,"ZwpPrimarySelectionOfferV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",113,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Request","",113,N],[12,"fd","","",113,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","destroy the primary selection offer",113,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered mime type",114,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Event","",114,N],[8,"RequestsTrait","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",N,N],[10,"receive","","request that the data is transferred",115,N],[10,"destroy","","destroy the primary selection offer",115,N],[0,"zwp_primary_selection_source_v1","wayland_protocols::unstable::primary_selection::v1::client","offer to replace the contents of the primary selection",N,N],[3,"ZwpPrimarySelectionSourceV1","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",N,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",116,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Request","",116,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","destroy the primary selection source",116,N],[4,"Event","","",N,N],[13,"Send","","send the primary selection contents",117,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Event","",117,N],[12,"fd","","",117,N],[13,"Cancelled","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","request for primary selection contents was canceled",117,N],[8,"RequestsTrait","","",N,N],[10,"offer","","add an offered mime type",118,N],[10,"destroy","","destroy the primary selection source",118,N],[0,"server","wayland_protocols::unstable::primary_selection::v1","Server-side API of this protocol",N,N],[0,"zwp_primary_selection_device_manager_v1","wayland_protocols::unstable::primary_selection::v1::server","X primary selection emulation",N,N],[3,"ZwpPrimarySelectionDeviceManagerV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateSource","","create a new primary selection source",119,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1::Request","",119,N],[13,"GetDevice","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","create a new primary selection device",119,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1::Request","",119,N],[12,"seat","","",119,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","destroy the primary selection device manager",119,N],[4,"Event","","",N,N],[0,"zwp_primary_selection_device_v1","wayland_protocols::unstable::primary_selection::v1::server","",N,N],[3,"ZwpPrimarySelectionDeviceV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",N,N],[4,"Request","","",N,N],[13,"SetSelection","","set the primary selection",120,N],[12,"source","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Request","",120,N],[12,"serial","","",120,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","destroy the primary selection device",120,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wp_primary_selection_offer",121,N],[12,"offer","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Event","",121,N],[13,"Selection","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","advertise a new primary selection",121,N],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Event","",121,N],[0,"zwp_primary_selection_offer_v1","wayland_protocols::unstable::primary_selection::v1::server","offer to transfer primary selection contents",N,N],[3,"ZwpPrimarySelectionOfferV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",N,N],[4,"Request","","",N,N],[13,"Receive","","request that the data is transferred",122,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1::Request","",122,N],[12,"fd","","",122,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","destroy the primary selection offer",122,N],[4,"Event","","",N,N],[13,"Offer","","advertise offered mime type",123,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1::Event","",123,N],[0,"zwp_primary_selection_source_v1","wayland_protocols::unstable::primary_selection::v1::server","offer to replace the contents of the primary selection",N,N],[3,"ZwpPrimarySelectionSourceV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",N,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",124,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1::Request","",124,N],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","destroy the primary selection source",124,N],[4,"Event","","",N,N],[13,"Send","","send the primary selection contents",125,N],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1::Event","",125,N],[12,"fd","","",125,N],[13,"Cancelled","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","request for primary selection contents was canceled",125,N],[0,"c_interfaces","wayland_protocols::unstable::primary_selection::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::primary_selection::v1::c_interfaces","",N,N],[7,"zwp_primary_selection_device_manager_v1_requests","","",N,N],[7,"zwp_primary_selection_device_manager_v1_interface","","",N,N],[7,"zwp_primary_selection_device_v1_requests","","",N,N],[7,"zwp_primary_selection_device_v1_events","","",N,N],[7,"zwp_primary_selection_device_v1_interface","","",N,N],[7,"zwp_primary_selection_offer_v1_requests","","",N,N],[7,"zwp_primary_selection_offer_v1_events","","",N,N],[7,"zwp_primary_selection_offer_v1_interface","","",N,N],[7,"zwp_primary_selection_source_v1_requests","","",N,N],[7,"zwp_primary_selection_source_v1_events","","",N,N],[7,"zwp_primary_selection_source_v1_interface","","",N,N],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",N,N],[0,"v1","wayland_protocols::unstable::relative_pointer","",N,N],[0,"client","wayland_protocols::unstable::relative_pointer::v1","Client-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::client","get relative pointer objects",N,N],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the relative pointer manager object",126,N],[13,"GetRelativePointer","","get a relative pointer object",126,N],[12,"id","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request","",126,N],[12,"pointer","","",126,N],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the relative pointer manager object",127,N],[10,"get_relative_pointer","","get a relative pointer object",127,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::client","relative pointer object",N,N],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the relative pointer object",128,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",129,N],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event","",129,N],[12,"utime_lo","","",129,N],[12,"dx","","",129,N],[12,"dy","","",129,N],[12,"dx_unaccel","","",129,N],[12,"dy_unaccel","","",129,N],[8,"RequestsTrait","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[10,"destroy","","release the relative pointer object",130,N],[0,"server","wayland_protocols::unstable::relative_pointer::v1","Server-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::server","get relative pointer objects",N,N],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the relative pointer manager object",131,N],[13,"GetRelativePointer","","get a relative pointer object",131,N],[12,"id","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1::Request","",131,N],[12,"pointer","","",131,N],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",N,N],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::server","relative pointer object",N,N],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the relative pointer object",132,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",133,N],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1::Event","",133,N],[12,"utime_lo","","",133,N],[12,"dx","","",133,N],[12,"dy","","",133,N],[12,"dx_unaccel","","",133,N],[12,"dy_unaccel","","",133,N],[0,"c_interfaces","wayland_protocols::unstable::relative_pointer::v1","C interfaces for this protocol",N,N],[7,"wl_pointer_interface","wayland_protocols::unstable::relative_pointer::v1::c_interfaces","",N,N],[7,"zwp_relative_pointer_manager_v1_requests","","",N,N],[7,"zwp_relative_pointer_manager_v1_interface","","",N,N],[7,"zwp_relative_pointer_v1_requests","","",N,N],[7,"zwp_relative_pointer_v1_events","","",N,N],[7,"zwp_relative_pointer_v1_interface","","",N,N],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",N,N],[0,"v1","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v1","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",134,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request","",134,N],[12,"seat","","",134,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","release the memory for the tablet manager object",134,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",135,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","release the memory for the tablet manager object",135,N],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",136,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",137,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",137,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","a new tool has been used with a tablet",137,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",137,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[10,"destroy","","release the memory for the tablet seat object",138,N],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",139,N],[13,"Eraser","","Eraser",139,N],[13,"Brush","","Brush",139,N],[13,"Pencil","","Pencil",139,N],[13,"Airbrush","","Airbrush",139,N],[13,"Finger","","Finger",139,N],[13,"Mouse","","Mouse",139,N],[13,"Lens","","Lens",139,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",140,N],[13,"Pressure","","Pressure axis",140,N],[13,"Distance","","Distance axis",140,N],[13,"Rotation","","Z-rotation axis",140,N],[13,"Slider","","Slider axis",140,N],[13,"Wheel","","Wheel axis",140,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",141,N],[13,"Pressed","","button is pressed",141,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",142,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",143,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request","",143,N],[12,"surface","","",143,N],[12,"hotspot_x","","",143,N],[12,"hotspot_y","","",143,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","destroy the tool object",143,N],[4,"Event","","",N,N],[13,"Type","","tool type",144,N],[12,"tool_type","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","unique hardware serial number of the tool",144,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[12,"hardware_serial_lo","","",144,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","hardware id notification in Wacom's format",144,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[12,"hardware_id_lo","","",144,N],[13,"Capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool capability notification",144,N],[12,"capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool description events sequence complete",144,N],[13,"Removed","","tool removed",144,N],[13,"ProximityIn","","proximity in event",144,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[12,"tablet","","",144,N],[12,"surface","","",144,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","proximity out event",144,N],[13,"Down","","tablet tool is making contact",144,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[13,"Up","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tablet tool is no longer making contact",144,N],[13,"Motion","","motion event",144,N],[12,"x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[12,"y","","",144,N],[13,"Pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","pressure change event",144,N],[12,"pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[13,"Distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","distance change event",144,N],[12,"distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[13,"Tilt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tilt change event",144,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[12,"tilt_y","","",144,N],[13,"Rotation","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","z-rotation change event",144,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[13,"Slider","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Slider position change event",144,N],[12,"position","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[13,"Wheel","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Wheel delta event",144,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[12,"clicks","","",144,N],[13,"Button","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","button event",144,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[12,"button","","",144,N],[12,"state","","",144,N],[13,"Frame","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","frame event",144,N],[12,"time","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",144,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[10,"set_cursor","","set the tablet tool's surface",145,N],[10,"destroy","","destroy the tool object",145,N],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::client","graphics tablet device",N,N],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",146,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",147,N],[12,"name","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",147,N],[13,"Id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device USB vendor/product id",147,N],[12,"vid","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",147,N],[12,"pid","","",147,N],[13,"Path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","path to the device",147,N],[12,"path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",147,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet description events sequence complete",147,N],[13,"Removed","","tablet removed event",147,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",148,N],[0,"server","wayland_protocols::unstable::tablet::v1","Server-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",149,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1::Request","",149,N],[12,"seat","","",149,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","release the memory for the tablet manager object",149,N],[4,"Event","","",N,N],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",150,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",151,N],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",151,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","a new tool has been used with a tablet",151,N],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",151,N],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::server","a physical tablet tool",N,N],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",152,N],[13,"Eraser","","Eraser",152,N],[13,"Brush","","Brush",152,N],[13,"Pencil","","Pencil",152,N],[13,"Airbrush","","Airbrush",152,N],[13,"Finger","","Finger",152,N],[13,"Mouse","","Mouse",152,N],[13,"Lens","","Lens",152,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",153,N],[13,"Pressure","","Pressure axis",153,N],[13,"Distance","","Distance axis",153,N],[13,"Rotation","","Z-rotation axis",153,N],[13,"Slider","","Slider axis",153,N],[13,"Wheel","","Wheel axis",153,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",154,N],[13,"Pressed","","button is pressed",154,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",155,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",156,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Request","",156,N],[12,"surface","","",156,N],[12,"hotspot_x","","",156,N],[12,"hotspot_y","","",156,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","destroy the tool object",156,N],[4,"Event","","",N,N],[13,"Type","","tool type",157,N],[12,"tool_type","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","unique hardware serial number of the tool",157,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[12,"hardware_serial_lo","","",157,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","hardware id notification in Wacom's format",157,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[12,"hardware_id_lo","","",157,N],[13,"Capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool capability notification",157,N],[12,"capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool description events sequence complete",157,N],[13,"Removed","","tool removed",157,N],[13,"ProximityIn","","proximity in event",157,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[12,"tablet","","",157,N],[12,"surface","","",157,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","proximity out event",157,N],[13,"Down","","tablet tool is making contact",157,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[13,"Up","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tablet tool is no longer making contact",157,N],[13,"Motion","","motion event",157,N],[12,"x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[12,"y","","",157,N],[13,"Pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","pressure change event",157,N],[12,"pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[13,"Distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","distance change event",157,N],[12,"distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[13,"Tilt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tilt change event",157,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[12,"tilt_y","","",157,N],[13,"Rotation","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","z-rotation change event",157,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[13,"Slider","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Slider position change event",157,N],[12,"position","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[13,"Wheel","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Wheel delta event",157,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[12,"clicks","","",157,N],[13,"Button","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","button event",157,N],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[12,"button","","",157,N],[12,"state","","",157,N],[13,"Frame","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","frame event",157,N],[12,"time","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,N],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::server","graphics tablet device",N,N],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",158,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",159,N],[12,"name","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",159,N],[13,"Id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet device USB vendor/product id",159,N],[12,"vid","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",159,N],[12,"pid","","",159,N],[13,"Path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","path to the device",159,N],[12,"path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",159,N],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet description events sequence complete",159,N],[13,"Removed","","tablet removed event",159,N],[0,"c_interfaces","wayland_protocols::unstable::tablet::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_tablet_manager_v1_requests","","",N,N],[7,"zwp_tablet_manager_v1_interface","","",N,N],[7,"zwp_tablet_seat_v1_requests","","",N,N],[7,"zwp_tablet_seat_v1_events","","",N,N],[7,"zwp_tablet_seat_v1_interface","","",N,N],[7,"zwp_tablet_tool_v1_requests","","",N,N],[7,"zwp_tablet_tool_v1_events","","",N,N],[7,"zwp_tablet_tool_v1_interface","","",N,N],[7,"zwp_tablet_v1_requests","","",N,N],[7,"zwp_tablet_v1_events","","",N,N],[7,"zwp_tablet_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",139,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",139,[[["self"]],["u32"]]],[11,"from_raw","","",140,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",140,[[["self"]],["u32"]]],[11,"from_raw","","",141,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",141,[[["self"]],["u32"]]],[11,"from_raw","","",142,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",142,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",152,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",152,[[["self"]],["u32"]]],[11,"from_raw","","",153,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",153,[[["self"]],["u32"]]],[11,"from_raw","","",154,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",154,[[["self"]],["u32"]]],[11,"from_raw","","",155,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",155,[[["self"]],["u32"]]],[0,"v2","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v2","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",160,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request","",160,N],[12,"seat","","",160,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","release the memory for the tablet manager object",160,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",161,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","release the memory for the tablet manager object",161,N],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",162,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",163,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",163,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","a new tool has been used with a tablet",163,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",163,N],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new pad notification",163,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",163,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[10,"destroy","","release the memory for the tablet seat object",164,N],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",165,N],[13,"Eraser","","Eraser",165,N],[13,"Brush","","Brush",165,N],[13,"Pencil","","Pencil",165,N],[13,"Airbrush","","Airbrush",165,N],[13,"Finger","","Finger",165,N],[13,"Mouse","","Mouse",165,N],[13,"Lens","","Lens",165,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",166,N],[13,"Pressure","","Pressure axis",166,N],[13,"Distance","","Distance axis",166,N],[13,"Rotation","","Z-rotation axis",166,N],[13,"Slider","","Slider axis",166,N],[13,"Wheel","","Wheel axis",166,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",167,N],[13,"Pressed","","button is pressed",167,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",168,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",169,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request","",169,N],[12,"surface","","",169,N],[12,"hotspot_x","","",169,N],[12,"hotspot_y","","",169,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","destroy the tool object",169,N],[4,"Event","","",N,N],[13,"Type","","tool type",170,N],[12,"tool_type","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","unique hardware serial number of the tool",170,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[12,"hardware_serial_lo","","",170,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","hardware id notification in Wacom's format",170,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[12,"hardware_id_lo","","",170,N],[13,"Capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool capability notification",170,N],[12,"capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool description events sequence complete",170,N],[13,"Removed","","tool removed",170,N],[13,"ProximityIn","","proximity in event",170,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[12,"tablet","","",170,N],[12,"surface","","",170,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","proximity out event",170,N],[13,"Down","","tablet tool is making contact",170,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[13,"Up","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tablet tool is no longer making contact",170,N],[13,"Motion","","motion event",170,N],[12,"x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[12,"y","","",170,N],[13,"Pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","pressure change event",170,N],[12,"pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[13,"Distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","distance change event",170,N],[12,"distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[13,"Tilt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tilt change event",170,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[12,"tilt_y","","",170,N],[13,"Rotation","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","z-rotation change event",170,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[13,"Slider","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Slider position change event",170,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[13,"Wheel","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Wheel delta event",170,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[12,"clicks","","",170,N],[13,"Button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","button event",170,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[12,"button","","",170,N],[12,"state","","",170,N],[13,"Frame","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","frame event",170,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",170,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[10,"set_cursor","","set the tablet tool's surface",171,N],[10,"destroy","","destroy the tool object",171,N],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::client","graphics tablet device",N,N],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",172,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",173,N],[12,"name","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",173,N],[13,"Id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device USB vendor/product id",173,N],[12,"vid","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",173,N],[12,"pid","","",173,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","path to the device",173,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",173,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet description events sequence complete",173,N],[13,"Removed","","tablet removed event",173,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",174,N],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::client","pad ring",N,N],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[4,"Source","","ring axis source",N,N],[13,"Finger","","finger",175,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",176,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request","",176,N],[12,"serial","","",176,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","destroy the ring object",176,N],[4,"Event","","",N,N],[13,"Source","","ring event source",177,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",177,N],[13,"Angle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","angle changed",177,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",177,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","interaction stopped",177,N],[13,"Frame","","end of a ring event sequence",177,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",177,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[10,"set_feedback","","set compositor feedback",178,N],[10,"destroy","","destroy the ring object",178,N],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::client","pad strip",N,N],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[4,"Source","","strip axis source",N,N],[13,"Finger","","finger",179,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",180,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request","",180,N],[12,"serial","","",180,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","destroy the strip object",180,N],[4,"Event","","",N,N],[13,"Source","","strip event source",181,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",181,N],[13,"Position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","position changed",181,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",181,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","interaction stopped",181,N],[13,"Frame","","end of a strip event sequence",181,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",181,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[10,"set_feedback","","set compositor feedback",182,N],[10,"destroy","","destroy the strip object",182,N],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pad object",183,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",184,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",184,N],[13,"Ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","ring announced",184,N],[12,"ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",184,N],[13,"Strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","strip announced",184,N],[12,"strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",184,N],[13,"Modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","mode-switch ability announced",184,N],[12,"modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",184,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","tablet group description events sequence complete",184,N],[13,"ModeSwitch","","mode switch event",184,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",184,N],[12,"serial","","",184,N],[12,"mode","","",184,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[10,"destroy","","destroy the pad object",185,N],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",N,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",186,N],[13,"Pressed","","the button is pressed",186,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",187,N],[12,"button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request","",187,N],[12,"description","","",187,N],[12,"serial","","",187,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","destroy the pad object",187,N],[4,"Event","","",N,N],[13,"Group","","group announced",188,N],[12,"pad_group","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",188,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","path to the device",188,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",188,N],[13,"Buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","buttons announced",188,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",188,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad description event sequence complete",188,N],[13,"Button","","physical button state",188,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",188,N],[12,"button","","",188,N],[12,"state","","",188,N],[13,"Enter","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",188,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",188,N],[12,"tablet","","",188,N],[12,"surface","","",188,N],[13,"Leave","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",188,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",188,N],[12,"surface","","",188,N],[13,"Removed","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad removed event",188,N],[8,"RequestsTrait","","",N,N],[10,"set_feedback","","set compositor feedback",189,N],[10,"destroy","","destroy the pad object",189,N],[0,"server","wayland_protocols::unstable::tablet::v2","Server-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",190,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2::Request","",190,N],[12,"seat","","",190,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","release the memory for the tablet manager object",190,N],[4,"Event","","",N,N],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",191,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",192,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",192,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","a new tool has been used with a tablet",192,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",192,N],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","new pad notification",192,N],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",192,N],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::server","a physical tablet tool",N,N],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",193,N],[13,"Eraser","","Eraser",193,N],[13,"Brush","","Brush",193,N],[13,"Pencil","","Pencil",193,N],[13,"Airbrush","","Airbrush",193,N],[13,"Finger","","Finger",193,N],[13,"Mouse","","Mouse",193,N],[13,"Lens","","Lens",193,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",194,N],[13,"Pressure","","Pressure axis",194,N],[13,"Distance","","Distance axis",194,N],[13,"Rotation","","Z-rotation axis",194,N],[13,"Slider","","Slider axis",194,N],[13,"Wheel","","Wheel axis",194,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",195,N],[13,"Pressed","","button is pressed",195,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",196,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",197,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Request","",197,N],[12,"surface","","",197,N],[12,"hotspot_x","","",197,N],[12,"hotspot_y","","",197,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","destroy the tool object",197,N],[4,"Event","","",N,N],[13,"Type","","tool type",198,N],[12,"tool_type","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","unique hardware serial number of the tool",198,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[12,"hardware_serial_lo","","",198,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","hardware id notification in Wacom's format",198,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[12,"hardware_id_lo","","",198,N],[13,"Capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool capability notification",198,N],[12,"capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool description events sequence complete",198,N],[13,"Removed","","tool removed",198,N],[13,"ProximityIn","","proximity in event",198,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[12,"tablet","","",198,N],[12,"surface","","",198,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","proximity out event",198,N],[13,"Down","","tablet tool is making contact",198,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[13,"Up","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tablet tool is no longer making contact",198,N],[13,"Motion","","motion event",198,N],[12,"x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[12,"y","","",198,N],[13,"Pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","pressure change event",198,N],[12,"pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[13,"Distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","distance change event",198,N],[12,"distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[13,"Tilt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tilt change event",198,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[12,"tilt_y","","",198,N],[13,"Rotation","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","z-rotation change event",198,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[13,"Slider","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Slider position change event",198,N],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[13,"Wheel","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Wheel delta event",198,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[12,"clicks","","",198,N],[13,"Button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","button event",198,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[12,"button","","",198,N],[12,"state","","",198,N],[13,"Frame","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","frame event",198,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,N],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::server","graphics tablet device",N,N],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",199,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",200,N],[12,"name","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",200,N],[13,"Id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet device USB vendor/product id",200,N],[12,"vid","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",200,N],[12,"pid","","",200,N],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","path to the device",200,N],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",200,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet description events sequence complete",200,N],[13,"Removed","","tablet removed event",200,N],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::server","pad ring",N,N],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",N,N],[4,"Source","","ring axis source",N,N],[13,"Finger","","finger",201,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",202,N],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Request","",202,N],[12,"serial","","",202,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","destroy the ring object",202,N],[4,"Event","","",N,N],[13,"Source","","ring event source",203,N],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",203,N],[13,"Angle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","angle changed",203,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",203,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","interaction stopped",203,N],[13,"Frame","","end of a ring event sequence",203,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",203,N],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::server","pad strip",N,N],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",N,N],[4,"Source","","strip axis source",N,N],[13,"Finger","","finger",204,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",205,N],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Request","",205,N],[12,"serial","","",205,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","destroy the strip object",205,N],[4,"Event","","",N,N],[13,"Source","","strip event source",206,N],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",206,N],[13,"Position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","position changed",206,N],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",206,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","interaction stopped",206,N],[13,"Frame","","end of a strip event sequence",206,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",206,N],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pad object",207,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",208,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",208,N],[13,"Ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","ring announced",208,N],[12,"ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",208,N],[13,"Strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","strip announced",208,N],[12,"strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",208,N],[13,"Modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","mode-switch ability announced",208,N],[12,"modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",208,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","tablet group description events sequence complete",208,N],[13,"ModeSwitch","","mode switch event",208,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",208,N],[12,"serial","","",208,N],[12,"mode","","",208,N],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",N,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",209,N],[13,"Pressed","","the button is pressed",209,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",210,N],[12,"button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Request","",210,N],[12,"description","","",210,N],[12,"serial","","",210,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","destroy the pad object",210,N],[4,"Event","","",N,N],[13,"Group","","group announced",211,N],[12,"pad_group","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",211,N],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","path to the device",211,N],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",211,N],[13,"Buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","buttons announced",211,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",211,N],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad description event sequence complete",211,N],[13,"Button","","physical button state",211,N],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",211,N],[12,"button","","",211,N],[12,"state","","",211,N],[13,"Enter","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",211,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",211,N],[12,"tablet","","",211,N],[12,"surface","","",211,N],[13,"Leave","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",211,N],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",211,N],[12,"surface","","",211,N],[13,"Removed","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad removed event",211,N],[0,"c_interfaces","wayland_protocols::unstable::tablet::v2","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v2::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_tablet_manager_v2_requests","","",N,N],[7,"zwp_tablet_manager_v2_interface","","",N,N],[7,"zwp_tablet_seat_v2_requests","","",N,N],[7,"zwp_tablet_seat_v2_events","","",N,N],[7,"zwp_tablet_seat_v2_interface","","",N,N],[7,"zwp_tablet_tool_v2_requests","","",N,N],[7,"zwp_tablet_tool_v2_events","","",N,N],[7,"zwp_tablet_tool_v2_interface","","",N,N],[7,"zwp_tablet_v2_requests","","",N,N],[7,"zwp_tablet_v2_events","","",N,N],[7,"zwp_tablet_v2_interface","","",N,N],[7,"zwp_tablet_pad_ring_v2_requests","","",N,N],[7,"zwp_tablet_pad_ring_v2_events","","",N,N],[7,"zwp_tablet_pad_ring_v2_interface","","",N,N],[7,"zwp_tablet_pad_strip_v2_requests","","",N,N],[7,"zwp_tablet_pad_strip_v2_events","","",N,N],[7,"zwp_tablet_pad_strip_v2_interface","","",N,N],[7,"zwp_tablet_pad_group_v2_requests","","",N,N],[7,"zwp_tablet_pad_group_v2_events","","",N,N],[7,"zwp_tablet_pad_group_v2_interface","","",N,N],[7,"zwp_tablet_pad_v2_requests","","",N,N],[7,"zwp_tablet_pad_v2_events","","",N,N],[7,"zwp_tablet_pad_v2_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",165,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",165,[[["self"]],["u32"]]],[11,"from_raw","","",166,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",166,[[["self"]],["u32"]]],[11,"from_raw","","",167,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",167,[[["self"]],["u32"]]],[11,"from_raw","","",168,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",168,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",175,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",175,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",179,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",179,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",186,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",186,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",193,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",193,[[["self"]],["u32"]]],[11,"from_raw","","",194,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",194,[[["self"]],["u32"]]],[11,"from_raw","","",195,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",195,[[["self"]],["u32"]]],[11,"from_raw","","",196,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",196,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",201,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",201,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",204,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",204,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",209,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",209,[[["self"]],["u32"]]],[0,"text_input","wayland_protocols::unstable","Text input protocol",N,N],[0,"v1","wayland_protocols::unstable::text_input","",N,N],[0,"client","wayland_protocols::unstable::text_input::v1","Client-side API of this protocol",N,N],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::client","text input",N,N],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[4,"ContentHint","","content hint",N,N],[13,"None","","no special behaviour",212,N],[13,"Default","","auto completion, correction and capitalization",212,N],[13,"Password","","hidden and sensitive text",212,N],[13,"AutoCompletion","","suggest word completions",212,N],[13,"AutoCorrection","","suggest word corrections",212,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",212,N],[13,"Lowercase","","prefer lowercase letters",212,N],[13,"Uppercase","","prefer uppercase letters",212,N],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",212,N],[13,"HiddenText","","characters should be hidden",212,N],[13,"SensitiveData","","typed text should not be stored",212,N],[13,"Latin","","just latin characters should be entered",212,N],[13,"Multiline","","the text input is multiline",212,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",213,N],[13,"Alpha","","allow only alphabetic characters",213,N],[13,"Digits","","allow only digits",213,N],[13,"Number","","input a number (including decimal separator and sign)",213,N],[13,"Phone","","input a phone number",213,N],[13,"Url","","input an URL",213,N],[13,"Email","","input an email address",213,N],[13,"Name","","input a name of a person",213,N],[13,"Password","","input a password (combine with password or sensitive_data hint)",213,N],[13,"Date","","input a date",213,N],[13,"Time","","input a time",213,N],[13,"Datetime","","input a date and time",213,N],[13,"Terminal","","input for a terminal",213,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",214,N],[13,"None","","style should be the same as in non-composing text",214,N],[13,"Active","","",214,N],[13,"Inactive","","",214,N],[13,"Highlight","","",214,N],[13,"Underline","","",214,N],[13,"Selection","","",214,N],[13,"Incorrect","","",214,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",215,N],[13,"Ltr","","left-to-right",215,N],[13,"Rtl","","right-to-left",215,N],[4,"Request","","",N,N],[13,"Activate","","request activation",216,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[12,"surface","","",216,N],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","request deactivation",216,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","show input panels",216,N],[13,"HideInputPanel","","hide input panels",216,N],[13,"Reset","","reset",216,N],[13,"SetSurroundingText","","sets the surrounding text",216,N],[12,"text","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[12,"cursor","","",216,N],[12,"anchor","","",216,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set content purpose and hint",216,N],[12,"hint","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[12,"purpose","","",216,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",216,N],[12,"x","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[12,"y","","",216,N],[12,"width","","",216,N],[12,"height","","",216,N],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","sets preferred language",216,N],[12,"language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[13,"CommitState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",216,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",216,N],[12,"button","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",216,N],[12,"index","","",216,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",217,N],[12,"surface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[13,"Leave","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","leave event",217,N],[13,"ModifiersMap","","modifiers map",217,N],[12,"map","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","state of the input panel",217,N],[12,"state","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit",217,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"text","","",217,N],[12,"commit","","",217,N],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit styling",217,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"length","","",217,N],[12,"style","","",217,N],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit cursor",217,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[13,"CommitString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","commit",217,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"text","","",217,N],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set cursor to new position",217,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"anchor","","",217,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","delete surrounding text",217,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"length","","",217,N],[13,"Keysym","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","keysym",217,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"time","","",217,N],[12,"sym","","",217,N],[12,"state","","",217,N],[12,"modifiers","","",217,N],[13,"Language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","language",217,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"language","","",217,N],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","text direction",217,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",217,N],[12,"direction","","",217,N],[8,"RequestsTrait","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[10,"activate","","request activation",218,N],[10,"deactivate","","request deactivation",218,N],[10,"show_input_panel","","show input panels",218,N],[10,"hide_input_panel","","hide input panels",218,N],[10,"reset","","reset",218,N],[10,"set_surrounding_text","","sets the surrounding text",218,N],[10,"set_content_type","","set content purpose and hint",218,N],[10,"set_cursor_rectangle","","",218,N],[10,"set_preferred_language","","sets preferred language",218,N],[10,"commit_state","","",218,N],[10,"invoke_action","","",218,N],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::client","text input manager",N,N],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateTextInput","","create text input",219,N],[12,"id","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1::Request","",219,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_text_input","","create text input",220,[[["self"],["f"]],["result",["proxy"]]]],[0,"server","wayland_protocols::unstable::text_input::v1","Server-side API of this protocol",N,N],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::server","text input",N,N],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",N,N],[4,"ContentHint","","content hint",N,N],[13,"None","","no special behaviour",221,N],[13,"Default","","auto completion, correction and capitalization",221,N],[13,"Password","","hidden and sensitive text",221,N],[13,"AutoCompletion","","suggest word completions",221,N],[13,"AutoCorrection","","suggest word corrections",221,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",221,N],[13,"Lowercase","","prefer lowercase letters",221,N],[13,"Uppercase","","prefer uppercase letters",221,N],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",221,N],[13,"HiddenText","","characters should be hidden",221,N],[13,"SensitiveData","","typed text should not be stored",221,N],[13,"Latin","","just latin characters should be entered",221,N],[13,"Multiline","","the text input is multiline",221,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",222,N],[13,"Alpha","","allow only alphabetic characters",222,N],[13,"Digits","","allow only digits",222,N],[13,"Number","","input a number (including decimal separator and sign)",222,N],[13,"Phone","","input a phone number",222,N],[13,"Url","","input an URL",222,N],[13,"Email","","input an email address",222,N],[13,"Name","","input a name of a person",222,N],[13,"Password","","input a password (combine with password or sensitive_data hint)",222,N],[13,"Date","","input a date",222,N],[13,"Time","","input a time",222,N],[13,"Datetime","","input a date and time",222,N],[13,"Terminal","","input for a terminal",222,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",223,N],[13,"None","","style should be the same as in non-composing text",223,N],[13,"Active","","",223,N],[13,"Inactive","","",223,N],[13,"Highlight","","",223,N],[13,"Underline","","",223,N],[13,"Selection","","",223,N],[13,"Incorrect","","",223,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",224,N],[13,"Ltr","","left-to-right",224,N],[13,"Rtl","","right-to-left",224,N],[4,"Request","","",N,N],[13,"Activate","","request activation",225,N],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[12,"surface","","",225,N],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","request deactivation",225,N],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","show input panels",225,N],[13,"HideInputPanel","","hide input panels",225,N],[13,"Reset","","reset",225,N],[13,"SetSurroundingText","","sets the surrounding text",225,N],[12,"text","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[12,"cursor","","",225,N],[12,"anchor","","",225,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set content purpose and hint",225,N],[12,"hint","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[12,"purpose","","",225,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",225,N],[12,"x","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[12,"y","","",225,N],[12,"width","","",225,N],[12,"height","","",225,N],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","sets preferred language",225,N],[12,"language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[13,"CommitState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",225,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",225,N],[12,"button","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",225,N],[12,"index","","",225,N],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",226,N],[12,"surface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[13,"Leave","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","leave event",226,N],[13,"ModifiersMap","","modifiers map",226,N],[12,"map","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","state of the input panel",226,N],[12,"state","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit",226,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"text","","",226,N],[12,"commit","","",226,N],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit styling",226,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"length","","",226,N],[12,"style","","",226,N],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit cursor",226,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[13,"CommitString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","commit",226,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"text","","",226,N],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set cursor to new position",226,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"anchor","","",226,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","delete surrounding text",226,N],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"length","","",226,N],[13,"Keysym","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","keysym",226,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"time","","",226,N],[12,"sym","","",226,N],[12,"state","","",226,N],[12,"modifiers","","",226,N],[13,"Language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","language",226,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"language","","",226,N],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","text direction",226,N],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",226,N],[12,"direction","","",226,N],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::server","text input manager",N,N],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateTextInput","","create text input",227,N],[12,"id","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1::Request","",227,N],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",N,N],[0,"c_interfaces","wayland_protocols::unstable::text_input::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::text_input::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_text_input_v1_requests","","",N,N],[7,"zwp_text_input_v1_events","","",N,N],[7,"zwp_text_input_v1_interface","","",N,N],[7,"zwp_text_input_manager_v1_requests","","",N,N],[7,"zwp_text_input_manager_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",212,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",212,[[["self"]],["u32"]]],[11,"from_raw","","",213,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",213,[[["self"]],["u32"]]],[11,"from_raw","","",214,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",214,[[["self"]],["u32"]]],[11,"from_raw","","",215,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",215,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",221,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",221,[[["self"]],["u32"]]],[11,"from_raw","","",222,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",222,[[["self"]],["u32"]]],[11,"from_raw","","",223,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",223,[[["self"]],["u32"]]],[11,"from_raw","","",224,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",224,[[["self"]],["u32"]]],[0,"v3","wayland_protocols::unstable::text_input","",N,N],[0,"client","wayland_protocols::unstable::text_input::v3","Client-side API of this protocol",N,N],[0,"zwp_text_input_v3","wayland_protocols::unstable::text_input::v3::client","text input",N,N],[3,"ContentHint","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","content hint",N,N],[3,"ZwpTextInputV3","","",N,N],[4,"ChangeCause","","text change reason",N,N],[13,"InputMethod","","input method caused the change",228,N],[13,"Other","","something else than the input method caused the change",228,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",229,N],[13,"Alpha","","allow only alphabetic characters",229,N],[13,"Digits","","allow only digits",229,N],[13,"Number","","input a number (including decimal separator and sign)",229,N],[13,"Phone","","input a phone number",229,N],[13,"Url","","input an URL",229,N],[13,"Email","","input an email address",229,N],[13,"Name","","input a name of a person",229,N],[13,"Password","","input a password (combine with sensitive_data hint)",229,N],[13,"Pin","","input is a numeric password (combine with sensitive_data hint)",229,N],[13,"Date","","input a date",229,N],[13,"Time","","input a time",229,N],[13,"Datetime","","input a date and time",229,N],[13,"Terminal","","input for a terminal",229,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input",230,N],[13,"Enable","","Request text input to be enabled",230,N],[13,"Disable","","Disable text input on a surface",230,N],[13,"SetSurroundingText","","sets the surrounding text",230,N],[12,"text","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",230,N],[12,"cursor","","",230,N],[12,"anchor","","",230,N],[13,"SetTextChangeCause","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","indicates the cause of surrounding text change",230,N],[12,"cause","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",230,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","set content purpose and hint",230,N],[12,"hint","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",230,N],[12,"purpose","","",230,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","set cursor position",230,N],[12,"x","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request","",230,N],[12,"y","","",230,N],[12,"width","","",230,N],[12,"height","","",230,N],[13,"Commit","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","commit state",230,N],[4,"Event","","",N,N],[13,"Enter","","enter event",231,N],[12,"surface","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",231,N],[13,"Leave","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","leave event",231,N],[12,"surface","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",231,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","pre-edit",231,N],[12,"text","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",231,N],[12,"cursor_begin","","",231,N],[12,"cursor_end","","",231,N],[13,"CommitString","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","text commit",231,N],[12,"text","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",231,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","delete surrounding text",231,N],[12,"before_length","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",231,N],[12,"after_length","","",231,N],[13,"Done","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","apply changes",231,N],[12,"serial","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event","",231,N],[8,"RequestsTrait","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",N,N],[10,"destroy","","Destroy the wp_text_input",232,N],[10,"enable","","Request text input to be enabled",232,N],[10,"disable","","Disable text input on a surface",232,N],[10,"set_surrounding_text","","sets the surrounding text",232,N],[10,"set_text_change_cause","","indicates the cause of surrounding text change",232,N],[10,"set_content_type","","set content purpose and hint",232,N],[10,"set_cursor_rectangle","","set cursor position",232,N],[10,"commit","","commit state",232,N],[0,"zwp_text_input_manager_v3","wayland_protocols::unstable::text_input::v3::client","text input manager",N,N],[3,"ZwpTextInputManagerV3","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",N,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input_manager",233,N],[13,"GetTextInput","","create a new text input object",233,N],[12,"id","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3::Request","",233,N],[12,"seat","","",233,N],[4,"Event","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","Destroy the wp_text_input_manager",234,N],[10,"get_text_input","","create a new text input object",234,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"server","wayland_protocols::unstable::text_input::v3","Server-side API of this protocol",N,N],[0,"zwp_text_input_v3","wayland_protocols::unstable::text_input::v3::server","text input",N,N],[3,"ContentHint","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","content hint",N,N],[3,"ZwpTextInputV3","","",N,N],[4,"ChangeCause","","text change reason",N,N],[13,"InputMethod","","input method caused the change",235,N],[13,"Other","","something else than the input method caused the change",235,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",236,N],[13,"Alpha","","allow only alphabetic characters",236,N],[13,"Digits","","allow only digits",236,N],[13,"Number","","input a number (including decimal separator and sign)",236,N],[13,"Phone","","input a phone number",236,N],[13,"Url","","input an URL",236,N],[13,"Email","","input an email address",236,N],[13,"Name","","input a name of a person",236,N],[13,"Password","","input a password (combine with sensitive_data hint)",236,N],[13,"Pin","","input is a numeric password (combine with sensitive_data hint)",236,N],[13,"Date","","input a date",236,N],[13,"Time","","input a time",236,N],[13,"Datetime","","input a date and time",236,N],[13,"Terminal","","input for a terminal",236,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input",237,N],[13,"Enable","","Request text input to be enabled",237,N],[13,"Disable","","Disable text input on a surface",237,N],[13,"SetSurroundingText","","sets the surrounding text",237,N],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",237,N],[12,"cursor","","",237,N],[12,"anchor","","",237,N],[13,"SetTextChangeCause","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","indicates the cause of surrounding text change",237,N],[12,"cause","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",237,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","set content purpose and hint",237,N],[12,"hint","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",237,N],[12,"purpose","","",237,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","set cursor position",237,N],[12,"x","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",237,N],[12,"y","","",237,N],[12,"width","","",237,N],[12,"height","","",237,N],[13,"Commit","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","commit state",237,N],[4,"Event","","",N,N],[13,"Enter","","enter event",238,N],[12,"surface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",238,N],[13,"Leave","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","leave event",238,N],[12,"surface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",238,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","pre-edit",238,N],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",238,N],[12,"cursor_begin","","",238,N],[12,"cursor_end","","",238,N],[13,"CommitString","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","text commit",238,N],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",238,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","delete surrounding text",238,N],[12,"before_length","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",238,N],[12,"after_length","","",238,N],[13,"Done","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","apply changes",238,N],[12,"serial","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",238,N],[0,"zwp_text_input_manager_v3","wayland_protocols::unstable::text_input::v3::server","text input manager",N,N],[3,"ZwpTextInputManagerV3","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",N,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the wp_text_input_manager",239,N],[13,"GetTextInput","","create a new text input object",239,N],[12,"id","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3::Request","",239,N],[12,"seat","","",239,N],[4,"Event","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",N,N],[0,"c_interfaces","wayland_protocols::unstable::text_input::v3","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::text_input::v3::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_text_input_v3_requests","","",N,N],[7,"zwp_text_input_v3_events","","",N,N],[7,"zwp_text_input_v3_interface","","",N,N],[7,"zwp_text_input_manager_v3_requests","","",N,N],[7,"zwp_text_input_manager_v3_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",228,[[["u32"]],["option",["changecause"]]]],[11,"to_raw","","",228,[[["self"]],["u32"]]],[18,"None","","no special behavior",240,N],[18,"Completion","","suggest word completions",240,N],[18,"Spellcheck","","suggest word corrections",240,N],[18,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",240,N],[18,"Lowercase","","prefer lowercase letters",240,N],[18,"Uppercase","","prefer uppercase letters",240,N],[18,"Titlecase","","prefer casing for titles and headings (can be language dependent)",240,N],[18,"HiddenText","","characters should be hidden",240,N],[18,"SensitiveData","","typed text should not be stored",240,N],[18,"Latin","","just Latin characters should be entered",240,N],[18,"Multiline","","the text input is multiline",240,N],[11,"empty","","Returns an empty set of flags.",240,[[],["contenthint"]]],[11,"all","","Returns the set containing all flags.",240,[[],["contenthint"]]],[11,"bits","","Returns the raw value of the flags currently stored.",240,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",240,[[["u32"]],["option",["contenthint"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",240,[[["u32"]],["contenthint"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",240,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",240,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",240,[[["self"],["contenthint"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",240,[[["self"],["contenthint"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",240,[[["self"],["contenthint"]]]],[11,"remove","","Removes the specified flags in-place.",240,[[["self"],["contenthint"]]]],[11,"toggle","","Toggles the specified flags in-place.",240,[[["self"],["contenthint"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",240,[[["self"],["contenthint"],["bool"]]]],[11,"from_raw","","",240,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",240,[[["self"]],["u32"]]],[11,"from_raw","","",229,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",229,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",235,[[["u32"]],["option",["changecause"]]]],[11,"to_raw","","",235,[[["self"]],["u32"]]],[18,"None","","no special behavior",241,N],[18,"Completion","","suggest word completions",241,N],[18,"Spellcheck","","suggest word corrections",241,N],[18,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",241,N],[18,"Lowercase","","prefer lowercase letters",241,N],[18,"Uppercase","","prefer uppercase letters",241,N],[18,"Titlecase","","prefer casing for titles and headings (can be language dependent)",241,N],[18,"HiddenText","","characters should be hidden",241,N],[18,"SensitiveData","","typed text should not be stored",241,N],[18,"Latin","","just Latin characters should be entered",241,N],[18,"Multiline","","the text input is multiline",241,N],[11,"empty","","Returns an empty set of flags.",241,[[],["contenthint"]]],[11,"all","","Returns the set containing all flags.",241,[[],["contenthint"]]],[11,"bits","","Returns the raw value of the flags currently stored.",241,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",241,[[["u32"]],["option",["contenthint"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",241,[[["u32"]],["contenthint"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",241,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",241,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",241,[[["self"],["contenthint"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",241,[[["self"],["contenthint"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",241,[[["self"],["contenthint"]]]],[11,"remove","","Removes the specified flags in-place.",241,[[["self"],["contenthint"]]]],[11,"toggle","","Toggles the specified flags in-place.",241,[[["self"],["contenthint"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",241,[[["self"],["contenthint"],["bool"]]]],[11,"from_raw","","",241,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",241,[[["self"]],["u32"]]],[11,"from_raw","","",236,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",236,[[["self"]],["u32"]]],[0,"xdg_decoration","wayland_protocols::unstable","This interface allows a compositor to announce support for server-side decorations. A window decoration is a set of window controls as deemed appropriate by the party managing them, such as user interface components used to move, resize and change a window's state. A client can use this protocol to request being decorated by a supporting compositor. If compositor and client do not negotiate the use of a server-side decoration using this protocol, clients continue to self-decorate as they see fit.",N,N],[0,"v1","wayland_protocols::unstable::xdg_decoration","",N,N],[0,"client","wayland_protocols::unstable::xdg_decoration::v1","Client-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::client","window decoration manager",N,N],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration manager object",242,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",242,N],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request","",242,N],[12,"toplevel","","",242,N],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the decoration manager object",243,N],[10,"get_toplevel_decoration","","create a new toplevel decoration object",243,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::client","decoration object for a toplevel surface",N,N],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[4,"Error","","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",244,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",244,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",244,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",245,N],[13,"ServerSide","","server-side window decoration",245,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",246,N],[13,"SetMode","","set the decoration mode",246,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request","",246,N],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","unset the decoration mode",246,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",247,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event","",247,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[10,"destroy","","destroy the decoration object",248,N],[10,"set_mode","","set the decoration mode",248,N],[10,"unset_mode","","unset the decoration mode",248,N],[0,"server","wayland_protocols::unstable::xdg_decoration::v1","Server-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::server","window decoration manager",N,N],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration manager object",249,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",249,N],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1::Request","",249,N],[12,"toplevel","","",249,N],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",N,N],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::server","decoration object for a toplevel surface",N,N],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",N,N],[4,"Error","","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",250,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",250,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",250,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",251,N],[13,"ServerSide","","server-side window decoration",251,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",252,N],[13,"SetMode","","set the decoration mode",252,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Request","",252,N],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","unset the decoration mode",252,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",253,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Event","",253,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_decoration::v1","C interfaces for this protocol",N,N],[7,"zxdg_decoration_manager_v1_requests","wayland_protocols::unstable::xdg_decoration::v1::c_interfaces","",N,N],[7,"zxdg_decoration_manager_v1_interface","","",N,N],[7,"zxdg_toplevel_decoration_v1_requests","","",N,N],[7,"zxdg_toplevel_decoration_v1_events","","",N,N],[7,"zxdg_toplevel_decoration_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",244,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",244,[[["self"]],["u32"]]],[11,"from_raw","","",245,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",245,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",250,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",250,[[["self"]],["u32"]]],[11,"from_raw","","",251,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",251,[[["self"]],["u32"]]],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",N,N],[0,"v1","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",254,N],[13,"Export","","export a surface",254,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request","",254,N],[12,"surface","","",254,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",255,N],[10,"export","","export a surface",255,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",256,N],[13,"Import","","import a surface",256,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request","",256,N],[12,"handle","","",256,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",257,N],[10,"import","","import a surface",257,[[["self"],["string"],["f"]],["result",["proxy"]]]],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an exported surface handle",N,N],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",258,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",259,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event","",259,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[10,"destroy","","unexport the exported surface",260,N],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an imported surface handle",N,N],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",261,N],[13,"SetParentOf","","set as the parent of some surface",261,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request","",261,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",262,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",263,N],[10,"set_parent_of","","set as the parent of some surface",263,N],[0,"server","wayland_protocols::unstable::xdg_foreign::v1","Server-side API of this protocol",N,N],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for exporting surfaces",N,N],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",264,N],[13,"Export","","export a surface",264,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1::Request","",264,N],[12,"surface","","",264,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",N,N],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for importing surfaces",N,N],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",265,N],[13,"Import","","import a surface",265,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1::Request","",265,N],[12,"handle","","",265,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",N,N],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an exported surface handle",N,N],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",266,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",267,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1::Event","",267,N],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an imported surface handle",N,N],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",268,N],[13,"SetParentOf","","set as the parent of some surface",268,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1::Request","",268,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",269,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v1::c_interfaces","",N,N],[7,"zxdg_exporter_v1_requests","","",N,N],[7,"zxdg_exporter_v1_interface","","",N,N],[7,"zxdg_importer_v1_requests","","",N,N],[7,"zxdg_importer_v1_interface","","",N,N],[7,"zxdg_exported_v1_requests","","",N,N],[7,"zxdg_exported_v1_events","","",N,N],[7,"zxdg_exported_v1_interface","","",N,N],[7,"zxdg_imported_v1_requests","","",N,N],[7,"zxdg_imported_v1_events","","",N,N],[7,"zxdg_imported_v1_interface","","",N,N],[0,"v2","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",270,N],[13,"ExportToplevel","","export a toplevel surface",270,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request","",270,N],[12,"surface","","",270,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",271,N],[10,"export_toplevel","","export a toplevel surface",271,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",272,N],[13,"ImportToplevel","","import a toplevel surface",272,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request","",272,N],[12,"handle","","",272,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",273,N],[10,"import_toplevel","","import a toplevel surface",273,[[["self"],["string"],["f"]],["result",["proxy"]]]],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an exported surface handle",N,N],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",274,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",275,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event","",275,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[10,"destroy","","unexport the exported surface",276,N],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an imported surface handle",N,N],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",277,N],[13,"SetParentOf","","set as the parent of some surface",277,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request","",277,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",278,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",279,N],[10,"set_parent_of","","set as the parent of some surface",279,N],[0,"server","wayland_protocols::unstable::xdg_foreign::v2","Server-side API of this protocol",N,N],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for exporting surfaces",N,N],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",280,N],[13,"ExportToplevel","","export a toplevel surface",280,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2::Request","",280,N],[12,"surface","","",280,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",N,N],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for importing surfaces",N,N],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",281,N],[13,"ImportToplevel","","import a toplevel surface",281,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2::Request","",281,N],[12,"handle","","",281,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",N,N],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an exported surface handle",N,N],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",282,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",283,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2::Event","",283,N],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an imported surface handle",N,N],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",284,N],[13,"SetParentOf","","set as the parent of some surface",284,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2::Request","",284,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",285,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v2","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v2::c_interfaces","",N,N],[7,"zxdg_exporter_v2_requests","","",N,N],[7,"zxdg_exporter_v2_interface","","",N,N],[7,"zxdg_importer_v2_requests","","",N,N],[7,"zxdg_importer_v2_interface","","",N,N],[7,"zxdg_exported_v2_requests","","",N,N],[7,"zxdg_exported_v2_events","","",N,N],[7,"zxdg_exported_v2_interface","","",N,N],[7,"zxdg_imported_v2_requests","","",N,N],[7,"zxdg_imported_v2_events","","",N,N],[7,"zxdg_imported_v2_interface","","",N,N],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",N,N],[0,"v1","wayland_protocols::unstable::xdg_output","",N,N],[0,"client","wayland_protocols::unstable::xdg_output::v1","Client-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::client","manage xdg_output objects",N,N],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",286,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",286,N],[12,"id","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request","",286,N],[12,"output","","",286,N],[4,"Event","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_output_manager object",287,N],[10,"get_xdg_output","","create an xdg output from a wl_output",287,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::client","compositor logical output region",N,N],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output object",288,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",289,N],[12,"x","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",289,N],[12,"y","","",289,N],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","size of the output in the global compositor space",289,N],[12,"width","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",289,N],[12,"height","","",289,N],[13,"Done","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","all information about the output have been sent",289,N],[13,"Name","","name of this output",289,N],[12,"name","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",289,N],[13,"Description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","human-readable description of this output",289,N],[12,"description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",289,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[10,"destroy","","destroy the xdg_output object",290,N],[0,"server","wayland_protocols::unstable::xdg_output::v1","Server-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::server","manage xdg_output objects",N,N],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",291,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",291,N],[12,"id","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1::Request","",291,N],[12,"output","","",291,N],[4,"Event","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",N,N],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::server","compositor logical output region",N,N],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output object",292,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",293,N],[12,"x","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",293,N],[12,"y","","",293,N],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","size of the output in the global compositor space",293,N],[12,"width","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",293,N],[12,"height","","",293,N],[13,"Done","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","all information about the output have been sent",293,N],[13,"Name","","name of this output",293,N],[12,"name","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",293,N],[13,"Description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","human-readable description of this output",293,N],[12,"description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",293,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_output::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::unstable::xdg_output::v1::c_interfaces","",N,N],[7,"zxdg_output_manager_v1_requests","","",N,N],[7,"zxdg_output_manager_v1_interface","","",N,N],[7,"zxdg_output_v1_requests","","",N,N],[7,"zxdg_output_v1_events","","",N,N],[7,"zxdg_output_v1_interface","","",N,N],[0,"xdg_shell","wayland_protocols::unstable","XDG Shell protocol",N,N],[0,"v5","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v5","Client-side API of this protocol",N,N],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",N,N],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[4,"Version","","latest protocol version",N,N],[13,"Current","","Always the latest version",294,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",295,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",295,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",295,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",295,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",296,N],[13,"UseUnstableVersion","","enable use of this unstable version",296,N],[12,"version","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",296,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a shell surface from a surface",296,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",296,N],[12,"surface","","",296,N],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a popup for a surface",296,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",296,N],[12,"surface","","",296,N],[12,"parent","","",296,N],[12,"seat","","",296,N],[12,"serial","","",296,N],[12,"x","","",296,N],[12,"y","","",296,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","respond to a ping event",296,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",296,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",297,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event","",297,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[10,"destroy","","destroy xdg_shell",298,N],[10,"use_unstable_version","","enable use of this unstable version",298,N],[10,"get_xdg_surface","","create a shell surface from a surface",298,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"get_xdg_popup","","create a popup for a surface",298,[[["self"],["proxy"],["proxy"],["proxy"],["u32"],["i32"],["i32"],["f"]],["result",["proxy"]]]],[10,"pong","","respond to a ping event",298,N],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::client","A desktop window",N,N],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",299,N],[13,"Top","","",299,N],[13,"Bottom","","",299,N],[13,"Left","","",299,N],[13,"TopLeft","","",299,N],[13,"BottomLeft","","",299,N],[13,"Right","","",299,N],[13,"TopRight","","",299,N],[13,"BottomRight","","",299,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",300,N],[13,"Fullscreen","","the surface is fullscreen",300,N],[13,"Resizing","","the surface is being resized",300,N],[13,"Activated","","the surface is now activated",300,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",301,N],[13,"SetParent","","set the parent of this surface",301,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set surface title",301,N],[12,"title","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set application ID",301,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","show the window menu",301,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[12,"serial","","",301,N],[12,"x","","",301,N],[12,"y","","",301,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive move",301,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[12,"serial","","",301,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive resize",301,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[12,"serial","","",301,N],[12,"edges","","",301,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","ack a configure event",301,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set the new window geometry",301,N],[12,"x","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[12,"y","","",301,N],[12,"width","","",301,N],[12,"height","","",301,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","maximize the window",301,N],[13,"UnsetMaximized","","unmaximize the window",301,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",301,N],[12,"output","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",301,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",301,N],[13,"SetMinimized","","set the window as minimized",301,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",302,N],[12,"width","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event","",302,N],[12,"height","","",302,N],[12,"states","","",302,N],[12,"serial","","",302,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","surface wants to be closed",302,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","Destroy the xdg_surface",303,N],[10,"set_parent","","set the parent of this surface",303,N],[10,"set_title","","set surface title",303,N],[10,"set_app_id","","set application ID",303,N],[10,"show_window_menu","","show the window menu",303,N],[10,"_move","","start an interactive move",303,N],[10,"resize","","start an interactive resize",303,N],[10,"ack_configure","","ack a configure event",303,N],[10,"set_window_geometry","","set the new window geometry",303,N],[10,"set_maximized","","maximize the window",303,N],[10,"unset_maximized","","unmaximize the window",303,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",303,N],[10,"unset_fullscreen","","",303,N],[10,"set_minimized","","set the window as minimized",303,N],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",N,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",304,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",305,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",306,N],[0,"server","wayland_protocols::unstable::xdg_shell::v5","Server-side API of this protocol",N,N],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::server","create desktop-style surfaces",N,N],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",N,N],[4,"Version","","latest protocol version",N,N],[13,"Current","","Always the latest version",307,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",308,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",308,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",308,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",308,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",309,N],[13,"UseUnstableVersion","","enable use of this unstable version",309,N],[12,"version","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",309,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a shell surface from a surface",309,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",309,N],[12,"surface","","",309,N],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a popup for a surface",309,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",309,N],[12,"surface","","",309,N],[12,"parent","","",309,N],[12,"seat","","",309,N],[12,"serial","","",309,N],[12,"x","","",309,N],[12,"y","","",309,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","respond to a ping event",309,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",309,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",310,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Event","",310,N],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::server","A desktop window",N,N],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",311,N],[13,"Top","","",311,N],[13,"Bottom","","",311,N],[13,"Left","","",311,N],[13,"TopLeft","","",311,N],[13,"BottomLeft","","",311,N],[13,"Right","","",311,N],[13,"TopRight","","",311,N],[13,"BottomRight","","",311,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",312,N],[13,"Fullscreen","","the surface is fullscreen",312,N],[13,"Resizing","","the surface is being resized",312,N],[13,"Activated","","the surface is now activated",312,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",313,N],[13,"SetParent","","set the parent of this surface",313,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set surface title",313,N],[12,"title","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set application ID",313,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","show the window menu",313,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[12,"serial","","",313,N],[12,"x","","",313,N],[12,"y","","",313,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive move",313,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[12,"serial","","",313,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive resize",313,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[12,"serial","","",313,N],[12,"edges","","",313,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","ack a configure event",313,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set the new window geometry",313,N],[12,"x","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[12,"y","","",313,N],[12,"width","","",313,N],[12,"height","","",313,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","maximize the window",313,N],[13,"UnsetMaximized","","unmaximize the window",313,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",313,N],[12,"output","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",313,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",313,N],[13,"SetMinimized","","set the window as minimized",313,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",314,N],[12,"width","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Event","",314,N],[12,"height","","",314,N],[12,"states","","",314,N],[12,"serial","","",314,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","surface wants to be closed",314,N],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::server","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",N,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",315,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",316,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v5","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v5::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"xdg_shell_requests","","",N,N],[7,"xdg_shell_events","","",N,N],[7,"xdg_shell_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",294,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",294,[[["self"]],["u32"]]],[11,"from_raw","","",295,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",295,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",299,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",299,[[["self"]],["u32"]]],[11,"from_raw","","",300,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",300,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",307,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",307,[[["self"]],["u32"]]],[11,"from_raw","","",308,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",308,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",311,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",311,[[["self"]],["u32"]]],[11,"from_raw","","",312,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",312,[[["self"]],["u32"]]],[0,"v6","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v6","Client-side API of this protocol",N,N],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",N,N],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",317,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",317,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",317,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",317,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",317,N],[13,"InvalidPositioner","","the client provided an invalid positioner",317,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",318,N],[13,"CreatePositioner","","create a positioner object",318,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",318,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","create a shell surface from a surface",318,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",318,N],[12,"surface","","",318,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","respond to a ping event",318,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",318,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",319,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event","",319,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[10,"destroy","","destroy xdg_shell",320,N],[10,"create_positioner","","create a positioner object",320,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",320,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"pong","","respond to a ping event",320,N],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::client","child surface positioner",N,N],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[3,"ZxdgPositionerV6","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",321,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",322,N],[13,"SetSize","","set the size of the to-be positioned rectangle",322,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",322,N],[12,"height","","",322,N],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the anchor rectangle within the parent surface",322,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",322,N],[12,"y","","",322,N],[12,"width","","",322,N],[12,"height","","",322,N],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set anchor rectangle anchor edges",322,N],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",322,N],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set child surface gravity",322,N],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",322,N],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the adjustment to be done when constrained",322,N],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",322,N],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set surface position offset",322,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",322,N],[12,"y","","",322,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",323,N],[10,"set_size","","set the size of the to-be positioned rectangle",323,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",323,N],[10,"set_anchor","","set anchor rectangle anchor edges",323,N],[10,"set_gravity","","set child surface gravity",323,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",323,N],[10,"set_offset","","set surface position offset",323,N],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",N,N],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",324,N],[13,"AlreadyConstructed","","",324,N],[13,"UnconfiguredBuffer","","",324,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",325,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",325,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",325,N],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","assign the xdg_popup surface role",325,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",325,N],[12,"parent","","",325,N],[12,"positioner","","",325,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","set the new window geometry",325,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",325,N],[12,"y","","",325,N],[12,"width","","",325,N],[12,"height","","",325,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","ack a configure event",325,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",325,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",326,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event","",326,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[10,"destroy","","destroy the xdg_surface",327,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",327,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",327,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[10,"set_window_geometry","","set the new window geometry",327,N],[10,"ack_configure","","ack a configure event",327,N],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::client","toplevel surface",N,N],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",328,N],[13,"Top","","",328,N],[13,"Bottom","","",328,N],[13,"Left","","",328,N],[13,"TopLeft","","",328,N],[13,"BottomLeft","","",328,N],[13,"Right","","",328,N],[13,"TopRight","","",328,N],[13,"BottomRight","","",328,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",329,N],[13,"Fullscreen","","the surface is fullscreen",329,N],[13,"Resizing","","the surface is being resized",329,N],[13,"Activated","","the surface is now activated",329,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",330,N],[13,"SetParent","","set the parent of this surface",330,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set surface title",330,N],[12,"title","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set application ID",330,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","show the window menu",330,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[12,"serial","","",330,N],[12,"x","","",330,N],[12,"y","","",330,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive move",330,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[12,"serial","","",330,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive resize",330,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[12,"serial","","",330,N],[12,"edges","","",330,N],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the maximum size",330,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[12,"height","","",330,N],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the minimum size",330,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[12,"height","","",330,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","maximize the window",330,N],[13,"UnsetMaximized","","unmaximize the window",330,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",330,N],[12,"output","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",330,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",330,N],[13,"SetMinimized","","set the window as minimized",330,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",331,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event","",331,N],[12,"height","","",331,N],[12,"states","","",331,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","surface wants to be closed",331,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",332,N],[10,"set_parent","","set the parent of this surface",332,N],[10,"set_title","","set surface title",332,N],[10,"set_app_id","","set application ID",332,N],[10,"show_window_menu","","show the window menu",332,N],[10,"_move","","start an interactive move",332,N],[10,"resize","","start an interactive resize",332,N],[10,"set_max_size","","set the maximum size",332,N],[10,"set_min_size","","set the minimum size",332,N],[10,"set_maximized","","maximize the window",332,N],[10,"unset_maximized","","unmaximize the window",332,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",332,N],[10,"unset_fullscreen","","",332,N],[10,"set_minimized","","set the window as minimized",332,N],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",N,N],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",333,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",334,N],[13,"Grab","","make the popup take an explicit grab",334,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request","",334,N],[12,"serial","","",334,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",335,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event","",335,N],[12,"y","","",335,N],[12,"width","","",335,N],[12,"height","","",335,N],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","popup interaction is done",335,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",336,N],[10,"grab","","make the popup take an explicit grab",336,N],[0,"server","wayland_protocols::unstable::xdg_shell::v6","Server-side API of this protocol",N,N],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::server","create desktop-style surfaces",N,N],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",337,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",337,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",337,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",337,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",337,N],[13,"InvalidPositioner","","the client provided an invalid positioner",337,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",338,N],[13,"CreatePositioner","","create a positioner object",338,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",338,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","create a shell surface from a surface",338,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",338,N],[12,"surface","","",338,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","respond to a ping event",338,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",338,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",339,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Event","",339,N],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::server","child surface positioner",N,N],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[3,"ZxdgPositionerV6","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",340,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",341,N],[13,"SetSize","","set the size of the to-be positioned rectangle",341,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",341,N],[12,"height","","",341,N],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the anchor rectangle within the parent surface",341,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",341,N],[12,"y","","",341,N],[12,"width","","",341,N],[12,"height","","",341,N],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set anchor rectangle anchor edges",341,N],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",341,N],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set child surface gravity",341,N],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",341,N],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the adjustment to be done when constrained",341,N],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",341,N],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set surface position offset",341,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",341,N],[12,"y","","",341,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",N,N],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::server","desktop user interface surface base interface",N,N],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",342,N],[13,"AlreadyConstructed","","",342,N],[13,"UnconfiguredBuffer","","",342,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",343,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",343,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",343,N],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","assign the xdg_popup surface role",343,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",343,N],[12,"parent","","",343,N],[12,"positioner","","",343,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","set the new window geometry",343,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",343,N],[12,"y","","",343,N],[12,"width","","",343,N],[12,"height","","",343,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","ack a configure event",343,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",343,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",344,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Event","",344,N],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::server","toplevel surface",N,N],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",345,N],[13,"Top","","",345,N],[13,"Bottom","","",345,N],[13,"Left","","",345,N],[13,"TopLeft","","",345,N],[13,"BottomLeft","","",345,N],[13,"Right","","",345,N],[13,"TopRight","","",345,N],[13,"BottomRight","","",345,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",346,N],[13,"Fullscreen","","the surface is fullscreen",346,N],[13,"Resizing","","the surface is being resized",346,N],[13,"Activated","","the surface is now activated",346,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",347,N],[13,"SetParent","","set the parent of this surface",347,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set surface title",347,N],[12,"title","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set application ID",347,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","show the window menu",347,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[12,"serial","","",347,N],[12,"x","","",347,N],[12,"y","","",347,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive move",347,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[12,"serial","","",347,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive resize",347,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[12,"serial","","",347,N],[12,"edges","","",347,N],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the maximum size",347,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[12,"height","","",347,N],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the minimum size",347,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[12,"height","","",347,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","maximize the window",347,N],[13,"UnsetMaximized","","unmaximize the window",347,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",347,N],[12,"output","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",347,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",347,N],[13,"SetMinimized","","set the window as minimized",347,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",348,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Event","",348,N],[12,"height","","",348,N],[12,"states","","",348,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","surface wants to be closed",348,N],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::server","short-lived, popup surfaces for menus",N,N],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",349,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",350,N],[13,"Grab","","make the popup take an explicit grab",350,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Request","",350,N],[12,"serial","","",350,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",351,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Event","",351,N],[12,"y","","",351,N],[12,"width","","",351,N],[12,"height","","",351,N],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","popup interaction is done",351,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v6","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v6::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"zxdg_shell_v6_requests","","",N,N],[7,"zxdg_shell_v6_events","","",N,N],[7,"zxdg_shell_v6_interface","","",N,N],[7,"zxdg_positioner_v6_requests","","",N,N],[7,"zxdg_positioner_v6_interface","","",N,N],[7,"zxdg_surface_v6_requests","","",N,N],[7,"zxdg_surface_v6_events","","",N,N],[7,"zxdg_surface_v6_interface","","",N,N],[7,"zxdg_toplevel_v6_requests","","",N,N],[7,"zxdg_toplevel_v6_events","","",N,N],[7,"zxdg_toplevel_v6_interface","","",N,N],[7,"zxdg_popup_v6_requests","","",N,N],[7,"zxdg_popup_v6_events","","",N,N],[7,"zxdg_popup_v6_interface","","",N,N],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",317,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",317,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",321,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",321,[[["self"]],["u32"]]],[18,"None","","the center of the anchor rectangle",352,N],[18,"Top","","the top edge of the anchor rectangle",352,N],[18,"Bottom","","the bottom edge of the anchor rectangle",352,N],[18,"Left","","the left edge of the anchor rectangle",352,N],[18,"Right","","the right edge of the anchor rectangle",352,N],[11,"empty","","Returns an empty set of flags.",352,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",352,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",352,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",352,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",352,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",352,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",352,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",352,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",352,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",352,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",352,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",352,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",352,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",352,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",352,[[["self"]],["u32"]]],[18,"None","","center over the anchor edge",353,N],[18,"Top","","position above the anchor edge",353,N],[18,"Bottom","","position below the anchor edge",353,N],[18,"Left","","position to the left of the anchor edge",353,N],[18,"Right","","position to the right of the anchor edge",353,N],[11,"empty","","Returns an empty set of flags.",353,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",353,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",353,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",353,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",353,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",353,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",353,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",353,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",353,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",353,[[["self"],["gravity"]]]],[11,"remove","","Removes the specified flags in-place.",353,[[["self"],["gravity"]]]],[11,"toggle","","Toggles the specified flags in-place.",353,[[["self"],["gravity"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",353,[[["self"],["gravity"],["bool"]]]],[11,"from_raw","","",353,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",353,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",354,N],[18,"SlideX","","move along the x axis until unconstrained",354,N],[18,"SlideY","","move along the y axis until unconstrained",354,N],[18,"FlipX","","invert the anchor and gravity on the x axis",354,N],[18,"FlipY","","invert the anchor and gravity on the y axis",354,N],[18,"ResizeX","","horizontally resize the surface",354,N],[18,"ResizeY","","vertically resize the surface",354,N],[11,"empty","","Returns an empty set of flags.",354,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",354,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",354,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",354,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",354,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",354,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",354,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",354,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",354,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",354,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",354,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",354,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",354,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",324,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",324,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",328,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",328,[[["self"]],["u32"]]],[11,"from_raw","","",329,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",329,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",333,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",333,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",337,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",337,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",340,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",340,[[["self"]],["u32"]]],[18,"None","","the center of the anchor rectangle",355,N],[18,"Top","","the top edge of the anchor rectangle",355,N],[18,"Bottom","","the bottom edge of the anchor rectangle",355,N],[18,"Left","","the left edge of the anchor rectangle",355,N],[18,"Right","","the right edge of the anchor rectangle",355,N],[11,"empty","","Returns an empty set of flags.",355,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",355,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",355,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",355,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",355,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",355,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",355,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",355,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",355,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",355,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",355,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",355,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",355,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",355,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",355,[[["self"]],["u32"]]],[18,"None","","center over the anchor edge",356,N],[18,"Top","","position above the anchor edge",356,N],[18,"Bottom","","position below the anchor edge",356,N],[18,"Left","","position to the left of the anchor edge",356,N],[18,"Right","","position to the right of the anchor edge",356,N],[11,"empty","","Returns an empty set of flags.",356,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",356,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",356,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",356,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",356,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",356,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",356,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",356,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",356,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",356,[[["self"],["gravity"]]]],[11,"remove","","Removes the specified flags in-place.",356,[[["self"],["gravity"]]]],[11,"toggle","","Toggles the specified flags in-place.",356,[[["self"],["gravity"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",356,[[["self"],["gravity"],["bool"]]]],[11,"from_raw","","",356,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",356,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",357,N],[18,"SlideX","","move along the x axis until unconstrained",357,N],[18,"SlideY","","move along the y axis until unconstrained",357,N],[18,"FlipX","","invert the anchor and gravity on the x axis",357,N],[18,"FlipY","","invert the anchor and gravity on the y axis",357,N],[18,"ResizeX","","horizontally resize the surface",357,N],[18,"ResizeY","","vertically resize the surface",357,N],[11,"empty","","Returns an empty set of flags.",357,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",357,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",357,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",357,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",357,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",357,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",357,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",357,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",357,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",357,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",357,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",357,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",357,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",342,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",342,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",345,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",345,[[["self"]],["u32"]]],[11,"from_raw","","",346,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",346,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",349,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",349,[[["self"]],["u32"]]],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",N,N],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",N,N],[0,"client","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard grab manager",358,N],[13,"GrabKeyboard","","grab the keyboard to a surface",358,N],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request","",358,N],[12,"surface","","",358,N],[12,"seat","","",358,N],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard grab manager",359,N],[10,"grab_keyboard","","grab the keyboard to a surface",359,[[["self"],["proxy"],["proxy"],["f"]],["result",["proxy"]]]],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",N,N],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",360,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the grabbed keyboard object",361,N],[0,"server","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Server-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","context object for keyboard grab manager",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard grab manager",362,N],[13,"GrabKeyboard","","grab the keyboard to a surface",362,N],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1::Request","",362,N],[12,"surface","","",362,N],[12,"seat","","",362,N],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","interface for grabbing the keyboard",N,N],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",363,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::unstable::xwayland_keyboard_grab::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_requests","","",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_interface","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_requests","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_interface","","",N,N],[0,"wlr","wayland_protocols","wlr-procotols extension family",N,N],[0,"unstable","wayland_protocols::wlr","Unstable protocols from wlr-protocols",N,N],[0,"export_dmabuf","wayland_protocols::wlr::unstable","A protocol for low overhead screen content capturing",N,N],[0,"v1","wayland_protocols::wlr::unstable::export_dmabuf","",N,N],[0,"client","wayland_protocols::wlr::unstable::export_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwlr_export_dmabuf_manager_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client","manager to inform clients and begin capturing",N,N],[3,"ZwlrExportDmabufManagerV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture a frame from an output",364,N],[12,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1::Request","",364,N],[12,"overlay_cursor","","",364,N],[12,"output","","",364,N],[13,"Destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","destroy the manager",364,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"capture_output","","capture a frame from an output",365,[[["self"],["i32"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the manager",365,N],[0,"zwlr_export_dmabuf_frame_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client","a DMA-BUF frame",N,N],[3,"ZwlrExportDmabufFrameV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",N,N],[4,"Flags","","frame flags",N,N],[13,"Transient","","clients should copy frame before processing",366,N],[4,"CancelReason","","cancel reason",N,N],[13,"Temporary","","temporary error, source will produce more frames",367,N],[13,"Permanent","","fatal error, source will not produce frames",367,N],[13,"Resizing","","temporary error, source will produce more frames",367,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",368,N],[4,"Event","","",N,N],[13,"Frame","","a frame description",369,N],[12,"width","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",369,N],[12,"height","","",369,N],[12,"offset_x","","",369,N],[12,"offset_y","","",369,N],[12,"buffer_flags","","",369,N],[12,"flags","","",369,N],[12,"format","","",369,N],[12,"mod_high","","",369,N],[12,"mod_low","","",369,N],[12,"num_objects","","",369,N],[13,"Object","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","an object description",369,N],[12,"index","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",369,N],[12,"fd","","",369,N],[12,"size","","",369,N],[12,"offset","","",369,N],[12,"stride","","",369,N],[12,"plane_index","","",369,N],[13,"Ready","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","indicates frame is available for reading",369,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",369,N],[12,"tv_sec_lo","","",369,N],[12,"tv_nsec","","",369,N],[13,"Cancel","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","indicates the frame is no longer valid",369,N],[12,"reason","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event","",369,N],[8,"RequestsTrait","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",N,N],[10,"destroy","","delete this object, used or not",370,N],[0,"server","wayland_protocols::wlr::unstable::export_dmabuf::v1","Server-side API of this protocol",N,N],[0,"zwlr_export_dmabuf_manager_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","manager to inform clients and begin capturing",N,N],[3,"ZwlrExportDmabufManagerV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture a frame from an output",371,N],[12,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1::Request","",371,N],[12,"overlay_cursor","","",371,N],[12,"output","","",371,N],[13,"Destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","destroy the manager",371,N],[4,"Event","","",N,N],[0,"zwlr_export_dmabuf_frame_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","a DMA-BUF frame",N,N],[3,"ZwlrExportDmabufFrameV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",N,N],[4,"Flags","","frame flags",N,N],[13,"Transient","","clients should copy frame before processing",372,N],[4,"CancelReason","","cancel reason",N,N],[13,"Temporary","","temporary error, source will produce more frames",373,N],[13,"Permanent","","fatal error, source will not produce frames",373,N],[13,"Resizing","","temporary error, source will produce more frames",373,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",374,N],[4,"Event","","",N,N],[13,"Frame","","a frame description",375,N],[12,"width","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",375,N],[12,"height","","",375,N],[12,"offset_x","","",375,N],[12,"offset_y","","",375,N],[12,"buffer_flags","","",375,N],[12,"flags","","",375,N],[12,"format","","",375,N],[12,"mod_high","","",375,N],[12,"mod_low","","",375,N],[12,"num_objects","","",375,N],[13,"Object","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","an object description",375,N],[12,"index","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",375,N],[12,"fd","","",375,N],[12,"size","","",375,N],[12,"offset","","",375,N],[12,"stride","","",375,N],[12,"plane_index","","",375,N],[13,"Ready","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates frame is available for reading",375,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",375,N],[12,"tv_sec_lo","","",375,N],[12,"tv_nsec","","",375,N],[13,"Cancel","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates the frame is no longer valid",375,N],[12,"reason","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",375,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::export_dmabuf::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::c_interfaces","",N,N],[7,"zwlr_export_dmabuf_manager_v1_requests","","",N,N],[7,"zwlr_export_dmabuf_manager_v1_interface","","",N,N],[7,"zwlr_export_dmabuf_frame_v1_requests","","",N,N],[7,"zwlr_export_dmabuf_frame_v1_events","","",N,N],[7,"zwlr_export_dmabuf_frame_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",366,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",366,[[["self"]],["u32"]]],[11,"from_raw","","",367,[[["u32"]],["option",["cancelreason"]]]],[11,"to_raw","","",367,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",372,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",372,[[["self"]],["u32"]]],[11,"from_raw","","",373,[[["u32"]],["option",["cancelreason"]]]],[11,"to_raw","","",373,[[["self"]],["u32"]]],[0,"foreign_toplevel","wayland_protocols::wlr::unstable","List and control opened apps",N,N],[0,"v1","wayland_protocols::wlr::unstable::foreign_toplevel","",N,N],[0,"client","wayland_protocols::wlr::unstable::foreign_toplevel::v1","Client-side API of this protocol",N,N],[0,"zwlr_foreign_toplevel_manager_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client","list and control opened apps",N,N],[3,"ZwlrForeignToplevelManagerV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Stop","","stop sending events",376,N],[4,"Event","","",N,N],[13,"Toplevel","","a toplevel has been created",377,N],[12,"toplevel","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1::Event","",377,N],[13,"Finished","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","the compositor has finished with the toplevel manager",377,N],[8,"RequestsTrait","","",N,N],[10,"stop","","stop sending events",378,N],[0,"zwlr_foreign_toplevel_handle_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client","an opened toplevel",N,N],[3,"ZwlrForeignToplevelHandleV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",N,N],[4,"State","","types of states on the toplevel",N,N],[13,"Maximized","","the toplevel is maximized",379,N],[13,"Minimized","","the toplevel is minimized",379,N],[13,"Activated","","the toplevel is active",379,N],[4,"Error","","",N,N],[13,"InvalidRectangle","","the provided rectangle is invalid",380,N],[4,"Request","","",N,N],[13,"SetMaximized","","requests that the toplevel be maximized",381,N],[13,"UnsetMaximized","","requests that the toplevel be unmaximized",381,N],[13,"SetMinimized","","requests that the toplevel be minimized",381,N],[13,"UnsetMinimized","","requests that the toplevel be unminimized",381,N],[13,"Activate","","activate the toplevel",381,N],[12,"seat","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request","",381,N],[13,"Close","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","request that the toplevel be closed",381,N],[13,"SetRectangle","","the rectangle which represents the toplevel",381,N],[12,"surface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request","",381,N],[12,"x","","",381,N],[12,"y","","",381,N],[12,"width","","",381,N],[12,"height","","",381,N],[13,"Destroy","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","destroy the zwlr_foreign_toplevel_handle_v1 object",381,N],[4,"Event","","",N,N],[13,"Title","","title change",382,N],[12,"title","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",382,N],[13,"AppId","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","app-id change",382,N],[12,"app_id","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",382,N],[13,"OutputEnter","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","toplevel entered an output",382,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",382,N],[13,"OutputLeave","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","toplevel left an output",382,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",382,N],[13,"State","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","the toplevel state changed",382,N],[12,"state","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event","",382,N],[13,"Done","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","all information about the toplevel has been sent",382,N],[13,"Closed","","this toplevel has been destroyed",382,N],[8,"RequestsTrait","","",N,N],[10,"set_maximized","","requests that the toplevel be maximized",383,N],[10,"unset_maximized","","requests that the toplevel be unmaximized",383,N],[10,"set_minimized","","requests that the toplevel be minimized",383,N],[10,"unset_minimized","","requests that the toplevel be unminimized",383,N],[10,"activate","","activate the toplevel",383,N],[10,"close","","request that the toplevel be closed",383,N],[10,"set_rectangle","","the rectangle which represents the toplevel",383,N],[10,"destroy","","destroy the zwlr_foreign_toplevel_handle_v1 object",383,N],[0,"server","wayland_protocols::wlr::unstable::foreign_toplevel::v1","Server-side API of this protocol",N,N],[0,"zwlr_foreign_toplevel_manager_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server","list and control opened apps",N,N],[3,"ZwlrForeignToplevelManagerV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Stop","","stop sending events",384,N],[4,"Event","","",N,N],[13,"Toplevel","","a toplevel has been created",385,N],[12,"toplevel","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1::Event","",385,N],[13,"Finished","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","the compositor has finished with the toplevel manager",385,N],[0,"zwlr_foreign_toplevel_handle_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server","an opened toplevel",N,N],[3,"ZwlrForeignToplevelHandleV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",N,N],[4,"State","","types of states on the toplevel",N,N],[13,"Maximized","","the toplevel is maximized",386,N],[13,"Minimized","","the toplevel is minimized",386,N],[13,"Activated","","the toplevel is active",386,N],[4,"Error","","",N,N],[13,"InvalidRectangle","","the provided rectangle is invalid",387,N],[4,"Request","","",N,N],[13,"SetMaximized","","requests that the toplevel be maximized",388,N],[13,"UnsetMaximized","","requests that the toplevel be unmaximized",388,N],[13,"SetMinimized","","requests that the toplevel be minimized",388,N],[13,"UnsetMinimized","","requests that the toplevel be unminimized",388,N],[13,"Activate","","activate the toplevel",388,N],[12,"seat","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request","",388,N],[13,"Close","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","request that the toplevel be closed",388,N],[13,"SetRectangle","","the rectangle which represents the toplevel",388,N],[12,"surface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request","",388,N],[12,"x","","",388,N],[12,"y","","",388,N],[12,"width","","",388,N],[12,"height","","",388,N],[13,"Destroy","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","destroy the zwlr_foreign_toplevel_handle_v1 object",388,N],[4,"Event","","",N,N],[13,"Title","","title change",389,N],[12,"title","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",389,N],[13,"AppId","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","app-id change",389,N],[12,"app_id","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",389,N],[13,"OutputEnter","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","toplevel entered an output",389,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",389,N],[13,"OutputLeave","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","toplevel left an output",389,N],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",389,N],[13,"State","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","the toplevel state changed",389,N],[12,"state","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",389,N],[13,"Done","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","all information about the toplevel has been sent",389,N],[13,"Closed","","this toplevel has been destroyed",389,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::foreign_toplevel::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_output_interface","","",N,N],[7,"zwlr_foreign_toplevel_manager_v1_requests","","",N,N],[7,"zwlr_foreign_toplevel_manager_v1_events","","",N,N],[7,"zwlr_foreign_toplevel_manager_v1_interface","","",N,N],[7,"zwlr_foreign_toplevel_handle_v1_requests","","",N,N],[7,"zwlr_foreign_toplevel_handle_v1_events","","",N,N],[7,"zwlr_foreign_toplevel_handle_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",379,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",379,[[["self"]],["u32"]]],[11,"from_raw","","",380,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",380,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",386,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",386,[[["self"]],["u32"]]],[11,"from_raw","","",387,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",387,[[["self"]],["u32"]]],[0,"gamma_control","wayland_protocols::wlr::unstable","Manage gamma tables of outputs.",N,N],[0,"v1","wayland_protocols::wlr::unstable::gamma_control","",N,N],[0,"client","wayland_protocols::wlr::unstable::gamma_control::v1","Client-side API of this protocol",N,N],[0,"zwlr_gamma_control_manager_v1","wayland_protocols::wlr::unstable::gamma_control::v1::client","manager to create per-output gamma controls",N,N],[3,"ZwlrGammaControlManagerV1","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetGammaControl","","get a gamma control for an output",390,N],[12,"id","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1::Request","",390,N],[12,"output","","",390,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","destroy the manager",390,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_gamma_control","","get a gamma control for an output",391,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the manager",391,N],[0,"zwlr_gamma_control_v1","wayland_protocols::wlr::unstable::gamma_control::v1::client","adjust gamma tables for an output",N,N],[3,"ZwlrGammaControlV1","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidGamma","","invalid gamma tables",392,N],[4,"Request","","",N,N],[13,"SetGamma","","set the gamma table",393,N],[12,"fd","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Request","",393,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","destroy this control",393,N],[4,"Event","","",N,N],[13,"GammaSize","","size of gamma ramps",394,N],[12,"size","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Event","",394,N],[13,"Failed","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","object no longer valid",394,N],[8,"RequestsTrait","","",N,N],[10,"set_gamma","","set the gamma table",395,N],[10,"destroy","","destroy this control",395,N],[0,"server","wayland_protocols::wlr::unstable::gamma_control::v1","Server-side API of this protocol",N,N],[0,"zwlr_gamma_control_manager_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","manager to create per-output gamma controls",N,N],[3,"ZwlrGammaControlManagerV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetGammaControl","","get a gamma control for an output",396,N],[12,"id","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1::Request","",396,N],[12,"output","","",396,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","destroy the manager",396,N],[4,"Event","","",N,N],[0,"zwlr_gamma_control_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","adjust gamma tables for an output",N,N],[3,"ZwlrGammaControlV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",N,N],[4,"Error","","",N,N],[13,"InvalidGamma","","invalid gamma tables",397,N],[4,"Request","","",N,N],[13,"SetGamma","","set the gamma table",398,N],[12,"fd","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Request","",398,N],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","destroy this control",398,N],[4,"Event","","",N,N],[13,"GammaSize","","size of gamma ramps",399,N],[12,"size","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Event","",399,N],[13,"Failed","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","object no longer valid",399,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::gamma_control::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::wlr::unstable::gamma_control::v1::c_interfaces","",N,N],[7,"zwlr_gamma_control_manager_v1_requests","","",N,N],[7,"zwlr_gamma_control_manager_v1_interface","","",N,N],[7,"zwlr_gamma_control_v1_requests","","",N,N],[7,"zwlr_gamma_control_v1_events","","",N,N],[7,"zwlr_gamma_control_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",392,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",392,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",397,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",397,[[["self"]],["u32"]]],[0,"input_inhibitor","wayland_protocols::wlr::unstable","Inhibits input events to other clients",N,N],[0,"v1","wayland_protocols::wlr::unstable::input_inhibitor","",N,N],[0,"client","wayland_protocols::wlr::unstable::input_inhibitor::v1","Client-side API of this protocol",N,N],[0,"zwlr_input_inhibit_manager_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client","inhibits input events to other clients",N,N],[3,"ZwlrInputInhibitManagerV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","an input inhibitor is already in use on the compositor",400,N],[4,"Request","","",N,N],[13,"GetInhibitor","","inhibit input to other clients",401,N],[12,"id","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1::Request","",401,N],[4,"Event","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_inhibitor","","inhibit input to other clients",402,[[["self"],["f"]],["result",["proxy"]]]],[0,"zwlr_input_inhibitor_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client","inhibits input to other clients",N,N],[3,"ZwlrInputInhibitorV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input inhibitor object",403,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the input inhibitor object",404,N],[0,"server","wayland_protocols::wlr::unstable::input_inhibitor::v1","Server-side API of this protocol",N,N],[0,"zwlr_input_inhibit_manager_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input events to other clients",N,N],[3,"ZwlrInputInhibitManagerV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","an input inhibitor is already in use on the compositor",405,N],[4,"Request","","",N,N],[13,"GetInhibitor","","inhibit input to other clients",406,N],[12,"id","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1::Request","",406,N],[4,"Event","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",N,N],[0,"zwlr_input_inhibitor_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input to other clients",N,N],[3,"ZwlrInputInhibitorV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the input inhibitor object",407,N],[4,"Event","","",N,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::input_inhibitor::v1","C interfaces for this protocol",N,N],[7,"zwlr_input_inhibit_manager_v1_requests","wayland_protocols::wlr::unstable::input_inhibitor::v1::c_interfaces","",N,N],[7,"zwlr_input_inhibit_manager_v1_interface","","",N,N],[7,"zwlr_input_inhibitor_v1_requests","","",N,N],[7,"zwlr_input_inhibitor_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",400,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",400,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",405,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",405,[[["self"]],["u32"]]],[0,"layer_shell","wayland_protocols::wlr::unstable","Layered shell protocol",N,N],[0,"v1","wayland_protocols::wlr::unstable::layer_shell","",N,N],[0,"client","wayland_protocols::wlr::unstable::layer_shell::v1","Client-side API of this protocol",N,N],[0,"zwlr_layer_shell_v1","wayland_protocols::wlr::unstable::layer_shell::v1::client","create surfaces that are layers of the desktop",N,N],[3,"ZwlrLayerShellV1","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",N,N],[4,"Error","","",N,N],[13,"Role","","wl_surface has another role",408,N],[13,"InvalidLayer","","layer value is invalid",408,N],[13,"AlreadyConstructed","","wl_surface has a buffer attached or committed",408,N],[4,"Layer","","available layers for surfaces",N,N],[13,"Background","","",409,N],[13,"Bottom","","",409,N],[13,"Top","","",409,N],[13,"Overlay","","",409,N],[4,"Request","","",N,N],[13,"GetLayerSurface","","create a layer_surface from a surface",410,N],[12,"id","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1::Request","",410,N],[12,"surface","","",410,N],[12,"output","","",410,N],[12,"layer","","",410,N],[12,"namespace","","",410,N],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_layer_surface","","create a layer_surface from a surface",411,[[["self"],["proxy"],["option",["proxy"]],["layer"],["string"],["f"]],["result",["proxy"]]]],[0,"zwlr_layer_surface_v1","wayland_protocols::wlr::unstable::layer_shell::v1::client","layer metadata interface",N,N],[3,"Anchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",N,N],[3,"ZwlrLayerSurfaceV1","","",N,N],[4,"Error","","",N,N],[13,"InvalidSurfaceState","","provided surface state is invalid",412,N],[13,"InvalidSize","","size is invalid",412,N],[13,"InvalidAnchor","","anchor bitfield is invalid",412,N],[4,"Request","","",N,N],[13,"SetSize","","sets the size of the surface",413,N],[12,"width","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",413,N],[12,"height","","",413,N],[13,"SetAnchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","configures the anchor point of the surface",413,N],[12,"anchor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",413,N],[13,"SetExclusiveZone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","configures the exclusive geometry of this surface",413,N],[12,"zone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",413,N],[13,"SetMargin","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","sets a margin from the anchor point",413,N],[12,"top","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",413,N],[12,"right","","",413,N],[12,"bottom","","",413,N],[12,"left","","",413,N],[13,"SetKeyboardInteractivity","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","requests keyboard events",413,N],[12,"keyboard_interactivity","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",413,N],[13,"GetPopup","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","assign this layer_surface as an xdg_popup parent",413,N],[12,"popup","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",413,N],[13,"AckConfigure","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","ack a configure event",413,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request","",413,N],[13,"Destroy","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","destroy the layer_surface",413,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",414,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Event","",414,N],[12,"width","","",414,N],[12,"height","","",414,N],[13,"Closed","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","surface should be closed",414,N],[8,"RequestsTrait","","",N,N],[10,"set_size","","sets the size of the surface",415,N],[10,"set_anchor","","configures the anchor point of the surface",415,N],[10,"set_exclusive_zone","","configures the exclusive geometry of this surface",415,N],[10,"set_margin","","sets a margin from the anchor point",415,N],[10,"set_keyboard_interactivity","","requests keyboard events",415,N],[10,"get_popup","","assign this layer_surface as an xdg_popup parent",415,N],[10,"ack_configure","","ack a configure event",415,N],[10,"destroy","","destroy the layer_surface",415,N],[0,"server","wayland_protocols::wlr::unstable::layer_shell::v1","Server-side API of this protocol",N,N],[0,"zwlr_layer_shell_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","create surfaces that are layers of the desktop",N,N],[3,"ZwlrLayerShellV1","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",N,N],[4,"Error","","",N,N],[13,"Role","","wl_surface has another role",416,N],[13,"InvalidLayer","","layer value is invalid",416,N],[13,"AlreadyConstructed","","wl_surface has a buffer attached or committed",416,N],[4,"Layer","","available layers for surfaces",N,N],[13,"Background","","",417,N],[13,"Bottom","","",417,N],[13,"Top","","",417,N],[13,"Overlay","","",417,N],[4,"Request","","",N,N],[13,"GetLayerSurface","","create a layer_surface from a surface",418,N],[12,"id","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1::Request","",418,N],[12,"surface","","",418,N],[12,"output","","",418,N],[12,"layer","","",418,N],[12,"namespace","","",418,N],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",N,N],[0,"zwlr_layer_surface_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","layer metadata interface",N,N],[3,"Anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",N,N],[3,"ZwlrLayerSurfaceV1","","",N,N],[4,"Error","","",N,N],[13,"InvalidSurfaceState","","provided surface state is invalid",419,N],[13,"InvalidSize","","size is invalid",419,N],[13,"InvalidAnchor","","anchor bitfield is invalid",419,N],[4,"Request","","",N,N],[13,"SetSize","","sets the size of the surface",420,N],[12,"width","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",420,N],[12,"height","","",420,N],[13,"SetAnchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the anchor point of the surface",420,N],[12,"anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",420,N],[13,"SetExclusiveZone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the exclusive geometry of this surface",420,N],[12,"zone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",420,N],[13,"SetMargin","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","sets a margin from the anchor point",420,N],[12,"top","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",420,N],[12,"right","","",420,N],[12,"bottom","","",420,N],[12,"left","","",420,N],[13,"SetKeyboardInteractivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","requests keyboard events",420,N],[12,"keyboard_interactivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",420,N],[13,"GetPopup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","assign this layer_surface as an xdg_popup parent",420,N],[12,"popup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",420,N],[13,"AckConfigure","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","ack a configure event",420,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",420,N],[13,"Destroy","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","destroy the layer_surface",420,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",421,N],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Event","",421,N],[12,"width","","",421,N],[12,"height","","",421,N],[13,"Closed","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","surface should be closed",421,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::layer_shell::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::wlr::unstable::layer_shell::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwlr_layer_shell_v1_requests","","",N,N],[7,"zwlr_layer_shell_v1_interface","","",N,N],[7,"zwlr_layer_surface_v1_requests","","",N,N],[7,"zwlr_layer_surface_v1_events","","",N,N],[7,"zwlr_layer_surface_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",408,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",408,[[["self"]],["u32"]]],[11,"from_raw","","",409,[[["u32"]],["option",["layer"]]]],[11,"to_raw","","",409,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",412,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",412,[[["self"]],["u32"]]],[18,"Top","","the top edge of the anchor rectangle",422,N],[18,"Bottom","","the bottom edge of the anchor rectangle",422,N],[18,"Left","","the left edge of the anchor rectangle",422,N],[18,"Right","","the right edge of the anchor rectangle",422,N],[11,"empty","","Returns an empty set of flags.",422,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",422,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",422,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",422,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",422,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",422,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",422,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",422,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",422,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",422,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",422,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",422,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",422,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",422,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",422,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",416,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",416,[[["self"]],["u32"]]],[11,"from_raw","","",417,[[["u32"]],["option",["layer"]]]],[11,"to_raw","","",417,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",419,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",419,[[["self"]],["u32"]]],[18,"Top","","the top edge of the anchor rectangle",423,N],[18,"Bottom","","the bottom edge of the anchor rectangle",423,N],[18,"Left","","the left edge of the anchor rectangle",423,N],[18,"Right","","the right edge of the anchor rectangle",423,N],[11,"empty","","Returns an empty set of flags.",423,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",423,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",423,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",423,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",423,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",423,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",423,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",423,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",423,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",423,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",423,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",423,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",423,[[["self"],["anchor"],["bool"]]]],[11,"from_raw","","",423,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",423,[[["self"]],["u32"]]],[0,"screencopy","wayland_protocols::wlr::unstable","Screen content capturing on client buffers",N,N],[0,"v1","wayland_protocols::wlr::unstable::screencopy","",N,N],[0,"client","wayland_protocols::wlr::unstable::screencopy::v1","Client-side API of this protocol",N,N],[0,"zwlr_screencopy_manager_v1","wayland_protocols::wlr::unstable::screencopy::v1::client","manager to inform clients and begin capturing",N,N],[3,"ZwlrScreencopyManagerV1","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture an output",424,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request","",424,N],[12,"overlay_cursor","","",424,N],[12,"output","","",424,N],[13,"CaptureOutputRegion","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","capture an output's region",424,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request","",424,N],[12,"overlay_cursor","","",424,N],[12,"output","","",424,N],[12,"x","","",424,N],[12,"y","","",424,N],[12,"width","","",424,N],[12,"height","","",424,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","destroy the manager",424,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"capture_output","","capture an output",425,[[["self"],["i32"],["proxy"],["f"]],["result",["proxy"]]]],[10,"capture_output_region","","capture an output's region",425,[[["self"],["i32"],["proxy"],["i32"],["i32"],["i32"],["i32"],["f"]],["result",["proxy"]]]],[10,"destroy","","destroy the manager",425,N],[0,"zwlr_screencopy_frame_v1","wayland_protocols::wlr::unstable::screencopy::v1::client","a frame ready for copy",N,N],[3,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",N,N],[3,"ZwlrScreencopyFrameV1","","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the object has already been used to copy a wl_buffer",426,N],[13,"InvalidBuffer","","buffer attributes are invalid",426,N],[4,"Request","","",N,N],[13,"Copy","","copy the frame",427,N],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Request","",427,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","delete this object, used or not",427,N],[4,"Event","","",N,N],[13,"Buffer","","buffer information",428,N],[12,"format","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",428,N],[12,"width","","",428,N],[12,"height","","",428,N],[12,"stride","","",428,N],[13,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","frame flags",428,N],[12,"flags","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",428,N],[13,"Ready","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","indicates frame is available for reading",428,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event","",428,N],[12,"tv_sec_lo","","",428,N],[12,"tv_nsec","","",428,N],[13,"Failed","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","frame copy failed",428,N],[8,"RequestsTrait","","",N,N],[10,"copy","","copy the frame",429,N],[10,"destroy","","delete this object, used or not",429,N],[0,"server","wayland_protocols::wlr::unstable::screencopy::v1","Server-side API of this protocol",N,N],[0,"zwlr_screencopy_manager_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","manager to inform clients and begin capturing",N,N],[3,"ZwlrScreencopyManagerV1","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CaptureOutput","","capture an output",430,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",430,N],[12,"overlay_cursor","","",430,N],[12,"output","","",430,N],[13,"CaptureOutputRegion","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","capture an output's region",430,N],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",430,N],[12,"overlay_cursor","","",430,N],[12,"output","","",430,N],[12,"x","","",430,N],[12,"y","","",430,N],[12,"width","","",430,N],[12,"height","","",430,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","destroy the manager",430,N],[4,"Event","","",N,N],[0,"zwlr_screencopy_frame_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","a frame ready for copy",N,N],[3,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",N,N],[3,"ZwlrScreencopyFrameV1","","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the object has already been used to copy a wl_buffer",431,N],[13,"InvalidBuffer","","buffer attributes are invalid",431,N],[4,"Request","","",N,N],[13,"Copy","","copy the frame",432,N],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Request","",432,N],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","delete this object, used or not",432,N],[4,"Event","","",N,N],[13,"Buffer","","buffer information",433,N],[12,"format","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",433,N],[12,"width","","",433,N],[12,"height","","",433,N],[12,"stride","","",433,N],[13,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame flags",433,N],[12,"flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",433,N],[13,"Ready","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","indicates frame is available for reading",433,N],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",433,N],[12,"tv_sec_lo","","",433,N],[12,"tv_nsec","","",433,N],[13,"Failed","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame copy failed",433,N],[0,"c_interfaces","wayland_protocols::wlr::unstable::screencopy::v1","C interfaces for this protocol",N,N],[7,"wl_buffer_interface","wayland_protocols::wlr::unstable::screencopy::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"zwlr_screencopy_manager_v1_requests","","",N,N],[7,"zwlr_screencopy_manager_v1_interface","","",N,N],[7,"zwlr_screencopy_frame_v1_requests","","",N,N],[7,"zwlr_screencopy_frame_v1_events","","",N,N],[7,"zwlr_screencopy_frame_v1_interface","","",N,N],[11,"from_raw","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",426,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",426,[[["self"]],["u32"]]],[18,"YInvert","","contents are y-inverted",434,N],[11,"empty","","Returns an empty set of flags.",434,[[],["flags"]]],[11,"all","","Returns the set containing all flags.",434,[[],["flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",434,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",434,[[["u32"]],["option",["flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",434,[[["u32"]],["flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",434,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",434,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",434,[[["self"],["flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",434,[[["self"],["flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",434,[[["self"],["flags"]]]],[11,"remove","","Removes the specified flags in-place.",434,[[["self"],["flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",434,[[["self"],["flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",434,[[["self"],["flags"],["bool"]]]],[11,"from_raw","","",434,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",434,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",431,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",431,[[["self"]],["u32"]]],[18,"YInvert","","contents are y-inverted",435,N],[11,"empty","","Returns an empty set of flags.",435,[[],["flags"]]],[11,"all","","Returns the set containing all flags.",435,[[],["flags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",435,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",435,[[["u32"]],["option",["flags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",435,[[["u32"]],["flags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",435,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",435,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",435,[[["self"],["flags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",435,[[["self"],["flags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",435,[[["self"],["flags"]]]],[11,"remove","","Removes the specified flags in-place.",435,[[["self"],["flags"]]]],[11,"toggle","","Toggles the specified flags in-place.",435,[[["self"],["flags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",435,[[["self"],["flags"],["bool"]]]],[11,"from_raw","","",435,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",435,[[["self"]],["u32"]]],[0,"presentation_time","wayland_protocols","Presentation time protocol",N,N],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",N,N],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",N,N],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[4,"Error","","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",436,N],[13,"InvalidFlag","","invalid flag",436,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",437,N],[13,"Feedback","","request presentation feedback information",437,N],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",437,N],[12,"callback","","",437,N],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",438,N],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",438,N],[8,"RequestsTrait","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[10,"destroy","","unbind from the presentation interface",439,N],[10,"feedback","","request presentation feedback information",439,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",N,N],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",N,N],[4,"Kind","","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",440,N],[13,"HwClock","","hardware provided the presentation timestamp",440,N],[13,"HwCompletion","","hardware signalled the start of the presentation",440,N],[13,"ZeroCopy","","presentation was done zero-copy",440,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",441,N],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",441,N],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",441,N],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",441,N],[12,"tv_sec_lo","","",441,N],[12,"tv_nsec","","",441,N],[12,"refresh","","",441,N],[12,"seq_hi","","",441,N],[12,"seq_lo","","",441,N],[12,"flags","","",441,N],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",441,N],[8,"RequestsTrait","","",N,N],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",N,N],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",N,N],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",N,N],[4,"Error","","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",442,N],[13,"InvalidFlag","","invalid flag",442,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",443,N],[13,"Feedback","","request presentation feedback information",443,N],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",443,N],[12,"callback","","",443,N],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",444,N],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",444,N],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",N,N],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::server::wp_presentation_feedback","",N,N],[4,"Kind","","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",445,N],[13,"HwClock","","hardware provided the presentation timestamp",445,N],[13,"HwCompletion","","hardware signalled the start of the presentation",445,N],[13,"ZeroCopy","","presentation was done zero-copy",445,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",446,N],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",446,N],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",446,N],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",446,N],[12,"tv_sec_lo","","",446,N],[12,"tv_nsec","","",446,N],[12,"refresh","","",446,N],[12,"seq_hi","","",446,N],[12,"seq_lo","","",446,N],[12,"flags","","",446,N],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",446,N],[0,"c_interfaces","wayland_protocols::presentation_time","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::presentation_time::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wp_presentation_requests","","",N,N],[7,"wp_presentation_events","","",N,N],[7,"wp_presentation_interface","","",N,N],[7,"wp_presentation_feedback_events","","",N,N],[7,"wp_presentation_feedback_interface","","",N,N],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",N,N],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",N,N],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",N,N],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",447,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",447,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",447,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",447,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",447,N],[13,"InvalidPositioner","","the client provided an invalid positioner",447,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",448,N],[13,"CreatePositioner","","create a positioner object",448,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",448,N],[13,"GetXdgSurface","wayland_protocols::xdg_shell::client::xdg_wm_base","create a shell surface from a surface",448,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",448,N],[12,"surface","","",448,N],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",448,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",448,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",449,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",449,N],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[10,"destroy","","destroy xdg_wm_base",450,N],[10,"create_positioner","","create a positioner object",450,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",450,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[10,"pong","","respond to a ping event",450,N],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",N,N],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",N,N],[3,"XdgPositioner","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",451,N],[4,"Anchor","","",N,N],[13,"None","","",452,N],[13,"Top","","",452,N],[13,"Bottom","","",452,N],[13,"Left","","",452,N],[13,"Right","","",452,N],[13,"TopLeft","","",452,N],[13,"BottomLeft","","",452,N],[13,"TopRight","","",452,N],[13,"BottomRight","","",452,N],[4,"Gravity","","",N,N],[13,"None","","",453,N],[13,"Top","","",453,N],[13,"Bottom","","",453,N],[13,"Left","","",453,N],[13,"Right","","",453,N],[13,"TopLeft","","",453,N],[13,"BottomLeft","","",453,N],[13,"TopRight","","",453,N],[13,"BottomRight","","",453,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",454,N],[13,"SetSize","","set the size of the to-be positioned rectangle",454,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",454,N],[12,"height","","",454,N],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",454,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",454,N],[12,"y","","",454,N],[12,"width","","",454,N],[12,"height","","",454,N],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",454,N],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",454,N],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",454,N],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",454,N],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",454,N],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",454,N],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",454,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",454,N],[12,"y","","",454,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",455,N],[10,"set_size","","set the size of the to-be positioned rectangle",455,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",455,N],[10,"set_anchor","","set anchor rectangle anchor",455,N],[10,"set_gravity","","set child surface gravity",455,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",455,N],[10,"set_offset","","set surface position offset",455,N],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",N,N],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",456,N],[13,"AlreadyConstructed","","",456,N],[13,"UnconfiguredBuffer","","",456,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",457,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",457,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",457,N],[13,"GetPopup","wayland_protocols::xdg_shell::client::xdg_surface","assign the xdg_popup surface role",457,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",457,N],[12,"parent","","",457,N],[12,"positioner","","",457,N],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",457,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",457,N],[12,"y","","",457,N],[12,"width","","",457,N],[12,"height","","",457,N],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",457,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",457,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",458,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",458,N],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[10,"destroy","","destroy the xdg_surface",459,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",459,[[["self"],["f"]],["result",["proxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",459,[[["self"],["option",["proxy"]],["proxy"],["f"]],["result",["proxy"]]]],[10,"set_window_geometry","","set the new window geometry",459,N],[10,"ack_configure","","ack a configure event",459,N],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",N,N],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",460,N],[13,"Top","","",460,N],[13,"Bottom","","",460,N],[13,"Left","","",460,N],[13,"TopLeft","","",460,N],[13,"BottomLeft","","",460,N],[13,"Right","","",460,N],[13,"TopRight","","",460,N],[13,"BottomRight","","",460,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",461,N],[13,"Fullscreen","","the surface is fullscreen",461,N],[13,"Resizing","","the surface is being resized",461,N],[13,"Activated","","the surface is now activated",461,N],[13,"TiledLeft","","the surface is tiled",461,N],[13,"TiledRight","","the surface is tiled",461,N],[13,"TiledTop","","the surface is tiled",461,N],[13,"TiledBottom","","the surface is tiled",461,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",462,N],[13,"SetParent","","set the parent of this surface",462,N],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",462,N],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",462,N],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",462,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[12,"serial","","",462,N],[12,"x","","",462,N],[12,"y","","",462,N],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",462,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[12,"serial","","",462,N],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",462,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[12,"serial","","",462,N],[12,"edges","","",462,N],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",462,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[12,"height","","",462,N],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",462,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[12,"height","","",462,N],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",462,N],[13,"UnsetMaximized","","unmaximize the window",462,N],[13,"SetFullscreen","","set the window as fullscreen on an output",462,N],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",462,N],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",462,N],[13,"SetMinimized","","set the window as minimized",462,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",463,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",463,N],[12,"height","","",463,N],[12,"states","","",463,N],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",463,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",464,N],[10,"set_parent","","set the parent of this surface",464,N],[10,"set_title","","set surface title",464,N],[10,"set_app_id","","set application ID",464,N],[10,"show_window_menu","","show the window menu",464,N],[10,"_move","","start an interactive move",464,N],[10,"resize","","start an interactive resize",464,N],[10,"set_max_size","","set the maximum size",464,N],[10,"set_min_size","","set the minimum size",464,N],[10,"set_maximized","","maximize the window",464,N],[10,"unset_maximized","","unmaximize the window",464,N],[10,"set_fullscreen","","set the window as fullscreen on an output",464,N],[10,"unset_fullscreen","","unset the window as fullscreen",464,N],[10,"set_minimized","","set the window as minimized",464,N],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",465,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",466,N],[13,"Grab","","make the popup take an explicit grab",466,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",466,N],[12,"serial","","",466,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",467,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",467,N],[12,"y","","",467,N],[12,"width","","",467,N],[12,"height","","",467,N],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",467,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",468,N],[10,"grab","","make the popup take an explicit grab",468,N],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",N,N],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",N,N],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",469,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",469,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",469,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",469,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",469,N],[13,"InvalidPositioner","","the client provided an invalid positioner",469,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",470,N],[13,"CreatePositioner","","create a positioner object",470,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",470,N],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",470,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",470,N],[12,"surface","","",470,N],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",470,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",470,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",471,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",471,N],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",N,N],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",N,N],[3,"XdgPositioner","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",472,N],[4,"Anchor","","",N,N],[13,"None","","",473,N],[13,"Top","","",473,N],[13,"Bottom","","",473,N],[13,"Left","","",473,N],[13,"Right","","",473,N],[13,"TopLeft","","",473,N],[13,"BottomLeft","","",473,N],[13,"TopRight","","",473,N],[13,"BottomRight","","",473,N],[4,"Gravity","","",N,N],[13,"None","","",474,N],[13,"Top","","",474,N],[13,"Bottom","","",474,N],[13,"Left","","",474,N],[13,"Right","","",474,N],[13,"TopLeft","","",474,N],[13,"BottomLeft","","",474,N],[13,"TopRight","","",474,N],[13,"BottomRight","","",474,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",475,N],[13,"SetSize","","set the size of the to-be positioned rectangle",475,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",475,N],[12,"height","","",475,N],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",475,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",475,N],[12,"y","","",475,N],[12,"width","","",475,N],[12,"height","","",475,N],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",475,N],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",475,N],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",475,N],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",475,N],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",475,N],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",475,N],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",475,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",475,N],[12,"y","","",475,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",N,N],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",N,N],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",476,N],[13,"AlreadyConstructed","","",476,N],[13,"UnconfiguredBuffer","","",476,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",477,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",477,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",477,N],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",477,N],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",477,N],[12,"parent","","",477,N],[12,"positioner","","",477,N],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",477,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",477,N],[12,"y","","",477,N],[12,"width","","",477,N],[12,"height","","",477,N],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",477,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",477,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",478,N],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",478,N],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",N,N],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",479,N],[13,"Top","","",479,N],[13,"Bottom","","",479,N],[13,"Left","","",479,N],[13,"TopLeft","","",479,N],[13,"BottomLeft","","",479,N],[13,"Right","","",479,N],[13,"TopRight","","",479,N],[13,"BottomRight","","",479,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",480,N],[13,"Fullscreen","","the surface is fullscreen",480,N],[13,"Resizing","","the surface is being resized",480,N],[13,"Activated","","the surface is now activated",480,N],[13,"TiledLeft","","the surface is tiled",480,N],[13,"TiledRight","","the surface is tiled",480,N],[13,"TiledTop","","the surface is tiled",480,N],[13,"TiledBottom","","the surface is tiled",480,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",481,N],[13,"SetParent","","set the parent of this surface",481,N],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",481,N],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",481,N],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",481,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[12,"serial","","",481,N],[12,"x","","",481,N],[12,"y","","",481,N],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",481,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[12,"serial","","",481,N],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",481,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[12,"serial","","",481,N],[12,"edges","","",481,N],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",481,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[12,"height","","",481,N],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",481,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[12,"height","","",481,N],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",481,N],[13,"UnsetMaximized","","unmaximize the window",481,N],[13,"SetFullscreen","","set the window as fullscreen on an output",481,N],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",481,N],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",481,N],[13,"SetMinimized","","set the window as minimized",481,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",482,N],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",482,N],[12,"height","","",482,N],[12,"states","","",482,N],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",482,N],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",483,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",484,N],[13,"Grab","","make the popup take an explicit grab",484,N],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",484,N],[12,"serial","","",484,N],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",485,N],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",485,N],[12,"y","","",485,N],[12,"width","","",485,N],[12,"height","","",485,N],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",485,N],[0,"c_interfaces","wayland_protocols::xdg_shell","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::xdg_shell::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_output_interface","","",N,N],[7,"xdg_wm_base_requests","","",N,N],[7,"xdg_wm_base_events","","",N,N],[7,"xdg_wm_base_interface","","",N,N],[7,"xdg_positioner_requests","","",N,N],[7,"xdg_positioner_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_toplevel_requests","","",N,N],[7,"xdg_toplevel_events","","",N,N],[7,"xdg_toplevel_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[0,"viewporter","wayland_protocols","Viewporter protocol",N,N],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",N,N],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",N,N],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[4,"Error","","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",486,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",487,N],[13,"GetViewport","","extend surface interface for crop and scale",487,N],[12,"id","wayland_protocols::viewporter::client::wp_viewporter::Request","",487,N],[12,"surface","","",487,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the cropping and scaling interface",488,N],[10,"get_viewport","","extend surface interface for crop and scale",488,[[["self"],["proxy"],["f"]],["result",["proxy"]]]],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",N,N],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",N,N],[4,"Error","","",N,N],[13,"BadValue","","negative or zero values in width or height",489,N],[13,"BadSize","","destination size is not integer",489,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",489,N],[13,"NoSurface","","the wl_surface was destroyed",489,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",490,N],[13,"SetSource","","set the source rectangle for cropping",490,N],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",490,N],[12,"y","","",490,N],[12,"width","","",490,N],[12,"height","","",490,N],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",490,N],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",490,N],[12,"height","","",490,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove scaling and cropping from the surface",491,N],[10,"set_source","","set the source rectangle for cropping",491,N],[10,"set_destination","","set the surface size for scaling",491,N],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",N,N],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",N,N],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",N,N],[4,"Error","","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",492,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",493,N],[13,"GetViewport","","extend surface interface for crop and scale",493,N],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",493,N],[12,"surface","","",493,N],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",N,N],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",N,N],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",N,N],[4,"Error","","",N,N],[13,"BadValue","","negative or zero values in width or height",494,N],[13,"BadSize","","destination size is not integer",494,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",494,N],[13,"NoSurface","","the wl_surface was destroyed",494,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",495,N],[13,"SetSource","","set the source rectangle for cropping",495,N],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",495,N],[12,"y","","",495,N],[12,"width","","",495,N],[12,"height","","",495,N],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",495,N],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",495,N],[12,"height","","",495,N],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",N,N],[0,"c_interfaces","wayland_protocols::viewporter","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::viewporter::c_interfaces","",N,N],[7,"wp_viewporter_requests","","",N,N],[7,"wp_viewporter_interface","","",N,N],[7,"wp_viewport_requests","","",N,N],[7,"wp_viewport_interface","","",N,N],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",496,[[["t"]],["t"]]],[11,"into","","",496,[[["self"]],["u"]]],[11,"try_from","","",496,[[["u"]],["result"]]],[11,"borrow","","",496,[[["self"]],["t"]]],[11,"borrow_mut","","",496,[[["self"]],["t"]]],[11,"try_into","","",496,[[["self"]],["result"]]],[11,"get_type_id","","",496,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",497,[[["t"]],["t"]]],[11,"into","","",497,[[["self"]],["u"]]],[11,"try_from","","",497,[[["u"]],["result"]]],[11,"borrow","","",497,[[["self"]],["t"]]],[11,"borrow_mut","","",497,[[["self"]],["t"]]],[11,"try_into","","",497,[[["self"]],["result"]]],[11,"get_type_id","","",497,[[["self"]],["typeid"]]],[11,"from","","",498,[[["t"]],["t"]]],[11,"into","","",498,[[["self"]],["u"]]],[11,"try_from","","",498,[[["u"]],["result"]]],[11,"borrow","","",498,[[["self"]],["t"]]],[11,"borrow_mut","","",498,[[["self"]],["t"]]],[11,"try_into","","",498,[[["self"]],["result"]]],[11,"get_type_id","","",498,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",499,[[["t"]],["t"]]],[11,"into","","",499,[[["self"]],["u"]]],[11,"try_from","","",499,[[["u"]],["result"]]],[11,"borrow","","",499,[[["self"]],["t"]]],[11,"borrow_mut","","",499,[[["self"]],["t"]]],[11,"try_into","","",499,[[["self"]],["result"]]],[11,"get_type_id","","",499,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",500,[[["t"]],["t"]]],[11,"into","","",500,[[["self"]],["u"]]],[11,"try_from","","",500,[[["u"]],["result"]]],[11,"borrow","","",500,[[["self"]],["t"]]],[11,"borrow_mut","","",500,[[["self"]],["t"]]],[11,"try_into","","",500,[[["self"]],["result"]]],[11,"get_type_id","","",500,[[["self"]],["typeid"]]],[11,"from","","",501,[[["t"]],["t"]]],[11,"into","","",501,[[["self"]],["u"]]],[11,"try_from","","",501,[[["u"]],["result"]]],[11,"borrow","","",501,[[["self"]],["t"]]],[11,"borrow_mut","","",501,[[["self"]],["t"]]],[11,"try_into","","",501,[[["self"]],["result"]]],[11,"get_type_id","","",501,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",502,[[["t"]],["t"]]],[11,"into","","",502,[[["self"]],["u"]]],[11,"try_from","","",502,[[["u"]],["result"]]],[11,"borrow","","",502,[[["self"]],["t"]]],[11,"borrow_mut","","",502,[[["self"]],["t"]]],[11,"try_into","","",502,[[["self"]],["result"]]],[11,"get_type_id","","",502,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",503,[[["t"]],["t"]]],[11,"into","","",503,[[["self"]],["u"]]],[11,"try_from","","",503,[[["u"]],["result"]]],[11,"borrow","","",503,[[["self"]],["t"]]],[11,"borrow_mut","","",503,[[["self"]],["t"]]],[11,"try_into","","",503,[[["self"]],["result"]]],[11,"get_type_id","","",503,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",504,[[["t"]],["t"]]],[11,"into","","",504,[[["self"]],["u"]]],[11,"try_from","","",504,[[["u"]],["result"]]],[11,"borrow","","",504,[[["self"]],["t"]]],[11,"borrow_mut","","",504,[[["self"]],["t"]]],[11,"try_into","","",504,[[["self"]],["result"]]],[11,"get_type_id","","",504,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",505,[[["t"]],["t"]]],[11,"into","","",505,[[["self"]],["u"]]],[11,"try_from","","",505,[[["u"]],["result"]]],[11,"borrow","","",505,[[["self"]],["t"]]],[11,"borrow_mut","","",505,[[["self"]],["t"]]],[11,"try_into","","",505,[[["self"]],["result"]]],[11,"get_type_id","","",505,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",506,[[["t"]],["t"]]],[11,"into","","",506,[[["self"]],["u"]]],[11,"try_from","","",506,[[["u"]],["result"]]],[11,"borrow","","",506,[[["self"]],["t"]]],[11,"borrow_mut","","",506,[[["self"]],["t"]]],[11,"try_into","","",506,[[["self"]],["result"]]],[11,"get_type_id","","",506,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",507,[[["t"]],["t"]]],[11,"into","","",507,[[["self"]],["u"]]],[11,"try_from","","",507,[[["u"]],["result"]]],[11,"borrow","","",507,[[["self"]],["t"]]],[11,"borrow_mut","","",507,[[["self"]],["t"]]],[11,"try_into","","",507,[[["self"]],["result"]]],[11,"get_type_id","","",507,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",508,[[["t"]],["t"]]],[11,"into","","",508,[[["self"]],["u"]]],[11,"try_from","","",508,[[["u"]],["result"]]],[11,"borrow","","",508,[[["self"]],["t"]]],[11,"borrow_mut","","",508,[[["self"]],["t"]]],[11,"try_into","","",508,[[["self"]],["result"]]],[11,"get_type_id","","",508,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",509,[[["t"]],["t"]]],[11,"into","","",509,[[["self"]],["u"]]],[11,"try_from","","",509,[[["u"]],["result"]]],[11,"borrow","","",509,[[["self"]],["t"]]],[11,"borrow_mut","","",509,[[["self"]],["t"]]],[11,"try_into","","",509,[[["self"]],["result"]]],[11,"get_type_id","","",509,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",510,[[["t"]],["t"]]],[11,"into","","",510,[[["self"]],["u"]]],[11,"try_from","","",510,[[["u"]],["result"]]],[11,"borrow","","",510,[[["self"]],["t"]]],[11,"borrow_mut","","",510,[[["self"]],["t"]]],[11,"try_into","","",510,[[["self"]],["result"]]],[11,"get_type_id","","",510,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",511,[[["t"]],["t"]]],[11,"into","","",511,[[["self"]],["u"]]],[11,"try_from","","",511,[[["u"]],["result"]]],[11,"borrow","","",511,[[["self"]],["t"]]],[11,"borrow_mut","","",511,[[["self"]],["t"]]],[11,"try_into","","",511,[[["self"]],["result"]]],[11,"get_type_id","","",511,[[["self"]],["typeid"]]],[11,"from","","",512,[[["t"]],["t"]]],[11,"into","","",512,[[["self"]],["u"]]],[11,"try_from","","",512,[[["u"]],["result"]]],[11,"borrow","","",512,[[["self"]],["t"]]],[11,"borrow_mut","","",512,[[["self"]],["t"]]],[11,"try_into","","",512,[[["self"]],["result"]]],[11,"get_type_id","","",512,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",513,[[["t"]],["t"]]],[11,"into","","",513,[[["self"]],["u"]]],[11,"try_from","","",513,[[["u"]],["result"]]],[11,"borrow","","",513,[[["self"]],["t"]]],[11,"borrow_mut","","",513,[[["self"]],["t"]]],[11,"try_into","","",513,[[["self"]],["result"]]],[11,"get_type_id","","",513,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",514,[[["t"]],["t"]]],[11,"into","","",514,[[["self"]],["u"]]],[11,"try_from","","",514,[[["u"]],["result"]]],[11,"borrow","","",514,[[["self"]],["t"]]],[11,"borrow_mut","","",514,[[["self"]],["t"]]],[11,"try_into","","",514,[[["self"]],["result"]]],[11,"get_type_id","","",514,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",515,[[["t"]],["t"]]],[11,"into","","",515,[[["self"]],["u"]]],[11,"try_from","","",515,[[["u"]],["result"]]],[11,"borrow","","",515,[[["self"]],["t"]]],[11,"borrow_mut","","",515,[[["self"]],["t"]]],[11,"try_into","","",515,[[["self"]],["result"]]],[11,"get_type_id","","",515,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",516,[[["t"]],["t"]]],[11,"into","","",516,[[["self"]],["u"]]],[11,"try_from","","",516,[[["u"]],["result"]]],[11,"borrow","","",516,[[["self"]],["t"]]],[11,"borrow_mut","","",516,[[["self"]],["t"]]],[11,"try_into","","",516,[[["self"]],["result"]]],[11,"get_type_id","","",516,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",517,[[["t"]],["t"]]],[11,"into","","",517,[[["self"]],["u"]]],[11,"try_from","","",517,[[["u"]],["result"]]],[11,"borrow","","",517,[[["self"]],["t"]]],[11,"borrow_mut","","",517,[[["self"]],["t"]]],[11,"try_into","","",517,[[["self"]],["result"]]],[11,"get_type_id","","",517,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",518,[[["t"]],["t"]]],[11,"into","","",518,[[["self"]],["u"]]],[11,"try_from","","",518,[[["u"]],["result"]]],[11,"borrow","","",518,[[["self"]],["t"]]],[11,"borrow_mut","","",518,[[["self"]],["t"]]],[11,"try_into","","",518,[[["self"]],["result"]]],[11,"get_type_id","","",518,[[["self"]],["typeid"]]],[11,"from","","",519,[[["t"]],["t"]]],[11,"into","","",519,[[["self"]],["u"]]],[11,"try_from","","",519,[[["u"]],["result"]]],[11,"borrow","","",519,[[["self"]],["t"]]],[11,"borrow_mut","","",519,[[["self"]],["t"]]],[11,"try_into","","",519,[[["self"]],["result"]]],[11,"get_type_id","","",519,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",520,[[["t"]],["t"]]],[11,"into","","",520,[[["self"]],["u"]]],[11,"try_from","","",520,[[["u"]],["result"]]],[11,"borrow","","",520,[[["self"]],["t"]]],[11,"borrow_mut","","",520,[[["self"]],["t"]]],[11,"try_into","","",520,[[["self"]],["result"]]],[11,"get_type_id","","",520,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",521,[[["t"]],["t"]]],[11,"into","","",521,[[["self"]],["u"]]],[11,"try_from","","",521,[[["u"]],["result"]]],[11,"borrow","","",521,[[["self"]],["t"]]],[11,"borrow_mut","","",521,[[["self"]],["t"]]],[11,"try_into","","",521,[[["self"]],["result"]]],[11,"get_type_id","","",521,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",522,[[["t"]],["t"]]],[11,"into","","",522,[[["self"]],["u"]]],[11,"try_from","","",522,[[["u"]],["result"]]],[11,"borrow","","",522,[[["self"]],["t"]]],[11,"borrow_mut","","",522,[[["self"]],["t"]]],[11,"try_into","","",522,[[["self"]],["result"]]],[11,"get_type_id","","",522,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",523,[[["t"]],["t"]]],[11,"into","","",523,[[["self"]],["u"]]],[11,"try_from","","",523,[[["u"]],["result"]]],[11,"borrow","","",523,[[["self"]],["t"]]],[11,"borrow_mut","","",523,[[["self"]],["t"]]],[11,"try_into","","",523,[[["self"]],["result"]]],[11,"get_type_id","","",523,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",524,[[["t"]],["t"]]],[11,"into","","",524,[[["self"]],["u"]]],[11,"try_from","","",524,[[["u"]],["result"]]],[11,"borrow","","",524,[[["self"]],["t"]]],[11,"borrow_mut","","",524,[[["self"]],["t"]]],[11,"try_into","","",524,[[["self"]],["result"]]],[11,"get_type_id","","",524,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",525,[[["t"]],["t"]]],[11,"into","","",525,[[["self"]],["u"]]],[11,"try_from","","",525,[[["u"]],["result"]]],[11,"borrow","","",525,[[["self"]],["t"]]],[11,"borrow_mut","","",525,[[["self"]],["t"]]],[11,"try_into","","",525,[[["self"]],["result"]]],[11,"get_type_id","","",525,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",526,[[["t"]],["t"]]],[11,"into","","",526,[[["self"]],["u"]]],[11,"try_from","","",526,[[["u"]],["result"]]],[11,"borrow","","",526,[[["self"]],["t"]]],[11,"borrow_mut","","",526,[[["self"]],["t"]]],[11,"try_into","","",526,[[["self"]],["result"]]],[11,"get_type_id","","",526,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",527,[[["t"]],["t"]]],[11,"into","","",527,[[["self"]],["u"]]],[11,"try_from","","",527,[[["u"]],["result"]]],[11,"borrow","","",527,[[["self"]],["t"]]],[11,"borrow_mut","","",527,[[["self"]],["t"]]],[11,"try_into","","",527,[[["self"]],["result"]]],[11,"get_type_id","","",527,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",528,[[["t"]],["t"]]],[11,"into","","",528,[[["self"]],["u"]]],[11,"try_from","","",528,[[["u"]],["result"]]],[11,"borrow","","",528,[[["self"]],["t"]]],[11,"borrow_mut","","",528,[[["self"]],["t"]]],[11,"try_into","","",528,[[["self"]],["result"]]],[11,"get_type_id","","",528,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",529,[[["t"]],["t"]]],[11,"into","","",529,[[["self"]],["u"]]],[11,"try_from","","",529,[[["u"]],["result"]]],[11,"borrow","","",529,[[["self"]],["t"]]],[11,"borrow_mut","","",529,[[["self"]],["t"]]],[11,"try_into","","",529,[[["self"]],["result"]]],[11,"get_type_id","","",529,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",530,[[["t"]],["t"]]],[11,"into","","",530,[[["self"]],["u"]]],[11,"try_from","","",530,[[["u"]],["result"]]],[11,"borrow","","",530,[[["self"]],["t"]]],[11,"borrow_mut","","",530,[[["self"]],["t"]]],[11,"try_into","","",530,[[["self"]],["result"]]],[11,"get_type_id","","",530,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",531,[[["t"]],["t"]]],[11,"into","","",531,[[["self"]],["u"]]],[11,"try_from","","",531,[[["u"]],["result"]]],[11,"borrow","","",531,[[["self"]],["t"]]],[11,"borrow_mut","","",531,[[["self"]],["t"]]],[11,"try_into","","",531,[[["self"]],["result"]]],[11,"get_type_id","","",531,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",532,[[["t"]],["t"]]],[11,"into","","",532,[[["self"]],["u"]]],[11,"try_from","","",532,[[["u"]],["result"]]],[11,"borrow","","",532,[[["self"]],["t"]]],[11,"borrow_mut","","",532,[[["self"]],["t"]]],[11,"try_into","","",532,[[["self"]],["result"]]],[11,"get_type_id","","",532,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",533,[[["t"]],["t"]]],[11,"into","","",533,[[["self"]],["u"]]],[11,"try_from","","",533,[[["u"]],["result"]]],[11,"borrow","","",533,[[["self"]],["t"]]],[11,"borrow_mut","","",533,[[["self"]],["t"]]],[11,"try_into","","",533,[[["self"]],["result"]]],[11,"get_type_id","","",533,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",534,[[["t"]],["t"]]],[11,"into","","",534,[[["self"]],["u"]]],[11,"try_from","","",534,[[["u"]],["result"]]],[11,"borrow","","",534,[[["self"]],["t"]]],[11,"borrow_mut","","",534,[[["self"]],["t"]]],[11,"try_into","","",534,[[["self"]],["result"]]],[11,"get_type_id","","",534,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",535,[[["t"]],["t"]]],[11,"into","","",535,[[["self"]],["u"]]],[11,"try_from","","",535,[[["u"]],["result"]]],[11,"borrow","","",535,[[["self"]],["t"]]],[11,"borrow_mut","","",535,[[["self"]],["t"]]],[11,"try_into","","",535,[[["self"]],["result"]]],[11,"get_type_id","","",535,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",536,[[["t"]],["t"]]],[11,"into","","",536,[[["self"]],["u"]]],[11,"try_from","","",536,[[["u"]],["result"]]],[11,"borrow","","",536,[[["self"]],["t"]]],[11,"borrow_mut","","",536,[[["self"]],["t"]]],[11,"try_into","","",536,[[["self"]],["result"]]],[11,"get_type_id","","",536,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",537,[[["t"]],["t"]]],[11,"into","","",537,[[["self"]],["u"]]],[11,"try_from","","",537,[[["u"]],["result"]]],[11,"borrow","","",537,[[["self"]],["t"]]],[11,"borrow_mut","","",537,[[["self"]],["t"]]],[11,"try_into","","",537,[[["self"]],["result"]]],[11,"get_type_id","","",537,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",538,[[["t"]],["t"]]],[11,"into","","",538,[[["self"]],["u"]]],[11,"try_from","","",538,[[["u"]],["result"]]],[11,"borrow","","",538,[[["self"]],["t"]]],[11,"borrow_mut","","",538,[[["self"]],["t"]]],[11,"try_into","","",538,[[["self"]],["result"]]],[11,"get_type_id","","",538,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",539,[[["t"]],["t"]]],[11,"into","","",539,[[["self"]],["u"]]],[11,"try_from","","",539,[[["u"]],["result"]]],[11,"borrow","","",539,[[["self"]],["t"]]],[11,"borrow_mut","","",539,[[["self"]],["t"]]],[11,"try_into","","",539,[[["self"]],["result"]]],[11,"get_type_id","","",539,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,N],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",540,[[["t"]],["t"]]],[11,"into","","",540,[[["self"]],["u"]]],[11,"try_from","","",540,[[["u"]],["result"]]],[11,"borrow","","",540,[[["self"]],["t"]]],[11,"borrow_mut","","",540,[[["self"]],["t"]]],[11,"try_into","","",540,[[["self"]],["result"]]],[11,"get_type_id","","",540,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",541,[[["t"]],["t"]]],[11,"into","","",541,[[["self"]],["u"]]],[11,"try_from","","",541,[[["u"]],["result"]]],[11,"borrow","","",541,[[["self"]],["t"]]],[11,"borrow_mut","","",541,[[["self"]],["t"]]],[11,"try_into","","",541,[[["self"]],["result"]]],[11,"get_type_id","","",541,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",542,[[["t"]],["t"]]],[11,"into","","",542,[[["self"]],["u"]]],[11,"try_from","","",542,[[["u"]],["result"]]],[11,"borrow","","",542,[[["self"]],["t"]]],[11,"borrow_mut","","",542,[[["self"]],["t"]]],[11,"try_into","","",542,[[["self"]],["result"]]],[11,"get_type_id","","",542,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",543,[[["t"]],["t"]]],[11,"into","","",543,[[["self"]],["u"]]],[11,"try_from","","",543,[[["u"]],["result"]]],[11,"borrow","","",543,[[["self"]],["t"]]],[11,"borrow_mut","","",543,[[["self"]],["t"]]],[11,"try_into","","",543,[[["self"]],["result"]]],[11,"get_type_id","","",543,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",544,[[["t"]],["t"]]],[11,"into","","",544,[[["self"]],["u"]]],[11,"try_from","","",544,[[["u"]],["result"]]],[11,"borrow","","",544,[[["self"]],["t"]]],[11,"borrow_mut","","",544,[[["self"]],["t"]]],[11,"try_into","","",544,[[["self"]],["result"]]],[11,"get_type_id","","",544,[[["self"]],["typeid"]]],[11,"from","","",545,[[["t"]],["t"]]],[11,"into","","",545,[[["self"]],["u"]]],[11,"try_from","","",545,[[["u"]],["result"]]],[11,"borrow","","",545,[[["self"]],["t"]]],[11,"borrow_mut","","",545,[[["self"]],["t"]]],[11,"try_into","","",545,[[["self"]],["result"]]],[11,"get_type_id","","",545,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",546,[[["t"]],["t"]]],[11,"into","","",546,[[["self"]],["u"]]],[11,"try_from","","",546,[[["u"]],["result"]]],[11,"borrow","","",546,[[["self"]],["t"]]],[11,"borrow_mut","","",546,[[["self"]],["t"]]],[11,"try_into","","",546,[[["self"]],["result"]]],[11,"get_type_id","","",546,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,N],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",547,[[["t"]],["t"]]],[11,"into","","",547,[[["self"]],["u"]]],[11,"try_from","","",547,[[["u"]],["result"]]],[11,"borrow","","",547,[[["self"]],["t"]]],[11,"borrow_mut","","",547,[[["self"]],["t"]]],[11,"try_into","","",547,[[["self"]],["result"]]],[11,"get_type_id","","",547,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",548,[[["t"]],["t"]]],[11,"into","","",548,[[["self"]],["u"]]],[11,"try_from","","",548,[[["u"]],["result"]]],[11,"borrow","","",548,[[["self"]],["t"]]],[11,"borrow_mut","","",548,[[["self"]],["t"]]],[11,"try_into","","",548,[[["self"]],["result"]]],[11,"get_type_id","","",548,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,N],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",549,[[["t"]],["t"]]],[11,"into","","",549,[[["self"]],["u"]]],[11,"try_from","","",549,[[["u"]],["result"]]],[11,"borrow","","",549,[[["self"]],["t"]]],[11,"borrow_mut","","",549,[[["self"]],["t"]]],[11,"try_into","","",549,[[["self"]],["result"]]],[11,"get_type_id","","",549,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",550,[[["t"]],["t"]]],[11,"into","","",550,[[["self"]],["u"]]],[11,"try_from","","",550,[[["u"]],["result"]]],[11,"borrow","","",550,[[["self"]],["t"]]],[11,"borrow_mut","","",550,[[["self"]],["t"]]],[11,"try_into","","",550,[[["self"]],["result"]]],[11,"get_type_id","","",550,[[["self"]],["typeid"]]],[11,"from","","",551,[[["t"]],["t"]]],[11,"into","","",551,[[["self"]],["u"]]],[11,"try_from","","",551,[[["u"]],["result"]]],[11,"borrow","","",551,[[["self"]],["t"]]],[11,"borrow_mut","","",551,[[["self"]],["t"]]],[11,"try_into","","",551,[[["self"]],["result"]]],[11,"get_type_id","","",551,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",552,[[["t"]],["t"]]],[11,"into","","",552,[[["self"]],["u"]]],[11,"try_from","","",552,[[["u"]],["result"]]],[11,"borrow","","",552,[[["self"]],["t"]]],[11,"borrow_mut","","",552,[[["self"]],["t"]]],[11,"try_into","","",552,[[["self"]],["result"]]],[11,"get_type_id","","",552,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,N],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,N],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",553,[[["t"]],["t"]]],[11,"into","","",553,[[["self"]],["u"]]],[11,"try_from","","",553,[[["u"]],["result"]]],[11,"borrow","","",553,[[["self"]],["t"]]],[11,"borrow_mut","","",553,[[["self"]],["t"]]],[11,"try_into","","",553,[[["self"]],["result"]]],[11,"get_type_id","","",553,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",554,[[["t"]],["t"]]],[11,"into","","",554,[[["self"]],["u"]]],[11,"try_from","","",554,[[["u"]],["result"]]],[11,"borrow","","",554,[[["self"]],["t"]]],[11,"borrow_mut","","",554,[[["self"]],["t"]]],[11,"try_into","","",554,[[["self"]],["result"]]],[11,"get_type_id","","",554,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",555,[[["t"]],["t"]]],[11,"into","","",555,[[["self"]],["u"]]],[11,"try_from","","",555,[[["u"]],["result"]]],[11,"borrow","","",555,[[["self"]],["t"]]],[11,"borrow_mut","","",555,[[["self"]],["t"]]],[11,"try_into","","",555,[[["self"]],["result"]]],[11,"get_type_id","","",555,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",556,[[["t"]],["t"]]],[11,"into","","",556,[[["self"]],["u"]]],[11,"try_from","","",556,[[["u"]],["result"]]],[11,"borrow","","",556,[[["self"]],["t"]]],[11,"borrow_mut","","",556,[[["self"]],["t"]]],[11,"try_into","","",556,[[["self"]],["result"]]],[11,"get_type_id","","",556,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,N],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,N],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",557,[[["t"]],["t"]]],[11,"into","","",557,[[["self"]],["u"]]],[11,"try_from","","",557,[[["u"]],["result"]]],[11,"borrow","","",557,[[["self"]],["t"]]],[11,"borrow_mut","","",557,[[["self"]],["t"]]],[11,"try_into","","",557,[[["self"]],["result"]]],[11,"get_type_id","","",557,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",558,[[["t"]],["t"]]],[11,"into","","",558,[[["self"]],["u"]]],[11,"try_from","","",558,[[["u"]],["result"]]],[11,"borrow","","",558,[[["self"]],["t"]]],[11,"borrow_mut","","",558,[[["self"]],["t"]]],[11,"try_into","","",558,[[["self"]],["result"]]],[11,"get_type_id","","",558,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",559,[[["t"]],["t"]]],[11,"into","","",559,[[["self"]],["u"]]],[11,"try_from","","",559,[[["u"]],["result"]]],[11,"borrow","","",559,[[["self"]],["t"]]],[11,"borrow_mut","","",559,[[["self"]],["t"]]],[11,"try_into","","",559,[[["self"]],["result"]]],[11,"get_type_id","","",559,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",560,[[["t"]],["t"]]],[11,"into","","",560,[[["self"]],["u"]]],[11,"try_from","","",560,[[["u"]],["result"]]],[11,"borrow","","",560,[[["self"]],["t"]]],[11,"borrow_mut","","",560,[[["self"]],["t"]]],[11,"try_into","","",560,[[["self"]],["result"]]],[11,"get_type_id","","",560,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",561,[[["t"]],["t"]]],[11,"into","","",561,[[["self"]],["u"]]],[11,"try_from","","",561,[[["u"]],["result"]]],[11,"borrow","","",561,[[["self"]],["t"]]],[11,"borrow_mut","","",561,[[["self"]],["t"]]],[11,"try_into","","",561,[[["self"]],["result"]]],[11,"get_type_id","","",561,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",562,[[["t"]],["t"]]],[11,"into","","",562,[[["self"]],["u"]]],[11,"try_from","","",562,[[["u"]],["result"]]],[11,"borrow","","",562,[[["self"]],["t"]]],[11,"borrow_mut","","",562,[[["self"]],["t"]]],[11,"try_into","","",562,[[["self"]],["result"]]],[11,"get_type_id","","",562,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",563,[[["t"]],["t"]]],[11,"into","","",563,[[["self"]],["u"]]],[11,"try_from","","",563,[[["u"]],["result"]]],[11,"borrow","","",563,[[["self"]],["t"]]],[11,"borrow_mut","","",563,[[["self"]],["t"]]],[11,"try_into","","",563,[[["self"]],["result"]]],[11,"get_type_id","","",563,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",564,[[["t"]],["t"]]],[11,"into","","",564,[[["self"]],["u"]]],[11,"try_from","","",564,[[["u"]],["result"]]],[11,"borrow","","",564,[[["self"]],["t"]]],[11,"borrow_mut","","",564,[[["self"]],["t"]]],[11,"try_into","","",564,[[["self"]],["result"]]],[11,"get_type_id","","",564,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",565,[[["t"]],["t"]]],[11,"into","","",565,[[["self"]],["u"]]],[11,"try_from","","",565,[[["u"]],["result"]]],[11,"borrow","","",565,[[["self"]],["t"]]],[11,"borrow_mut","","",565,[[["self"]],["t"]]],[11,"try_into","","",565,[[["self"]],["result"]]],[11,"get_type_id","","",565,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",566,[[["t"]],["t"]]],[11,"into","","",566,[[["self"]],["u"]]],[11,"try_from","","",566,[[["u"]],["result"]]],[11,"borrow","","",566,[[["self"]],["t"]]],[11,"borrow_mut","","",566,[[["self"]],["t"]]],[11,"try_into","","",566,[[["self"]],["result"]]],[11,"get_type_id","","",566,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",567,[[["t"]],["t"]]],[11,"into","","",567,[[["self"]],["u"]]],[11,"try_from","","",567,[[["u"]],["result"]]],[11,"borrow","","",567,[[["self"]],["t"]]],[11,"borrow_mut","","",567,[[["self"]],["t"]]],[11,"try_into","","",567,[[["self"]],["result"]]],[11,"get_type_id","","",567,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",568,[[["t"]],["t"]]],[11,"into","","",568,[[["self"]],["u"]]],[11,"try_from","","",568,[[["u"]],["result"]]],[11,"borrow","","",568,[[["self"]],["t"]]],[11,"borrow_mut","","",568,[[["self"]],["t"]]],[11,"try_into","","",568,[[["self"]],["result"]]],[11,"get_type_id","","",568,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",569,[[["t"]],["t"]]],[11,"into","","",569,[[["self"]],["u"]]],[11,"try_from","","",569,[[["u"]],["result"]]],[11,"borrow","","",569,[[["self"]],["t"]]],[11,"borrow_mut","","",569,[[["self"]],["t"]]],[11,"try_into","","",569,[[["self"]],["result"]]],[11,"get_type_id","","",569,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",570,[[["t"]],["t"]]],[11,"into","","",570,[[["self"]],["u"]]],[11,"try_from","","",570,[[["u"]],["result"]]],[11,"borrow","","",570,[[["self"]],["t"]]],[11,"borrow_mut","","",570,[[["self"]],["t"]]],[11,"try_into","","",570,[[["self"]],["result"]]],[11,"get_type_id","","",570,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",571,[[["t"]],["t"]]],[11,"into","","",571,[[["self"]],["u"]]],[11,"try_from","","",571,[[["u"]],["result"]]],[11,"borrow","","",571,[[["self"]],["t"]]],[11,"borrow_mut","","",571,[[["self"]],["t"]]],[11,"try_into","","",571,[[["self"]],["result"]]],[11,"get_type_id","","",571,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[["self"]],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"try_into","","",113,[[["self"]],["result"]]],[11,"get_type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[["self"]],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"try_into","","",114,[[["self"]],["result"]]],[11,"get_type_id","","",114,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",572,[[["t"]],["t"]]],[11,"into","","",572,[[["self"]],["u"]]],[11,"try_from","","",572,[[["u"]],["result"]]],[11,"borrow","","",572,[[["self"]],["t"]]],[11,"borrow_mut","","",572,[[["self"]],["t"]]],[11,"try_into","","",572,[[["self"]],["result"]]],[11,"get_type_id","","",572,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[["self"]],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"try_into","","",116,[[["self"]],["result"]]],[11,"get_type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[["self"]],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"try_into","","",117,[[["self"]],["result"]]],[11,"get_type_id","","",117,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",573,[[["t"]],["t"]]],[11,"into","","",573,[[["self"]],["u"]]],[11,"try_from","","",573,[[["u"]],["result"]]],[11,"borrow","","",573,[[["self"]],["t"]]],[11,"borrow_mut","","",573,[[["self"]],["t"]]],[11,"try_into","","",573,[[["self"]],["result"]]],[11,"get_type_id","","",573,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[["self"]],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"try_into","","",119,[[["self"]],["result"]]],[11,"get_type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",574,[[["t"]],["t"]]],[11,"into","","",574,[[["self"]],["u"]]],[11,"try_from","","",574,[[["u"]],["result"]]],[11,"borrow","","",574,[[["self"]],["t"]]],[11,"borrow_mut","","",574,[[["self"]],["t"]]],[11,"try_into","","",574,[[["self"]],["result"]]],[11,"get_type_id","","",574,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",575,[[["t"]],["t"]]],[11,"into","","",575,[[["self"]],["u"]]],[11,"try_from","","",575,[[["u"]],["result"]]],[11,"borrow","","",575,[[["self"]],["t"]]],[11,"borrow_mut","","",575,[[["self"]],["t"]]],[11,"try_into","","",575,[[["self"]],["result"]]],[11,"get_type_id","","",575,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[["self"]],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"try_into","","",120,[[["self"]],["result"]]],[11,"get_type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[["self"]],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"try_into","","",121,[[["self"]],["result"]]],[11,"get_type_id","","",121,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",576,[[["t"]],["t"]]],[11,"into","","",576,[[["self"]],["u"]]],[11,"try_from","","",576,[[["u"]],["result"]]],[11,"borrow","","",576,[[["self"]],["t"]]],[11,"borrow_mut","","",576,[[["self"]],["t"]]],[11,"try_into","","",576,[[["self"]],["result"]]],[11,"get_type_id","","",576,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[["self"]],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"try_into","","",122,[[["self"]],["result"]]],[11,"get_type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[["self"]],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"try_into","","",123,[[["self"]],["result"]]],[11,"get_type_id","","",123,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",577,[[["t"]],["t"]]],[11,"into","","",577,[[["self"]],["u"]]],[11,"try_from","","",577,[[["u"]],["result"]]],[11,"borrow","","",577,[[["self"]],["t"]]],[11,"borrow_mut","","",577,[[["self"]],["t"]]],[11,"try_into","","",577,[[["self"]],["result"]]],[11,"get_type_id","","",577,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[["self"]],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"try_into","","",124,[[["self"]],["result"]]],[11,"get_type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[["self"]],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"try_into","","",125,[[["self"]],["result"]]],[11,"get_type_id","","",125,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",578,[[["t"]],["t"]]],[11,"into","","",578,[[["self"]],["u"]]],[11,"try_from","","",578,[[["u"]],["result"]]],[11,"borrow","","",578,[[["self"]],["t"]]],[11,"borrow_mut","","",578,[[["self"]],["t"]]],[11,"try_into","","",578,[[["self"]],["result"]]],[11,"get_type_id","","",578,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[["self"]],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"try_into","","",126,[[["self"]],["result"]]],[11,"get_type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",579,[[["t"]],["t"]]],[11,"into","","",579,[[["self"]],["u"]]],[11,"try_from","","",579,[[["u"]],["result"]]],[11,"borrow","","",579,[[["self"]],["t"]]],[11,"borrow_mut","","",579,[[["self"]],["t"]]],[11,"try_into","","",579,[[["self"]],["result"]]],[11,"get_type_id","","",579,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",580,[[["t"]],["t"]]],[11,"into","","",580,[[["self"]],["u"]]],[11,"try_from","","",580,[[["u"]],["result"]]],[11,"borrow","","",580,[[["self"]],["t"]]],[11,"borrow_mut","","",580,[[["self"]],["t"]]],[11,"try_into","","",580,[[["self"]],["result"]]],[11,"get_type_id","","",580,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[["self"]],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"try_into","","",128,[[["self"]],["result"]]],[11,"get_type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[["self"]],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"try_into","","",129,[[["self"]],["result"]]],[11,"get_type_id","","",129,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",581,[[["t"]],["t"]]],[11,"into","","",581,[[["self"]],["u"]]],[11,"try_from","","",581,[[["u"]],["result"]]],[11,"borrow","","",581,[[["self"]],["t"]]],[11,"borrow_mut","","",581,[[["self"]],["t"]]],[11,"try_into","","",581,[[["self"]],["result"]]],[11,"get_type_id","","",581,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[["self"]],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"try_into","","",131,[[["self"]],["result"]]],[11,"get_type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",582,[[["t"]],["t"]]],[11,"into","","",582,[[["self"]],["u"]]],[11,"try_from","","",582,[[["u"]],["result"]]],[11,"borrow","","",582,[[["self"]],["t"]]],[11,"borrow_mut","","",582,[[["self"]],["t"]]],[11,"try_into","","",582,[[["self"]],["result"]]],[11,"get_type_id","","",582,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",583,[[["t"]],["t"]]],[11,"into","","",583,[[["self"]],["u"]]],[11,"try_from","","",583,[[["u"]],["result"]]],[11,"borrow","","",583,[[["self"]],["t"]]],[11,"borrow_mut","","",583,[[["self"]],["t"]]],[11,"try_into","","",583,[[["self"]],["result"]]],[11,"get_type_id","","",583,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[["self"]],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"try_into","","",132,[[["self"]],["result"]]],[11,"get_type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[["self"]],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"try_into","","",133,[[["self"]],["result"]]],[11,"get_type_id","","",133,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",584,[[["t"]],["t"]]],[11,"into","","",584,[[["self"]],["u"]]],[11,"try_from","","",584,[[["u"]],["result"]]],[11,"borrow","","",584,[[["self"]],["t"]]],[11,"borrow_mut","","",584,[[["self"]],["t"]]],[11,"try_into","","",584,[[["self"]],["result"]]],[11,"get_type_id","","",584,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[["self"]],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"try_into","","",134,[[["self"]],["result"]]],[11,"get_type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",585,[[["t"]],["t"]]],[11,"into","","",585,[[["self"]],["u"]]],[11,"try_from","","",585,[[["u"]],["result"]]],[11,"borrow","","",585,[[["self"]],["t"]]],[11,"borrow_mut","","",585,[[["self"]],["t"]]],[11,"try_into","","",585,[[["self"]],["result"]]],[11,"get_type_id","","",585,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",586,[[["t"]],["t"]]],[11,"into","","",586,[[["self"]],["u"]]],[11,"try_from","","",586,[[["u"]],["result"]]],[11,"borrow","","",586,[[["self"]],["t"]]],[11,"borrow_mut","","",586,[[["self"]],["t"]]],[11,"try_into","","",586,[[["self"]],["result"]]],[11,"get_type_id","","",586,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[["self"]],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"try_into","","",136,[[["self"]],["result"]]],[11,"get_type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[["self"]],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"try_into","","",137,[[["self"]],["result"]]],[11,"get_type_id","","",137,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",587,[[["t"]],["t"]]],[11,"into","","",587,[[["self"]],["u"]]],[11,"try_from","","",587,[[["u"]],["result"]]],[11,"borrow","","",587,[[["self"]],["t"]]],[11,"borrow_mut","","",587,[[["self"]],["t"]]],[11,"try_into","","",587,[[["self"]],["result"]]],[11,"get_type_id","","",587,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[["self"]],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,N],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"try_into","","",139,[[["self"]],["result"]]],[11,"get_type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[["self"]],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,N],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"try_into","","",140,[[["self"]],["result"]]],[11,"get_type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[["self"]],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,N],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"try_into","","",141,[[["self"]],["result"]]],[11,"get_type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[["self"]],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,N],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"try_into","","",142,[[["self"]],["result"]]],[11,"get_type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[["self"]],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"try_into","","",143,[[["self"]],["result"]]],[11,"get_type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[["self"]],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"try_into","","",144,[[["self"]],["result"]]],[11,"get_type_id","","",144,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",588,[[["t"]],["t"]]],[11,"into","","",588,[[["self"]],["u"]]],[11,"try_from","","",588,[[["u"]],["result"]]],[11,"borrow","","",588,[[["self"]],["t"]]],[11,"borrow_mut","","",588,[[["self"]],["t"]]],[11,"try_into","","",588,[[["self"]],["result"]]],[11,"get_type_id","","",588,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[["self"]],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"try_into","","",146,[[["self"]],["result"]]],[11,"get_type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[["self"]],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"try_into","","",147,[[["self"]],["result"]]],[11,"get_type_id","","",147,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",589,[[["t"]],["t"]]],[11,"into","","",589,[[["self"]],["u"]]],[11,"try_from","","",589,[[["u"]],["result"]]],[11,"borrow","","",589,[[["self"]],["t"]]],[11,"borrow_mut","","",589,[[["self"]],["t"]]],[11,"try_into","","",589,[[["self"]],["result"]]],[11,"get_type_id","","",589,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[["self"]],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"try_into","","",149,[[["self"]],["result"]]],[11,"get_type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",590,[[["t"]],["t"]]],[11,"into","","",590,[[["self"]],["u"]]],[11,"try_from","","",590,[[["u"]],["result"]]],[11,"borrow","","",590,[[["self"]],["t"]]],[11,"borrow_mut","","",590,[[["self"]],["t"]]],[11,"try_into","","",590,[[["self"]],["result"]]],[11,"get_type_id","","",590,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",591,[[["t"]],["t"]]],[11,"into","","",591,[[["self"]],["u"]]],[11,"try_from","","",591,[[["u"]],["result"]]],[11,"borrow","","",591,[[["self"]],["t"]]],[11,"borrow_mut","","",591,[[["self"]],["t"]]],[11,"try_into","","",591,[[["self"]],["result"]]],[11,"get_type_id","","",591,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[["self"]],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"try_into","","",150,[[["self"]],["result"]]],[11,"get_type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[["self"]],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"try_into","","",151,[[["self"]],["result"]]],[11,"get_type_id","","",151,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",592,[[["t"]],["t"]]],[11,"into","","",592,[[["self"]],["u"]]],[11,"try_from","","",592,[[["u"]],["result"]]],[11,"borrow","","",592,[[["self"]],["t"]]],[11,"borrow_mut","","",592,[[["self"]],["t"]]],[11,"try_into","","",592,[[["self"]],["result"]]],[11,"get_type_id","","",592,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[["self"]],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,N],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"try_into","","",152,[[["self"]],["result"]]],[11,"get_type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[["self"]],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,N],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"try_into","","",153,[[["self"]],["result"]]],[11,"get_type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[["self"]],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,N],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"try_into","","",154,[[["self"]],["result"]]],[11,"get_type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[["self"]],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,N],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"try_into","","",155,[[["self"]],["result"]]],[11,"get_type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[["self"]],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"try_into","","",156,[[["self"]],["result"]]],[11,"get_type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[["self"]],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"try_into","","",157,[[["self"]],["result"]]],[11,"get_type_id","","",157,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",593,[[["t"]],["t"]]],[11,"into","","",593,[[["self"]],["u"]]],[11,"try_from","","",593,[[["u"]],["result"]]],[11,"borrow","","",593,[[["self"]],["t"]]],[11,"borrow_mut","","",593,[[["self"]],["t"]]],[11,"try_into","","",593,[[["self"]],["result"]]],[11,"get_type_id","","",593,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[["self"]],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"try_into","","",158,[[["self"]],["result"]]],[11,"get_type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[["self"]],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"try_into","","",159,[[["self"]],["result"]]],[11,"get_type_id","","",159,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",594,[[["t"]],["t"]]],[11,"into","","",594,[[["self"]],["u"]]],[11,"try_from","","",594,[[["u"]],["result"]]],[11,"borrow","","",594,[[["self"]],["t"]]],[11,"borrow_mut","","",594,[[["self"]],["t"]]],[11,"try_into","","",594,[[["self"]],["result"]]],[11,"get_type_id","","",594,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[["self"]],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"try_into","","",160,[[["self"]],["result"]]],[11,"get_type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",595,[[["t"]],["t"]]],[11,"into","","",595,[[["self"]],["u"]]],[11,"try_from","","",595,[[["u"]],["result"]]],[11,"borrow","","",595,[[["self"]],["t"]]],[11,"borrow_mut","","",595,[[["self"]],["t"]]],[11,"try_into","","",595,[[["self"]],["result"]]],[11,"get_type_id","","",595,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",596,[[["t"]],["t"]]],[11,"into","","",596,[[["self"]],["u"]]],[11,"try_from","","",596,[[["u"]],["result"]]],[11,"borrow","","",596,[[["self"]],["t"]]],[11,"borrow_mut","","",596,[[["self"]],["t"]]],[11,"try_into","","",596,[[["self"]],["result"]]],[11,"get_type_id","","",596,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[["self"]],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"try_into","","",162,[[["self"]],["result"]]],[11,"get_type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[["self"]],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"try_into","","",163,[[["self"]],["result"]]],[11,"get_type_id","","",163,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",597,[[["t"]],["t"]]],[11,"into","","",597,[[["self"]],["u"]]],[11,"try_from","","",597,[[["u"]],["result"]]],[11,"borrow","","",597,[[["self"]],["t"]]],[11,"borrow_mut","","",597,[[["self"]],["t"]]],[11,"try_into","","",597,[[["self"]],["result"]]],[11,"get_type_id","","",597,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[["self"]],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,N],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"try_into","","",165,[[["self"]],["result"]]],[11,"get_type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[["self"]],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,N],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"try_into","","",166,[[["self"]],["result"]]],[11,"get_type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[["self"]],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,N],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"try_into","","",167,[[["self"]],["result"]]],[11,"get_type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[["self"]],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,N],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"try_into","","",168,[[["self"]],["result"]]],[11,"get_type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[["self"]],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"try_into","","",169,[[["self"]],["result"]]],[11,"get_type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[["self"]],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"try_into","","",170,[[["self"]],["result"]]],[11,"get_type_id","","",170,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",598,[[["t"]],["t"]]],[11,"into","","",598,[[["self"]],["u"]]],[11,"try_from","","",598,[[["u"]],["result"]]],[11,"borrow","","",598,[[["self"]],["t"]]],[11,"borrow_mut","","",598,[[["self"]],["t"]]],[11,"try_into","","",598,[[["self"]],["result"]]],[11,"get_type_id","","",598,[[["self"]],["typeid"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[["self"]],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"try_into","","",172,[[["self"]],["result"]]],[11,"get_type_id","","",172,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[["self"]],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"try_into","","",173,[[["self"]],["result"]]],[11,"get_type_id","","",173,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",599,[[["t"]],["t"]]],[11,"into","","",599,[[["self"]],["u"]]],[11,"try_from","","",599,[[["u"]],["result"]]],[11,"borrow","","",599,[[["self"]],["t"]]],[11,"borrow_mut","","",599,[[["self"]],["t"]]],[11,"try_into","","",599,[[["self"]],["result"]]],[11,"get_type_id","","",599,[[["self"]],["typeid"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[["self"]],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,N],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"try_into","","",175,[[["self"]],["result"]]],[11,"get_type_id","","",175,[[["self"]],["typeid"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[["self"]],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"try_into","","",176,[[["self"]],["result"]]],[11,"get_type_id","","",176,[[["self"]],["typeid"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[["self"]],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"try_into","","",177,[[["self"]],["result"]]],[11,"get_type_id","","",177,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",600,[[["t"]],["t"]]],[11,"into","","",600,[[["self"]],["u"]]],[11,"try_from","","",600,[[["u"]],["result"]]],[11,"borrow","","",600,[[["self"]],["t"]]],[11,"borrow_mut","","",600,[[["self"]],["t"]]],[11,"try_into","","",600,[[["self"]],["result"]]],[11,"get_type_id","","",600,[[["self"]],["typeid"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[["self"]],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,N],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"try_into","","",179,[[["self"]],["result"]]],[11,"get_type_id","","",179,[[["self"]],["typeid"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[["self"]],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"try_into","","",180,[[["self"]],["result"]]],[11,"get_type_id","","",180,[[["self"]],["typeid"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[["self"]],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"try_into","","",181,[[["self"]],["result"]]],[11,"get_type_id","","",181,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",601,[[["t"]],["t"]]],[11,"into","","",601,[[["self"]],["u"]]],[11,"try_from","","",601,[[["u"]],["result"]]],[11,"borrow","","",601,[[["self"]],["t"]]],[11,"borrow_mut","","",601,[[["self"]],["t"]]],[11,"try_into","","",601,[[["self"]],["result"]]],[11,"get_type_id","","",601,[[["self"]],["typeid"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[["self"]],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"try_into","","",183,[[["self"]],["result"]]],[11,"get_type_id","","",183,[[["self"]],["typeid"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[["self"]],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"try_into","","",184,[[["self"]],["result"]]],[11,"get_type_id","","",184,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",602,[[["t"]],["t"]]],[11,"into","","",602,[[["self"]],["u"]]],[11,"try_from","","",602,[[["u"]],["result"]]],[11,"borrow","","",602,[[["self"]],["t"]]],[11,"borrow_mut","","",602,[[["self"]],["t"]]],[11,"try_into","","",602,[[["self"]],["result"]]],[11,"get_type_id","","",602,[[["self"]],["typeid"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[["self"]],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,N],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"try_into","","",186,[[["self"]],["result"]]],[11,"get_type_id","","",186,[[["self"]],["typeid"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[["self"]],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"try_into","","",187,[[["self"]],["result"]]],[11,"get_type_id","","",187,[[["self"]],["typeid"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[["self"]],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"try_into","","",188,[[["self"]],["result"]]],[11,"get_type_id","","",188,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",603,[[["t"]],["t"]]],[11,"into","","",603,[[["self"]],["u"]]],[11,"try_from","","",603,[[["u"]],["result"]]],[11,"borrow","","",603,[[["self"]],["t"]]],[11,"borrow_mut","","",603,[[["self"]],["t"]]],[11,"try_into","","",603,[[["self"]],["result"]]],[11,"get_type_id","","",603,[[["self"]],["typeid"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[["self"]],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"try_into","","",190,[[["self"]],["result"]]],[11,"get_type_id","","",190,[[["self"]],["typeid"]]],[11,"from","","",604,[[["t"]],["t"]]],[11,"into","","",604,[[["self"]],["u"]]],[11,"try_from","","",604,[[["u"]],["result"]]],[11,"borrow","","",604,[[["self"]],["t"]]],[11,"borrow_mut","","",604,[[["self"]],["t"]]],[11,"try_into","","",604,[[["self"]],["result"]]],[11,"get_type_id","","",604,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",605,[[["t"]],["t"]]],[11,"into","","",605,[[["self"]],["u"]]],[11,"try_from","","",605,[[["u"]],["result"]]],[11,"borrow","","",605,[[["self"]],["t"]]],[11,"borrow_mut","","",605,[[["self"]],["t"]]],[11,"try_into","","",605,[[["self"]],["result"]]],[11,"get_type_id","","",605,[[["self"]],["typeid"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[["self"]],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"try_into","","",191,[[["self"]],["result"]]],[11,"get_type_id","","",191,[[["self"]],["typeid"]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[["self"]],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"try_into","","",192,[[["self"]],["result"]]],[11,"get_type_id","","",192,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",606,[[["t"]],["t"]]],[11,"into","","",606,[[["self"]],["u"]]],[11,"try_from","","",606,[[["u"]],["result"]]],[11,"borrow","","",606,[[["self"]],["t"]]],[11,"borrow_mut","","",606,[[["self"]],["t"]]],[11,"try_into","","",606,[[["self"]],["result"]]],[11,"get_type_id","","",606,[[["self"]],["typeid"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[["self"]],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,N],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"try_into","","",193,[[["self"]],["result"]]],[11,"get_type_id","","",193,[[["self"]],["typeid"]]],[11,"from","","",194,[[["t"]],["t"]]],[11,"into","","",194,[[["self"]],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,N],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"try_into","","",194,[[["self"]],["result"]]],[11,"get_type_id","","",194,[[["self"]],["typeid"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[["self"]],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,N],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"try_into","","",195,[[["self"]],["result"]]],[11,"get_type_id","","",195,[[["self"]],["typeid"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[["self"]],["u"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,N],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"try_into","","",196,[[["self"]],["result"]]],[11,"get_type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[["self"]],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"try_into","","",197,[[["self"]],["result"]]],[11,"get_type_id","","",197,[[["self"]],["typeid"]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[["self"]],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"try_into","","",198,[[["self"]],["result"]]],[11,"get_type_id","","",198,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",607,[[["t"]],["t"]]],[11,"into","","",607,[[["self"]],["u"]]],[11,"try_from","","",607,[[["u"]],["result"]]],[11,"borrow","","",607,[[["self"]],["t"]]],[11,"borrow_mut","","",607,[[["self"]],["t"]]],[11,"try_into","","",607,[[["self"]],["result"]]],[11,"get_type_id","","",607,[[["self"]],["typeid"]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[["self"]],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"try_into","","",199,[[["self"]],["result"]]],[11,"get_type_id","","",199,[[["self"]],["typeid"]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[["self"]],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"try_into","","",200,[[["self"]],["result"]]],[11,"get_type_id","","",200,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",608,[[["t"]],["t"]]],[11,"into","","",608,[[["self"]],["u"]]],[11,"try_from","","",608,[[["u"]],["result"]]],[11,"borrow","","",608,[[["self"]],["t"]]],[11,"borrow_mut","","",608,[[["self"]],["t"]]],[11,"try_into","","",608,[[["self"]],["result"]]],[11,"get_type_id","","",608,[[["self"]],["typeid"]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[["self"]],["u"]]],[11,"to_owned","","",201,[[["self"]],["t"]]],[11,"clone_into","","",201,N],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"try_into","","",201,[[["self"]],["result"]]],[11,"get_type_id","","",201,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[["self"]],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"try_into","","",202,[[["self"]],["result"]]],[11,"get_type_id","","",202,[[["self"]],["typeid"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[["self"]],["u"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"try_into","","",203,[[["self"]],["result"]]],[11,"get_type_id","","",203,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",609,[[["t"]],["t"]]],[11,"into","","",609,[[["self"]],["u"]]],[11,"try_from","","",609,[[["u"]],["result"]]],[11,"borrow","","",609,[[["self"]],["t"]]],[11,"borrow_mut","","",609,[[["self"]],["t"]]],[11,"try_into","","",609,[[["self"]],["result"]]],[11,"get_type_id","","",609,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[["self"]],["u"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,N],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"try_into","","",204,[[["self"]],["result"]]],[11,"get_type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[["self"]],["u"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"try_into","","",205,[[["self"]],["result"]]],[11,"get_type_id","","",205,[[["self"]],["typeid"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[["self"]],["u"]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"try_into","","",206,[[["self"]],["result"]]],[11,"get_type_id","","",206,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",610,[[["t"]],["t"]]],[11,"into","","",610,[[["self"]],["u"]]],[11,"try_from","","",610,[[["u"]],["result"]]],[11,"borrow","","",610,[[["self"]],["t"]]],[11,"borrow_mut","","",610,[[["self"]],["t"]]],[11,"try_into","","",610,[[["self"]],["result"]]],[11,"get_type_id","","",610,[[["self"]],["typeid"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[["self"]],["u"]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"try_into","","",207,[[["self"]],["result"]]],[11,"get_type_id","","",207,[[["self"]],["typeid"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[["self"]],["u"]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"try_into","","",208,[[["self"]],["result"]]],[11,"get_type_id","","",208,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",611,[[["t"]],["t"]]],[11,"into","","",611,[[["self"]],["u"]]],[11,"try_from","","",611,[[["u"]],["result"]]],[11,"borrow","","",611,[[["self"]],["t"]]],[11,"borrow_mut","","",611,[[["self"]],["t"]]],[11,"try_into","","",611,[[["self"]],["result"]]],[11,"get_type_id","","",611,[[["self"]],["typeid"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[["self"]],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,N],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"try_into","","",209,[[["self"]],["result"]]],[11,"get_type_id","","",209,[[["self"]],["typeid"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[["self"]],["u"]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"try_into","","",210,[[["self"]],["result"]]],[11,"get_type_id","","",210,[[["self"]],["typeid"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[["self"]],["u"]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"try_into","","",211,[[["self"]],["result"]]],[11,"get_type_id","","",211,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",612,[[["t"]],["t"]]],[11,"into","","",612,[[["self"]],["u"]]],[11,"try_from","","",612,[[["u"]],["result"]]],[11,"borrow","","",612,[[["self"]],["t"]]],[11,"borrow_mut","","",612,[[["self"]],["t"]]],[11,"try_into","","",612,[[["self"]],["result"]]],[11,"get_type_id","","",612,[[["self"]],["typeid"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[["self"]],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,N],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"try_into","","",212,[[["self"]],["result"]]],[11,"get_type_id","","",212,[[["self"]],["typeid"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[["self"]],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,N],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"try_into","","",213,[[["self"]],["result"]]],[11,"get_type_id","","",213,[[["self"]],["typeid"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[["self"]],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,N],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"try_into","","",214,[[["self"]],["result"]]],[11,"get_type_id","","",214,[[["self"]],["typeid"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[["self"]],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,N],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"try_into","","",215,[[["self"]],["result"]]],[11,"get_type_id","","",215,[[["self"]],["typeid"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[["self"]],["u"]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"try_into","","",216,[[["self"]],["result"]]],[11,"get_type_id","","",216,[[["self"]],["typeid"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[["self"]],["u"]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"try_into","","",217,[[["self"]],["result"]]],[11,"get_type_id","","",217,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",613,[[["t"]],["t"]]],[11,"into","","",613,[[["self"]],["u"]]],[11,"try_from","","",613,[[["u"]],["result"]]],[11,"borrow","","",613,[[["self"]],["t"]]],[11,"borrow_mut","","",613,[[["self"]],["t"]]],[11,"try_into","","",613,[[["self"]],["result"]]],[11,"get_type_id","","",613,[[["self"]],["typeid"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[["self"]],["u"]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"try_into","","",219,[[["self"]],["result"]]],[11,"get_type_id","","",219,[[["self"]],["typeid"]]],[11,"from","","",614,[[["t"]],["t"]]],[11,"into","","",614,[[["self"]],["u"]]],[11,"try_from","","",614,[[["u"]],["result"]]],[11,"borrow","","",614,[[["self"]],["t"]]],[11,"borrow_mut","","",614,[[["self"]],["t"]]],[11,"try_into","","",614,[[["self"]],["result"]]],[11,"get_type_id","","",614,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",615,[[["t"]],["t"]]],[11,"into","","",615,[[["self"]],["u"]]],[11,"try_from","","",615,[[["u"]],["result"]]],[11,"borrow","","",615,[[["self"]],["t"]]],[11,"borrow_mut","","",615,[[["self"]],["t"]]],[11,"try_into","","",615,[[["self"]],["result"]]],[11,"get_type_id","","",615,[[["self"]],["typeid"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[["self"]],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,N],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"try_into","","",221,[[["self"]],["result"]]],[11,"get_type_id","","",221,[[["self"]],["typeid"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[["self"]],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,N],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"try_into","","",222,[[["self"]],["result"]]],[11,"get_type_id","","",222,[[["self"]],["typeid"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[["self"]],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,N],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"try_into","","",223,[[["self"]],["result"]]],[11,"get_type_id","","",223,[[["self"]],["typeid"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[["self"]],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,N],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"try_into","","",224,[[["self"]],["result"]]],[11,"get_type_id","","",224,[[["self"]],["typeid"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[["self"]],["u"]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"try_into","","",225,[[["self"]],["result"]]],[11,"get_type_id","","",225,[[["self"]],["typeid"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[["self"]],["u"]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"try_into","","",226,[[["self"]],["result"]]],[11,"get_type_id","","",226,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",616,[[["t"]],["t"]]],[11,"into","","",616,[[["self"]],["u"]]],[11,"try_from","","",616,[[["u"]],["result"]]],[11,"borrow","","",616,[[["self"]],["t"]]],[11,"borrow_mut","","",616,[[["self"]],["t"]]],[11,"try_into","","",616,[[["self"]],["result"]]],[11,"get_type_id","","",616,[[["self"]],["typeid"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[["self"]],["u"]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"try_into","","",227,[[["self"]],["result"]]],[11,"get_type_id","","",227,[[["self"]],["typeid"]]],[11,"from","","",617,[[["t"]],["t"]]],[11,"into","","",617,[[["self"]],["u"]]],[11,"try_from","","",617,[[["u"]],["result"]]],[11,"borrow","","",617,[[["self"]],["t"]]],[11,"borrow_mut","","",617,[[["self"]],["t"]]],[11,"try_into","","",617,[[["self"]],["result"]]],[11,"get_type_id","","",617,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["t"]],["t"]]],[11,"into","","",240,[[["self"]],["u"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,N],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"try_into","","",240,[[["self"]],["result"]]],[11,"get_type_id","","",240,[[["self"]],["typeid"]]],[11,"from","","",618,[[["t"]],["t"]]],[11,"into","","",618,[[["self"]],["u"]]],[11,"try_from","","",618,[[["u"]],["result"]]],[11,"borrow","","",618,[[["self"]],["t"]]],[11,"borrow_mut","","",618,[[["self"]],["t"]]],[11,"try_into","","",618,[[["self"]],["result"]]],[11,"get_type_id","","",618,[[["self"]],["typeid"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[["self"]],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,N],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"try_into","","",228,[[["self"]],["result"]]],[11,"get_type_id","","",228,[[["self"]],["typeid"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[["self"]],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,N],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"try_into","","",229,[[["self"]],["result"]]],[11,"get_type_id","","",229,[[["self"]],["typeid"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[["self"]],["u"]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"try_into","","",230,[[["self"]],["result"]]],[11,"get_type_id","","",230,[[["self"]],["typeid"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[["self"]],["u"]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"try_into","","",231,[[["self"]],["result"]]],[11,"get_type_id","","",231,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",619,[[["t"]],["t"]]],[11,"into","","",619,[[["self"]],["u"]]],[11,"try_from","","",619,[[["u"]],["result"]]],[11,"borrow","","",619,[[["self"]],["t"]]],[11,"borrow_mut","","",619,[[["self"]],["t"]]],[11,"try_into","","",619,[[["self"]],["result"]]],[11,"get_type_id","","",619,[[["self"]],["typeid"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[["self"]],["u"]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"try_into","","",233,[[["self"]],["result"]]],[11,"get_type_id","","",233,[[["self"]],["typeid"]]],[11,"from","","",620,[[["t"]],["t"]]],[11,"into","","",620,[[["self"]],["u"]]],[11,"try_from","","",620,[[["u"]],["result"]]],[11,"borrow","","",620,[[["self"]],["t"]]],[11,"borrow_mut","","",620,[[["self"]],["t"]]],[11,"try_into","","",620,[[["self"]],["result"]]],[11,"get_type_id","","",620,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["t"]],["t"]]],[11,"into","","",241,[[["self"]],["u"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,N],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"try_into","","",241,[[["self"]],["result"]]],[11,"get_type_id","","",241,[[["self"]],["typeid"]]],[11,"from","","",621,[[["t"]],["t"]]],[11,"into","","",621,[[["self"]],["u"]]],[11,"try_from","","",621,[[["u"]],["result"]]],[11,"borrow","","",621,[[["self"]],["t"]]],[11,"borrow_mut","","",621,[[["self"]],["t"]]],[11,"try_into","","",621,[[["self"]],["result"]]],[11,"get_type_id","","",621,[[["self"]],["typeid"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[["self"]],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,N],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"try_into","","",235,[[["self"]],["result"]]],[11,"get_type_id","","",235,[[["self"]],["typeid"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[["self"]],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,N],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"try_into","","",236,[[["self"]],["result"]]],[11,"get_type_id","","",236,[[["self"]],["typeid"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[["self"]],["u"]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"try_into","","",237,[[["self"]],["result"]]],[11,"get_type_id","","",237,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[["self"]],["u"]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"try_into","","",238,[[["self"]],["result"]]],[11,"get_type_id","","",238,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",622,[[["t"]],["t"]]],[11,"into","","",622,[[["self"]],["u"]]],[11,"try_from","","",622,[[["u"]],["result"]]],[11,"borrow","","",622,[[["self"]],["t"]]],[11,"borrow_mut","","",622,[[["self"]],["t"]]],[11,"try_into","","",622,[[["self"]],["result"]]],[11,"get_type_id","","",622,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[["self"]],["u"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"try_into","","",239,[[["self"]],["result"]]],[11,"get_type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",623,[[["t"]],["t"]]],[11,"into","","",623,[[["self"]],["u"]]],[11,"try_from","","",623,[[["u"]],["result"]]],[11,"borrow","","",623,[[["self"]],["t"]]],[11,"borrow_mut","","",623,[[["self"]],["t"]]],[11,"try_into","","",623,[[["self"]],["result"]]],[11,"get_type_id","","",623,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",624,[[["t"]],["t"]]],[11,"into","","",624,[[["self"]],["u"]]],[11,"try_from","","",624,[[["u"]],["result"]]],[11,"borrow","","",624,[[["self"]],["t"]]],[11,"borrow_mut","","",624,[[["self"]],["t"]]],[11,"try_into","","",624,[[["self"]],["result"]]],[11,"get_type_id","","",624,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[["self"]],["u"]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"try_into","","",242,[[["self"]],["result"]]],[11,"get_type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",625,[[["t"]],["t"]]],[11,"into","","",625,[[["self"]],["u"]]],[11,"try_from","","",625,[[["u"]],["result"]]],[11,"borrow","","",625,[[["self"]],["t"]]],[11,"borrow_mut","","",625,[[["self"]],["t"]]],[11,"try_into","","",625,[[["self"]],["result"]]],[11,"get_type_id","","",625,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",626,[[["t"]],["t"]]],[11,"into","","",626,[[["self"]],["u"]]],[11,"try_from","","",626,[[["u"]],["result"]]],[11,"borrow","","",626,[[["self"]],["t"]]],[11,"borrow_mut","","",626,[[["self"]],["t"]]],[11,"try_into","","",626,[[["self"]],["result"]]],[11,"get_type_id","","",626,[[["self"]],["typeid"]]],[11,"from","","",244,[[["t"]],["t"]]],[11,"into","","",244,[[["self"]],["u"]]],[11,"to_owned","","",244,[[["self"]],["t"]]],[11,"clone_into","","",244,N],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"try_into","","",244,[[["self"]],["result"]]],[11,"get_type_id","","",244,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[["self"]],["u"]]],[11,"to_owned","","",245,[[["self"]],["t"]]],[11,"clone_into","","",245,N],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"try_into","","",245,[[["self"]],["result"]]],[11,"get_type_id","","",245,[[["self"]],["typeid"]]],[11,"from","","",246,[[["t"]],["t"]]],[11,"into","","",246,[[["self"]],["u"]]],[11,"try_from","","",246,[[["u"]],["result"]]],[11,"borrow","","",246,[[["self"]],["t"]]],[11,"borrow_mut","","",246,[[["self"]],["t"]]],[11,"try_into","","",246,[[["self"]],["result"]]],[11,"get_type_id","","",246,[[["self"]],["typeid"]]],[11,"from","","",247,[[["t"]],["t"]]],[11,"into","","",247,[[["self"]],["u"]]],[11,"try_from","","",247,[[["u"]],["result"]]],[11,"borrow","","",247,[[["self"]],["t"]]],[11,"borrow_mut","","",247,[[["self"]],["t"]]],[11,"try_into","","",247,[[["self"]],["result"]]],[11,"get_type_id","","",247,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",627,[[["t"]],["t"]]],[11,"into","","",627,[[["self"]],["u"]]],[11,"try_from","","",627,[[["u"]],["result"]]],[11,"borrow","","",627,[[["self"]],["t"]]],[11,"borrow_mut","","",627,[[["self"]],["t"]]],[11,"try_into","","",627,[[["self"]],["result"]]],[11,"get_type_id","","",627,[[["self"]],["typeid"]]],[11,"from","","",249,[[["t"]],["t"]]],[11,"into","","",249,[[["self"]],["u"]]],[11,"try_from","","",249,[[["u"]],["result"]]],[11,"borrow","","",249,[[["self"]],["t"]]],[11,"borrow_mut","","",249,[[["self"]],["t"]]],[11,"try_into","","",249,[[["self"]],["result"]]],[11,"get_type_id","","",249,[[["self"]],["typeid"]]],[11,"from","","",628,[[["t"]],["t"]]],[11,"into","","",628,[[["self"]],["u"]]],[11,"try_from","","",628,[[["u"]],["result"]]],[11,"borrow","","",628,[[["self"]],["t"]]],[11,"borrow_mut","","",628,[[["self"]],["t"]]],[11,"try_into","","",628,[[["self"]],["result"]]],[11,"get_type_id","","",628,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",629,[[["t"]],["t"]]],[11,"into","","",629,[[["self"]],["u"]]],[11,"try_from","","",629,[[["u"]],["result"]]],[11,"borrow","","",629,[[["self"]],["t"]]],[11,"borrow_mut","","",629,[[["self"]],["t"]]],[11,"try_into","","",629,[[["self"]],["result"]]],[11,"get_type_id","","",629,[[["self"]],["typeid"]]],[11,"from","","",250,[[["t"]],["t"]]],[11,"into","","",250,[[["self"]],["u"]]],[11,"to_owned","","",250,[[["self"]],["t"]]],[11,"clone_into","","",250,N],[11,"try_from","","",250,[[["u"]],["result"]]],[11,"borrow","","",250,[[["self"]],["t"]]],[11,"borrow_mut","","",250,[[["self"]],["t"]]],[11,"try_into","","",250,[[["self"]],["result"]]],[11,"get_type_id","","",250,[[["self"]],["typeid"]]],[11,"from","","",251,[[["t"]],["t"]]],[11,"into","","",251,[[["self"]],["u"]]],[11,"to_owned","","",251,[[["self"]],["t"]]],[11,"clone_into","","",251,N],[11,"try_from","","",251,[[["u"]],["result"]]],[11,"borrow","","",251,[[["self"]],["t"]]],[11,"borrow_mut","","",251,[[["self"]],["t"]]],[11,"try_into","","",251,[[["self"]],["result"]]],[11,"get_type_id","","",251,[[["self"]],["typeid"]]],[11,"from","","",252,[[["t"]],["t"]]],[11,"into","","",252,[[["self"]],["u"]]],[11,"try_from","","",252,[[["u"]],["result"]]],[11,"borrow","","",252,[[["self"]],["t"]]],[11,"borrow_mut","","",252,[[["self"]],["t"]]],[11,"try_into","","",252,[[["self"]],["result"]]],[11,"get_type_id","","",252,[[["self"]],["typeid"]]],[11,"from","","",253,[[["t"]],["t"]]],[11,"into","","",253,[[["self"]],["u"]]],[11,"try_from","","",253,[[["u"]],["result"]]],[11,"borrow","","",253,[[["self"]],["t"]]],[11,"borrow_mut","","",253,[[["self"]],["t"]]],[11,"try_into","","",253,[[["self"]],["result"]]],[11,"get_type_id","","",253,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",630,[[["t"]],["t"]]],[11,"into","","",630,[[["self"]],["u"]]],[11,"try_from","","",630,[[["u"]],["result"]]],[11,"borrow","","",630,[[["self"]],["t"]]],[11,"borrow_mut","","",630,[[["self"]],["t"]]],[11,"try_into","","",630,[[["self"]],["result"]]],[11,"get_type_id","","",630,[[["self"]],["typeid"]]],[11,"from","","",254,[[["t"]],["t"]]],[11,"into","","",254,[[["self"]],["u"]]],[11,"try_from","","",254,[[["u"]],["result"]]],[11,"borrow","","",254,[[["self"]],["t"]]],[11,"borrow_mut","","",254,[[["self"]],["t"]]],[11,"try_into","","",254,[[["self"]],["result"]]],[11,"get_type_id","","",254,[[["self"]],["typeid"]]],[11,"from","","",631,[[["t"]],["t"]]],[11,"into","","",631,[[["self"]],["u"]]],[11,"try_from","","",631,[[["u"]],["result"]]],[11,"borrow","","",631,[[["self"]],["t"]]],[11,"borrow_mut","","",631,[[["self"]],["t"]]],[11,"try_into","","",631,[[["self"]],["result"]]],[11,"get_type_id","","",631,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",632,[[["t"]],["t"]]],[11,"into","","",632,[[["self"]],["u"]]],[11,"try_from","","",632,[[["u"]],["result"]]],[11,"borrow","","",632,[[["self"]],["t"]]],[11,"borrow_mut","","",632,[[["self"]],["t"]]],[11,"try_into","","",632,[[["self"]],["result"]]],[11,"get_type_id","","",632,[[["self"]],["typeid"]]],[11,"from","","",256,[[["t"]],["t"]]],[11,"into","","",256,[[["self"]],["u"]]],[11,"try_from","","",256,[[["u"]],["result"]]],[11,"borrow","","",256,[[["self"]],["t"]]],[11,"borrow_mut","","",256,[[["self"]],["t"]]],[11,"try_into","","",256,[[["self"]],["result"]]],[11,"get_type_id","","",256,[[["self"]],["typeid"]]],[11,"from","","",633,[[["t"]],["t"]]],[11,"into","","",633,[[["self"]],["u"]]],[11,"try_from","","",633,[[["u"]],["result"]]],[11,"borrow","","",633,[[["self"]],["t"]]],[11,"borrow_mut","","",633,[[["self"]],["t"]]],[11,"try_into","","",633,[[["self"]],["result"]]],[11,"get_type_id","","",633,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",634,[[["t"]],["t"]]],[11,"into","","",634,[[["self"]],["u"]]],[11,"try_from","","",634,[[["u"]],["result"]]],[11,"borrow","","",634,[[["self"]],["t"]]],[11,"borrow_mut","","",634,[[["self"]],["t"]]],[11,"try_into","","",634,[[["self"]],["result"]]],[11,"get_type_id","","",634,[[["self"]],["typeid"]]],[11,"from","","",258,[[["t"]],["t"]]],[11,"into","","",258,[[["self"]],["u"]]],[11,"try_from","","",258,[[["u"]],["result"]]],[11,"borrow","","",258,[[["self"]],["t"]]],[11,"borrow_mut","","",258,[[["self"]],["t"]]],[11,"try_into","","",258,[[["self"]],["result"]]],[11,"get_type_id","","",258,[[["self"]],["typeid"]]],[11,"from","","",259,[[["t"]],["t"]]],[11,"into","","",259,[[["self"]],["u"]]],[11,"try_from","","",259,[[["u"]],["result"]]],[11,"borrow","","",259,[[["self"]],["t"]]],[11,"borrow_mut","","",259,[[["self"]],["t"]]],[11,"try_into","","",259,[[["self"]],["result"]]],[11,"get_type_id","","",259,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",635,[[["t"]],["t"]]],[11,"into","","",635,[[["self"]],["u"]]],[11,"try_from","","",635,[[["u"]],["result"]]],[11,"borrow","","",635,[[["self"]],["t"]]],[11,"borrow_mut","","",635,[[["self"]],["t"]]],[11,"try_into","","",635,[[["self"]],["result"]]],[11,"get_type_id","","",635,[[["self"]],["typeid"]]],[11,"from","","",261,[[["t"]],["t"]]],[11,"into","","",261,[[["self"]],["u"]]],[11,"try_from","","",261,[[["u"]],["result"]]],[11,"borrow","","",261,[[["self"]],["t"]]],[11,"borrow_mut","","",261,[[["self"]],["t"]]],[11,"try_into","","",261,[[["self"]],["result"]]],[11,"get_type_id","","",261,[[["self"]],["typeid"]]],[11,"from","","",262,[[["t"]],["t"]]],[11,"into","","",262,[[["self"]],["u"]]],[11,"try_from","","",262,[[["u"]],["result"]]],[11,"borrow","","",262,[[["self"]],["t"]]],[11,"borrow_mut","","",262,[[["self"]],["t"]]],[11,"try_into","","",262,[[["self"]],["result"]]],[11,"get_type_id","","",262,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",636,[[["t"]],["t"]]],[11,"into","","",636,[[["self"]],["u"]]],[11,"try_from","","",636,[[["u"]],["result"]]],[11,"borrow","","",636,[[["self"]],["t"]]],[11,"borrow_mut","","",636,[[["self"]],["t"]]],[11,"try_into","","",636,[[["self"]],["result"]]],[11,"get_type_id","","",636,[[["self"]],["typeid"]]],[11,"from","","",264,[[["t"]],["t"]]],[11,"into","","",264,[[["self"]],["u"]]],[11,"try_from","","",264,[[["u"]],["result"]]],[11,"borrow","","",264,[[["self"]],["t"]]],[11,"borrow_mut","","",264,[[["self"]],["t"]]],[11,"try_into","","",264,[[["self"]],["result"]]],[11,"get_type_id","","",264,[[["self"]],["typeid"]]],[11,"from","","",637,[[["t"]],["t"]]],[11,"into","","",637,[[["self"]],["u"]]],[11,"try_from","","",637,[[["u"]],["result"]]],[11,"borrow","","",637,[[["self"]],["t"]]],[11,"borrow_mut","","",637,[[["self"]],["t"]]],[11,"try_into","","",637,[[["self"]],["result"]]],[11,"get_type_id","","",637,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",638,[[["t"]],["t"]]],[11,"into","","",638,[[["self"]],["u"]]],[11,"try_from","","",638,[[["u"]],["result"]]],[11,"borrow","","",638,[[["self"]],["t"]]],[11,"borrow_mut","","",638,[[["self"]],["t"]]],[11,"try_into","","",638,[[["self"]],["result"]]],[11,"get_type_id","","",638,[[["self"]],["typeid"]]],[11,"from","","",265,[[["t"]],["t"]]],[11,"into","","",265,[[["self"]],["u"]]],[11,"try_from","","",265,[[["u"]],["result"]]],[11,"borrow","","",265,[[["self"]],["t"]]],[11,"borrow_mut","","",265,[[["self"]],["t"]]],[11,"try_into","","",265,[[["self"]],["result"]]],[11,"get_type_id","","",265,[[["self"]],["typeid"]]],[11,"from","","",639,[[["t"]],["t"]]],[11,"into","","",639,[[["self"]],["u"]]],[11,"try_from","","",639,[[["u"]],["result"]]],[11,"borrow","","",639,[[["self"]],["t"]]],[11,"borrow_mut","","",639,[[["self"]],["t"]]],[11,"try_into","","",639,[[["self"]],["result"]]],[11,"get_type_id","","",639,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",640,[[["t"]],["t"]]],[11,"into","","",640,[[["self"]],["u"]]],[11,"try_from","","",640,[[["u"]],["result"]]],[11,"borrow","","",640,[[["self"]],["t"]]],[11,"borrow_mut","","",640,[[["self"]],["t"]]],[11,"try_into","","",640,[[["self"]],["result"]]],[11,"get_type_id","","",640,[[["self"]],["typeid"]]],[11,"from","","",266,[[["t"]],["t"]]],[11,"into","","",266,[[["self"]],["u"]]],[11,"try_from","","",266,[[["u"]],["result"]]],[11,"borrow","","",266,[[["self"]],["t"]]],[11,"borrow_mut","","",266,[[["self"]],["t"]]],[11,"try_into","","",266,[[["self"]],["result"]]],[11,"get_type_id","","",266,[[["self"]],["typeid"]]],[11,"from","","",267,[[["t"]],["t"]]],[11,"into","","",267,[[["self"]],["u"]]],[11,"try_from","","",267,[[["u"]],["result"]]],[11,"borrow","","",267,[[["self"]],["t"]]],[11,"borrow_mut","","",267,[[["self"]],["t"]]],[11,"try_into","","",267,[[["self"]],["result"]]],[11,"get_type_id","","",267,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",641,[[["t"]],["t"]]],[11,"into","","",641,[[["self"]],["u"]]],[11,"try_from","","",641,[[["u"]],["result"]]],[11,"borrow","","",641,[[["self"]],["t"]]],[11,"borrow_mut","","",641,[[["self"]],["t"]]],[11,"try_into","","",641,[[["self"]],["result"]]],[11,"get_type_id","","",641,[[["self"]],["typeid"]]],[11,"from","","",268,[[["t"]],["t"]]],[11,"into","","",268,[[["self"]],["u"]]],[11,"try_from","","",268,[[["u"]],["result"]]],[11,"borrow","","",268,[[["self"]],["t"]]],[11,"borrow_mut","","",268,[[["self"]],["t"]]],[11,"try_into","","",268,[[["self"]],["result"]]],[11,"get_type_id","","",268,[[["self"]],["typeid"]]],[11,"from","","",269,[[["t"]],["t"]]],[11,"into","","",269,[[["self"]],["u"]]],[11,"try_from","","",269,[[["u"]],["result"]]],[11,"borrow","","",269,[[["self"]],["t"]]],[11,"borrow_mut","","",269,[[["self"]],["t"]]],[11,"try_into","","",269,[[["self"]],["result"]]],[11,"get_type_id","","",269,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",642,[[["t"]],["t"]]],[11,"into","","",642,[[["self"]],["u"]]],[11,"try_from","","",642,[[["u"]],["result"]]],[11,"borrow","","",642,[[["self"]],["t"]]],[11,"borrow_mut","","",642,[[["self"]],["t"]]],[11,"try_into","","",642,[[["self"]],["result"]]],[11,"get_type_id","","",642,[[["self"]],["typeid"]]],[11,"from","","",270,[[["t"]],["t"]]],[11,"into","","",270,[[["self"]],["u"]]],[11,"try_from","","",270,[[["u"]],["result"]]],[11,"borrow","","",270,[[["self"]],["t"]]],[11,"borrow_mut","","",270,[[["self"]],["t"]]],[11,"try_into","","",270,[[["self"]],["result"]]],[11,"get_type_id","","",270,[[["self"]],["typeid"]]],[11,"from","","",643,[[["t"]],["t"]]],[11,"into","","",643,[[["self"]],["u"]]],[11,"try_from","","",643,[[["u"]],["result"]]],[11,"borrow","","",643,[[["self"]],["t"]]],[11,"borrow_mut","","",643,[[["self"]],["t"]]],[11,"try_into","","",643,[[["self"]],["result"]]],[11,"get_type_id","","",643,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",644,[[["t"]],["t"]]],[11,"into","","",644,[[["self"]],["u"]]],[11,"try_from","","",644,[[["u"]],["result"]]],[11,"borrow","","",644,[[["self"]],["t"]]],[11,"borrow_mut","","",644,[[["self"]],["t"]]],[11,"try_into","","",644,[[["self"]],["result"]]],[11,"get_type_id","","",644,[[["self"]],["typeid"]]],[11,"from","","",272,[[["t"]],["t"]]],[11,"into","","",272,[[["self"]],["u"]]],[11,"try_from","","",272,[[["u"]],["result"]]],[11,"borrow","","",272,[[["self"]],["t"]]],[11,"borrow_mut","","",272,[[["self"]],["t"]]],[11,"try_into","","",272,[[["self"]],["result"]]],[11,"get_type_id","","",272,[[["self"]],["typeid"]]],[11,"from","","",645,[[["t"]],["t"]]],[11,"into","","",645,[[["self"]],["u"]]],[11,"try_from","","",645,[[["u"]],["result"]]],[11,"borrow","","",645,[[["self"]],["t"]]],[11,"borrow_mut","","",645,[[["self"]],["t"]]],[11,"try_into","","",645,[[["self"]],["result"]]],[11,"get_type_id","","",645,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",646,[[["t"]],["t"]]],[11,"into","","",646,[[["self"]],["u"]]],[11,"try_from","","",646,[[["u"]],["result"]]],[11,"borrow","","",646,[[["self"]],["t"]]],[11,"borrow_mut","","",646,[[["self"]],["t"]]],[11,"try_into","","",646,[[["self"]],["result"]]],[11,"get_type_id","","",646,[[["self"]],["typeid"]]],[11,"from","","",274,[[["t"]],["t"]]],[11,"into","","",274,[[["self"]],["u"]]],[11,"try_from","","",274,[[["u"]],["result"]]],[11,"borrow","","",274,[[["self"]],["t"]]],[11,"borrow_mut","","",274,[[["self"]],["t"]]],[11,"try_into","","",274,[[["self"]],["result"]]],[11,"get_type_id","","",274,[[["self"]],["typeid"]]],[11,"from","","",275,[[["t"]],["t"]]],[11,"into","","",275,[[["self"]],["u"]]],[11,"try_from","","",275,[[["u"]],["result"]]],[11,"borrow","","",275,[[["self"]],["t"]]],[11,"borrow_mut","","",275,[[["self"]],["t"]]],[11,"try_into","","",275,[[["self"]],["result"]]],[11,"get_type_id","","",275,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",647,[[["t"]],["t"]]],[11,"into","","",647,[[["self"]],["u"]]],[11,"try_from","","",647,[[["u"]],["result"]]],[11,"borrow","","",647,[[["self"]],["t"]]],[11,"borrow_mut","","",647,[[["self"]],["t"]]],[11,"try_into","","",647,[[["self"]],["result"]]],[11,"get_type_id","","",647,[[["self"]],["typeid"]]],[11,"from","","",277,[[["t"]],["t"]]],[11,"into","","",277,[[["self"]],["u"]]],[11,"try_from","","",277,[[["u"]],["result"]]],[11,"borrow","","",277,[[["self"]],["t"]]],[11,"borrow_mut","","",277,[[["self"]],["t"]]],[11,"try_into","","",277,[[["self"]],["result"]]],[11,"get_type_id","","",277,[[["self"]],["typeid"]]],[11,"from","","",278,[[["t"]],["t"]]],[11,"into","","",278,[[["self"]],["u"]]],[11,"try_from","","",278,[[["u"]],["result"]]],[11,"borrow","","",278,[[["self"]],["t"]]],[11,"borrow_mut","","",278,[[["self"]],["t"]]],[11,"try_into","","",278,[[["self"]],["result"]]],[11,"get_type_id","","",278,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",648,[[["t"]],["t"]]],[11,"into","","",648,[[["self"]],["u"]]],[11,"try_from","","",648,[[["u"]],["result"]]],[11,"borrow","","",648,[[["self"]],["t"]]],[11,"borrow_mut","","",648,[[["self"]],["t"]]],[11,"try_into","","",648,[[["self"]],["result"]]],[11,"get_type_id","","",648,[[["self"]],["typeid"]]],[11,"from","","",280,[[["t"]],["t"]]],[11,"into","","",280,[[["self"]],["u"]]],[11,"try_from","","",280,[[["u"]],["result"]]],[11,"borrow","","",280,[[["self"]],["t"]]],[11,"borrow_mut","","",280,[[["self"]],["t"]]],[11,"try_into","","",280,[[["self"]],["result"]]],[11,"get_type_id","","",280,[[["self"]],["typeid"]]],[11,"from","","",649,[[["t"]],["t"]]],[11,"into","","",649,[[["self"]],["u"]]],[11,"try_from","","",649,[[["u"]],["result"]]],[11,"borrow","","",649,[[["self"]],["t"]]],[11,"borrow_mut","","",649,[[["self"]],["t"]]],[11,"try_into","","",649,[[["self"]],["result"]]],[11,"get_type_id","","",649,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",650,[[["t"]],["t"]]],[11,"into","","",650,[[["self"]],["u"]]],[11,"try_from","","",650,[[["u"]],["result"]]],[11,"borrow","","",650,[[["self"]],["t"]]],[11,"borrow_mut","","",650,[[["self"]],["t"]]],[11,"try_into","","",650,[[["self"]],["result"]]],[11,"get_type_id","","",650,[[["self"]],["typeid"]]],[11,"from","","",281,[[["t"]],["t"]]],[11,"into","","",281,[[["self"]],["u"]]],[11,"try_from","","",281,[[["u"]],["result"]]],[11,"borrow","","",281,[[["self"]],["t"]]],[11,"borrow_mut","","",281,[[["self"]],["t"]]],[11,"try_into","","",281,[[["self"]],["result"]]],[11,"get_type_id","","",281,[[["self"]],["typeid"]]],[11,"from","","",651,[[["t"]],["t"]]],[11,"into","","",651,[[["self"]],["u"]]],[11,"try_from","","",651,[[["u"]],["result"]]],[11,"borrow","","",651,[[["self"]],["t"]]],[11,"borrow_mut","","",651,[[["self"]],["t"]]],[11,"try_into","","",651,[[["self"]],["result"]]],[11,"get_type_id","","",651,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",652,[[["t"]],["t"]]],[11,"into","","",652,[[["self"]],["u"]]],[11,"try_from","","",652,[[["u"]],["result"]]],[11,"borrow","","",652,[[["self"]],["t"]]],[11,"borrow_mut","","",652,[[["self"]],["t"]]],[11,"try_into","","",652,[[["self"]],["result"]]],[11,"get_type_id","","",652,[[["self"]],["typeid"]]],[11,"from","","",282,[[["t"]],["t"]]],[11,"into","","",282,[[["self"]],["u"]]],[11,"try_from","","",282,[[["u"]],["result"]]],[11,"borrow","","",282,[[["self"]],["t"]]],[11,"borrow_mut","","",282,[[["self"]],["t"]]],[11,"try_into","","",282,[[["self"]],["result"]]],[11,"get_type_id","","",282,[[["self"]],["typeid"]]],[11,"from","","",283,[[["t"]],["t"]]],[11,"into","","",283,[[["self"]],["u"]]],[11,"try_from","","",283,[[["u"]],["result"]]],[11,"borrow","","",283,[[["self"]],["t"]]],[11,"borrow_mut","","",283,[[["self"]],["t"]]],[11,"try_into","","",283,[[["self"]],["result"]]],[11,"get_type_id","","",283,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",653,[[["t"]],["t"]]],[11,"into","","",653,[[["self"]],["u"]]],[11,"try_from","","",653,[[["u"]],["result"]]],[11,"borrow","","",653,[[["self"]],["t"]]],[11,"borrow_mut","","",653,[[["self"]],["t"]]],[11,"try_into","","",653,[[["self"]],["result"]]],[11,"get_type_id","","",653,[[["self"]],["typeid"]]],[11,"from","","",284,[[["t"]],["t"]]],[11,"into","","",284,[[["self"]],["u"]]],[11,"try_from","","",284,[[["u"]],["result"]]],[11,"borrow","","",284,[[["self"]],["t"]]],[11,"borrow_mut","","",284,[[["self"]],["t"]]],[11,"try_into","","",284,[[["self"]],["result"]]],[11,"get_type_id","","",284,[[["self"]],["typeid"]]],[11,"from","","",285,[[["t"]],["t"]]],[11,"into","","",285,[[["self"]],["u"]]],[11,"try_from","","",285,[[["u"]],["result"]]],[11,"borrow","","",285,[[["self"]],["t"]]],[11,"borrow_mut","","",285,[[["self"]],["t"]]],[11,"try_into","","",285,[[["self"]],["result"]]],[11,"get_type_id","","",285,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",654,[[["t"]],["t"]]],[11,"into","","",654,[[["self"]],["u"]]],[11,"try_from","","",654,[[["u"]],["result"]]],[11,"borrow","","",654,[[["self"]],["t"]]],[11,"borrow_mut","","",654,[[["self"]],["t"]]],[11,"try_into","","",654,[[["self"]],["result"]]],[11,"get_type_id","","",654,[[["self"]],["typeid"]]],[11,"from","","",286,[[["t"]],["t"]]],[11,"into","","",286,[[["self"]],["u"]]],[11,"try_from","","",286,[[["u"]],["result"]]],[11,"borrow","","",286,[[["self"]],["t"]]],[11,"borrow_mut","","",286,[[["self"]],["t"]]],[11,"try_into","","",286,[[["self"]],["result"]]],[11,"get_type_id","","",286,[[["self"]],["typeid"]]],[11,"from","","",655,[[["t"]],["t"]]],[11,"into","","",655,[[["self"]],["u"]]],[11,"try_from","","",655,[[["u"]],["result"]]],[11,"borrow","","",655,[[["self"]],["t"]]],[11,"borrow_mut","","",655,[[["self"]],["t"]]],[11,"try_into","","",655,[[["self"]],["result"]]],[11,"get_type_id","","",655,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",656,[[["t"]],["t"]]],[11,"into","","",656,[[["self"]],["u"]]],[11,"try_from","","",656,[[["u"]],["result"]]],[11,"borrow","","",656,[[["self"]],["t"]]],[11,"borrow_mut","","",656,[[["self"]],["t"]]],[11,"try_into","","",656,[[["self"]],["result"]]],[11,"get_type_id","","",656,[[["self"]],["typeid"]]],[11,"from","","",288,[[["t"]],["t"]]],[11,"into","","",288,[[["self"]],["u"]]],[11,"try_from","","",288,[[["u"]],["result"]]],[11,"borrow","","",288,[[["self"]],["t"]]],[11,"borrow_mut","","",288,[[["self"]],["t"]]],[11,"try_into","","",288,[[["self"]],["result"]]],[11,"get_type_id","","",288,[[["self"]],["typeid"]]],[11,"from","","",289,[[["t"]],["t"]]],[11,"into","","",289,[[["self"]],["u"]]],[11,"try_from","","",289,[[["u"]],["result"]]],[11,"borrow","","",289,[[["self"]],["t"]]],[11,"borrow_mut","","",289,[[["self"]],["t"]]],[11,"try_into","","",289,[[["self"]],["result"]]],[11,"get_type_id","","",289,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",657,[[["t"]],["t"]]],[11,"into","","",657,[[["self"]],["u"]]],[11,"try_from","","",657,[[["u"]],["result"]]],[11,"borrow","","",657,[[["self"]],["t"]]],[11,"borrow_mut","","",657,[[["self"]],["t"]]],[11,"try_into","","",657,[[["self"]],["result"]]],[11,"get_type_id","","",657,[[["self"]],["typeid"]]],[11,"from","","",291,[[["t"]],["t"]]],[11,"into","","",291,[[["self"]],["u"]]],[11,"try_from","","",291,[[["u"]],["result"]]],[11,"borrow","","",291,[[["self"]],["t"]]],[11,"borrow_mut","","",291,[[["self"]],["t"]]],[11,"try_into","","",291,[[["self"]],["result"]]],[11,"get_type_id","","",291,[[["self"]],["typeid"]]],[11,"from","","",658,[[["t"]],["t"]]],[11,"into","","",658,[[["self"]],["u"]]],[11,"try_from","","",658,[[["u"]],["result"]]],[11,"borrow","","",658,[[["self"]],["t"]]],[11,"borrow_mut","","",658,[[["self"]],["t"]]],[11,"try_into","","",658,[[["self"]],["result"]]],[11,"get_type_id","","",658,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",659,[[["t"]],["t"]]],[11,"into","","",659,[[["self"]],["u"]]],[11,"try_from","","",659,[[["u"]],["result"]]],[11,"borrow","","",659,[[["self"]],["t"]]],[11,"borrow_mut","","",659,[[["self"]],["t"]]],[11,"try_into","","",659,[[["self"]],["result"]]],[11,"get_type_id","","",659,[[["self"]],["typeid"]]],[11,"from","","",292,[[["t"]],["t"]]],[11,"into","","",292,[[["self"]],["u"]]],[11,"try_from","","",292,[[["u"]],["result"]]],[11,"borrow","","",292,[[["self"]],["t"]]],[11,"borrow_mut","","",292,[[["self"]],["t"]]],[11,"try_into","","",292,[[["self"]],["result"]]],[11,"get_type_id","","",292,[[["self"]],["typeid"]]],[11,"from","","",293,[[["t"]],["t"]]],[11,"into","","",293,[[["self"]],["u"]]],[11,"try_from","","",293,[[["u"]],["result"]]],[11,"borrow","","",293,[[["self"]],["t"]]],[11,"borrow_mut","","",293,[[["self"]],["t"]]],[11,"try_into","","",293,[[["self"]],["result"]]],[11,"get_type_id","","",293,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",660,[[["t"]],["t"]]],[11,"into","","",660,[[["self"]],["u"]]],[11,"try_from","","",660,[[["u"]],["result"]]],[11,"borrow","","",660,[[["self"]],["t"]]],[11,"borrow_mut","","",660,[[["self"]],["t"]]],[11,"try_into","","",660,[[["self"]],["result"]]],[11,"get_type_id","","",660,[[["self"]],["typeid"]]],[11,"from","","",294,[[["t"]],["t"]]],[11,"into","","",294,[[["self"]],["u"]]],[11,"to_owned","","",294,[[["self"]],["t"]]],[11,"clone_into","","",294,N],[11,"try_from","","",294,[[["u"]],["result"]]],[11,"borrow","","",294,[[["self"]],["t"]]],[11,"borrow_mut","","",294,[[["self"]],["t"]]],[11,"try_into","","",294,[[["self"]],["result"]]],[11,"get_type_id","","",294,[[["self"]],["typeid"]]],[11,"from","","",295,[[["t"]],["t"]]],[11,"into","","",295,[[["self"]],["u"]]],[11,"to_owned","","",295,[[["self"]],["t"]]],[11,"clone_into","","",295,N],[11,"try_from","","",295,[[["u"]],["result"]]],[11,"borrow","","",295,[[["self"]],["t"]]],[11,"borrow_mut","","",295,[[["self"]],["t"]]],[11,"try_into","","",295,[[["self"]],["result"]]],[11,"get_type_id","","",295,[[["self"]],["typeid"]]],[11,"from","","",296,[[["t"]],["t"]]],[11,"into","","",296,[[["self"]],["u"]]],[11,"try_from","","",296,[[["u"]],["result"]]],[11,"borrow","","",296,[[["self"]],["t"]]],[11,"borrow_mut","","",296,[[["self"]],["t"]]],[11,"try_into","","",296,[[["self"]],["result"]]],[11,"get_type_id","","",296,[[["self"]],["typeid"]]],[11,"from","","",297,[[["t"]],["t"]]],[11,"into","","",297,[[["self"]],["u"]]],[11,"try_from","","",297,[[["u"]],["result"]]],[11,"borrow","","",297,[[["self"]],["t"]]],[11,"borrow_mut","","",297,[[["self"]],["t"]]],[11,"try_into","","",297,[[["self"]],["result"]]],[11,"get_type_id","","",297,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",661,[[["t"]],["t"]]],[11,"into","","",661,[[["self"]],["u"]]],[11,"try_from","","",661,[[["u"]],["result"]]],[11,"borrow","","",661,[[["self"]],["t"]]],[11,"borrow_mut","","",661,[[["self"]],["t"]]],[11,"try_into","","",661,[[["self"]],["result"]]],[11,"get_type_id","","",661,[[["self"]],["typeid"]]],[11,"from","","",299,[[["t"]],["t"]]],[11,"into","","",299,[[["self"]],["u"]]],[11,"to_owned","","",299,[[["self"]],["t"]]],[11,"clone_into","","",299,N],[11,"try_from","","",299,[[["u"]],["result"]]],[11,"borrow","","",299,[[["self"]],["t"]]],[11,"borrow_mut","","",299,[[["self"]],["t"]]],[11,"try_into","","",299,[[["self"]],["result"]]],[11,"get_type_id","","",299,[[["self"]],["typeid"]]],[11,"from","","",300,[[["t"]],["t"]]],[11,"into","","",300,[[["self"]],["u"]]],[11,"to_owned","","",300,[[["self"]],["t"]]],[11,"clone_into","","",300,N],[11,"try_from","","",300,[[["u"]],["result"]]],[11,"borrow","","",300,[[["self"]],["t"]]],[11,"borrow_mut","","",300,[[["self"]],["t"]]],[11,"try_into","","",300,[[["self"]],["result"]]],[11,"get_type_id","","",300,[[["self"]],["typeid"]]],[11,"from","","",301,[[["t"]],["t"]]],[11,"into","","",301,[[["self"]],["u"]]],[11,"try_from","","",301,[[["u"]],["result"]]],[11,"borrow","","",301,[[["self"]],["t"]]],[11,"borrow_mut","","",301,[[["self"]],["t"]]],[11,"try_into","","",301,[[["self"]],["result"]]],[11,"get_type_id","","",301,[[["self"]],["typeid"]]],[11,"from","","",302,[[["t"]],["t"]]],[11,"into","","",302,[[["self"]],["u"]]],[11,"try_from","","",302,[[["u"]],["result"]]],[11,"borrow","","",302,[[["self"]],["t"]]],[11,"borrow_mut","","",302,[[["self"]],["t"]]],[11,"try_into","","",302,[[["self"]],["result"]]],[11,"get_type_id","","",302,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",662,[[["t"]],["t"]]],[11,"into","","",662,[[["self"]],["u"]]],[11,"try_from","","",662,[[["u"]],["result"]]],[11,"borrow","","",662,[[["self"]],["t"]]],[11,"borrow_mut","","",662,[[["self"]],["t"]]],[11,"try_into","","",662,[[["self"]],["result"]]],[11,"get_type_id","","",662,[[["self"]],["typeid"]]],[11,"from","","",304,[[["t"]],["t"]]],[11,"into","","",304,[[["self"]],["u"]]],[11,"try_from","","",304,[[["u"]],["result"]]],[11,"borrow","","",304,[[["self"]],["t"]]],[11,"borrow_mut","","",304,[[["self"]],["t"]]],[11,"try_into","","",304,[[["self"]],["result"]]],[11,"get_type_id","","",304,[[["self"]],["typeid"]]],[11,"from","","",305,[[["t"]],["t"]]],[11,"into","","",305,[[["self"]],["u"]]],[11,"try_from","","",305,[[["u"]],["result"]]],[11,"borrow","","",305,[[["self"]],["t"]]],[11,"borrow_mut","","",305,[[["self"]],["t"]]],[11,"try_into","","",305,[[["self"]],["result"]]],[11,"get_type_id","","",305,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",663,[[["t"]],["t"]]],[11,"into","","",663,[[["self"]],["u"]]],[11,"try_from","","",663,[[["u"]],["result"]]],[11,"borrow","","",663,[[["self"]],["t"]]],[11,"borrow_mut","","",663,[[["self"]],["t"]]],[11,"try_into","","",663,[[["self"]],["result"]]],[11,"get_type_id","","",663,[[["self"]],["typeid"]]],[11,"from","","",307,[[["t"]],["t"]]],[11,"into","","",307,[[["self"]],["u"]]],[11,"to_owned","","",307,[[["self"]],["t"]]],[11,"clone_into","","",307,N],[11,"try_from","","",307,[[["u"]],["result"]]],[11,"borrow","","",307,[[["self"]],["t"]]],[11,"borrow_mut","","",307,[[["self"]],["t"]]],[11,"try_into","","",307,[[["self"]],["result"]]],[11,"get_type_id","","",307,[[["self"]],["typeid"]]],[11,"from","","",308,[[["t"]],["t"]]],[11,"into","","",308,[[["self"]],["u"]]],[11,"to_owned","","",308,[[["self"]],["t"]]],[11,"clone_into","","",308,N],[11,"try_from","","",308,[[["u"]],["result"]]],[11,"borrow","","",308,[[["self"]],["t"]]],[11,"borrow_mut","","",308,[[["self"]],["t"]]],[11,"try_into","","",308,[[["self"]],["result"]]],[11,"get_type_id","","",308,[[["self"]],["typeid"]]],[11,"from","","",309,[[["t"]],["t"]]],[11,"into","","",309,[[["self"]],["u"]]],[11,"try_from","","",309,[[["u"]],["result"]]],[11,"borrow","","",309,[[["self"]],["t"]]],[11,"borrow_mut","","",309,[[["self"]],["t"]]],[11,"try_into","","",309,[[["self"]],["result"]]],[11,"get_type_id","","",309,[[["self"]],["typeid"]]],[11,"from","","",310,[[["t"]],["t"]]],[11,"into","","",310,[[["self"]],["u"]]],[11,"try_from","","",310,[[["u"]],["result"]]],[11,"borrow","","",310,[[["self"]],["t"]]],[11,"borrow_mut","","",310,[[["self"]],["t"]]],[11,"try_into","","",310,[[["self"]],["result"]]],[11,"get_type_id","","",310,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",664,[[["t"]],["t"]]],[11,"into","","",664,[[["self"]],["u"]]],[11,"try_from","","",664,[[["u"]],["result"]]],[11,"borrow","","",664,[[["self"]],["t"]]],[11,"borrow_mut","","",664,[[["self"]],["t"]]],[11,"try_into","","",664,[[["self"]],["result"]]],[11,"get_type_id","","",664,[[["self"]],["typeid"]]],[11,"from","","",311,[[["t"]],["t"]]],[11,"into","","",311,[[["self"]],["u"]]],[11,"to_owned","","",311,[[["self"]],["t"]]],[11,"clone_into","","",311,N],[11,"try_from","","",311,[[["u"]],["result"]]],[11,"borrow","","",311,[[["self"]],["t"]]],[11,"borrow_mut","","",311,[[["self"]],["t"]]],[11,"try_into","","",311,[[["self"]],["result"]]],[11,"get_type_id","","",311,[[["self"]],["typeid"]]],[11,"from","","",312,[[["t"]],["t"]]],[11,"into","","",312,[[["self"]],["u"]]],[11,"to_owned","","",312,[[["self"]],["t"]]],[11,"clone_into","","",312,N],[11,"try_from","","",312,[[["u"]],["result"]]],[11,"borrow","","",312,[[["self"]],["t"]]],[11,"borrow_mut","","",312,[[["self"]],["t"]]],[11,"try_into","","",312,[[["self"]],["result"]]],[11,"get_type_id","","",312,[[["self"]],["typeid"]]],[11,"from","","",313,[[["t"]],["t"]]],[11,"into","","",313,[[["self"]],["u"]]],[11,"try_from","","",313,[[["u"]],["result"]]],[11,"borrow","","",313,[[["self"]],["t"]]],[11,"borrow_mut","","",313,[[["self"]],["t"]]],[11,"try_into","","",313,[[["self"]],["result"]]],[11,"get_type_id","","",313,[[["self"]],["typeid"]]],[11,"from","","",314,[[["t"]],["t"]]],[11,"into","","",314,[[["self"]],["u"]]],[11,"try_from","","",314,[[["u"]],["result"]]],[11,"borrow","","",314,[[["self"]],["t"]]],[11,"borrow_mut","","",314,[[["self"]],["t"]]],[11,"try_into","","",314,[[["self"]],["result"]]],[11,"get_type_id","","",314,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",665,[[["t"]],["t"]]],[11,"into","","",665,[[["self"]],["u"]]],[11,"try_from","","",665,[[["u"]],["result"]]],[11,"borrow","","",665,[[["self"]],["t"]]],[11,"borrow_mut","","",665,[[["self"]],["t"]]],[11,"try_into","","",665,[[["self"]],["result"]]],[11,"get_type_id","","",665,[[["self"]],["typeid"]]],[11,"from","","",315,[[["t"]],["t"]]],[11,"into","","",315,[[["self"]],["u"]]],[11,"try_from","","",315,[[["u"]],["result"]]],[11,"borrow","","",315,[[["self"]],["t"]]],[11,"borrow_mut","","",315,[[["self"]],["t"]]],[11,"try_into","","",315,[[["self"]],["result"]]],[11,"get_type_id","","",315,[[["self"]],["typeid"]]],[11,"from","","",316,[[["t"]],["t"]]],[11,"into","","",316,[[["self"]],["u"]]],[11,"try_from","","",316,[[["u"]],["result"]]],[11,"borrow","","",316,[[["self"]],["t"]]],[11,"borrow_mut","","",316,[[["self"]],["t"]]],[11,"try_into","","",316,[[["self"]],["result"]]],[11,"get_type_id","","",316,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",666,[[["t"]],["t"]]],[11,"into","","",666,[[["self"]],["u"]]],[11,"try_from","","",666,[[["u"]],["result"]]],[11,"borrow","","",666,[[["self"]],["t"]]],[11,"borrow_mut","","",666,[[["self"]],["t"]]],[11,"try_into","","",666,[[["self"]],["result"]]],[11,"get_type_id","","",666,[[["self"]],["typeid"]]],[11,"from","","",317,[[["t"]],["t"]]],[11,"into","","",317,[[["self"]],["u"]]],[11,"to_owned","","",317,[[["self"]],["t"]]],[11,"clone_into","","",317,N],[11,"try_from","","",317,[[["u"]],["result"]]],[11,"borrow","","",317,[[["self"]],["t"]]],[11,"borrow_mut","","",317,[[["self"]],["t"]]],[11,"try_into","","",317,[[["self"]],["result"]]],[11,"get_type_id","","",317,[[["self"]],["typeid"]]],[11,"from","","",318,[[["t"]],["t"]]],[11,"into","","",318,[[["self"]],["u"]]],[11,"try_from","","",318,[[["u"]],["result"]]],[11,"borrow","","",318,[[["self"]],["t"]]],[11,"borrow_mut","","",318,[[["self"]],["t"]]],[11,"try_into","","",318,[[["self"]],["result"]]],[11,"get_type_id","","",318,[[["self"]],["typeid"]]],[11,"from","","",319,[[["t"]],["t"]]],[11,"into","","",319,[[["self"]],["u"]]],[11,"try_from","","",319,[[["u"]],["result"]]],[11,"borrow","","",319,[[["self"]],["t"]]],[11,"borrow_mut","","",319,[[["self"]],["t"]]],[11,"try_into","","",319,[[["self"]],["result"]]],[11,"get_type_id","","",319,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["t"]],["t"]]],[11,"into","","",352,[[["self"]],["u"]]],[11,"to_owned","","",352,[[["self"]],["t"]]],[11,"clone_into","","",352,N],[11,"try_from","","",352,[[["u"]],["result"]]],[11,"borrow","","",352,[[["self"]],["t"]]],[11,"borrow_mut","","",352,[[["self"]],["t"]]],[11,"try_into","","",352,[[["self"]],["result"]]],[11,"get_type_id","","",352,[[["self"]],["typeid"]]],[11,"from","","",353,[[["t"]],["t"]]],[11,"into","","",353,[[["self"]],["u"]]],[11,"to_owned","","",353,[[["self"]],["t"]]],[11,"clone_into","","",353,N],[11,"try_from","","",353,[[["u"]],["result"]]],[11,"borrow","","",353,[[["self"]],["t"]]],[11,"borrow_mut","","",353,[[["self"]],["t"]]],[11,"try_into","","",353,[[["self"]],["result"]]],[11,"get_type_id","","",353,[[["self"]],["typeid"]]],[11,"from","","",354,[[["t"]],["t"]]],[11,"into","","",354,[[["self"]],["u"]]],[11,"to_owned","","",354,[[["self"]],["t"]]],[11,"clone_into","","",354,N],[11,"try_from","","",354,[[["u"]],["result"]]],[11,"borrow","","",354,[[["self"]],["t"]]],[11,"borrow_mut","","",354,[[["self"]],["t"]]],[11,"try_into","","",354,[[["self"]],["result"]]],[11,"get_type_id","","",354,[[["self"]],["typeid"]]],[11,"from","","",667,[[["t"]],["t"]]],[11,"into","","",667,[[["self"]],["u"]]],[11,"try_from","","",667,[[["u"]],["result"]]],[11,"borrow","","",667,[[["self"]],["t"]]],[11,"borrow_mut","","",667,[[["self"]],["t"]]],[11,"try_into","","",667,[[["self"]],["result"]]],[11,"get_type_id","","",667,[[["self"]],["typeid"]]],[11,"from","","",321,[[["t"]],["t"]]],[11,"into","","",321,[[["self"]],["u"]]],[11,"to_owned","","",321,[[["self"]],["t"]]],[11,"clone_into","","",321,N],[11,"try_from","","",321,[[["u"]],["result"]]],[11,"borrow","","",321,[[["self"]],["t"]]],[11,"borrow_mut","","",321,[[["self"]],["t"]]],[11,"try_into","","",321,[[["self"]],["result"]]],[11,"get_type_id","","",321,[[["self"]],["typeid"]]],[11,"from","","",322,[[["t"]],["t"]]],[11,"into","","",322,[[["self"]],["u"]]],[11,"try_from","","",322,[[["u"]],["result"]]],[11,"borrow","","",322,[[["self"]],["t"]]],[11,"borrow_mut","","",322,[[["self"]],["t"]]],[11,"try_into","","",322,[[["self"]],["result"]]],[11,"get_type_id","","",322,[[["self"]],["typeid"]]],[11,"from","","",668,[[["t"]],["t"]]],[11,"into","","",668,[[["self"]],["u"]]],[11,"try_from","","",668,[[["u"]],["result"]]],[11,"borrow","","",668,[[["self"]],["t"]]],[11,"borrow_mut","","",668,[[["self"]],["t"]]],[11,"try_into","","",668,[[["self"]],["result"]]],[11,"get_type_id","","",668,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",669,[[["t"]],["t"]]],[11,"into","","",669,[[["self"]],["u"]]],[11,"try_from","","",669,[[["u"]],["result"]]],[11,"borrow","","",669,[[["self"]],["t"]]],[11,"borrow_mut","","",669,[[["self"]],["t"]]],[11,"try_into","","",669,[[["self"]],["result"]]],[11,"get_type_id","","",669,[[["self"]],["typeid"]]],[11,"from","","",324,[[["t"]],["t"]]],[11,"into","","",324,[[["self"]],["u"]]],[11,"to_owned","","",324,[[["self"]],["t"]]],[11,"clone_into","","",324,N],[11,"try_from","","",324,[[["u"]],["result"]]],[11,"borrow","","",324,[[["self"]],["t"]]],[11,"borrow_mut","","",324,[[["self"]],["t"]]],[11,"try_into","","",324,[[["self"]],["result"]]],[11,"get_type_id","","",324,[[["self"]],["typeid"]]],[11,"from","","",325,[[["t"]],["t"]]],[11,"into","","",325,[[["self"]],["u"]]],[11,"try_from","","",325,[[["u"]],["result"]]],[11,"borrow","","",325,[[["self"]],["t"]]],[11,"borrow_mut","","",325,[[["self"]],["t"]]],[11,"try_into","","",325,[[["self"]],["result"]]],[11,"get_type_id","","",325,[[["self"]],["typeid"]]],[11,"from","","",326,[[["t"]],["t"]]],[11,"into","","",326,[[["self"]],["u"]]],[11,"try_from","","",326,[[["u"]],["result"]]],[11,"borrow","","",326,[[["self"]],["t"]]],[11,"borrow_mut","","",326,[[["self"]],["t"]]],[11,"try_into","","",326,[[["self"]],["result"]]],[11,"get_type_id","","",326,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",670,[[["t"]],["t"]]],[11,"into","","",670,[[["self"]],["u"]]],[11,"try_from","","",670,[[["u"]],["result"]]],[11,"borrow","","",670,[[["self"]],["t"]]],[11,"borrow_mut","","",670,[[["self"]],["t"]]],[11,"try_into","","",670,[[["self"]],["result"]]],[11,"get_type_id","","",670,[[["self"]],["typeid"]]],[11,"from","","",328,[[["t"]],["t"]]],[11,"into","","",328,[[["self"]],["u"]]],[11,"to_owned","","",328,[[["self"]],["t"]]],[11,"clone_into","","",328,N],[11,"try_from","","",328,[[["u"]],["result"]]],[11,"borrow","","",328,[[["self"]],["t"]]],[11,"borrow_mut","","",328,[[["self"]],["t"]]],[11,"try_into","","",328,[[["self"]],["result"]]],[11,"get_type_id","","",328,[[["self"]],["typeid"]]],[11,"from","","",329,[[["t"]],["t"]]],[11,"into","","",329,[[["self"]],["u"]]],[11,"to_owned","","",329,[[["self"]],["t"]]],[11,"clone_into","","",329,N],[11,"try_from","","",329,[[["u"]],["result"]]],[11,"borrow","","",329,[[["self"]],["t"]]],[11,"borrow_mut","","",329,[[["self"]],["t"]]],[11,"try_into","","",329,[[["self"]],["result"]]],[11,"get_type_id","","",329,[[["self"]],["typeid"]]],[11,"from","","",330,[[["t"]],["t"]]],[11,"into","","",330,[[["self"]],["u"]]],[11,"try_from","","",330,[[["u"]],["result"]]],[11,"borrow","","",330,[[["self"]],["t"]]],[11,"borrow_mut","","",330,[[["self"]],["t"]]],[11,"try_into","","",330,[[["self"]],["result"]]],[11,"get_type_id","","",330,[[["self"]],["typeid"]]],[11,"from","","",331,[[["t"]],["t"]]],[11,"into","","",331,[[["self"]],["u"]]],[11,"try_from","","",331,[[["u"]],["result"]]],[11,"borrow","","",331,[[["self"]],["t"]]],[11,"borrow_mut","","",331,[[["self"]],["t"]]],[11,"try_into","","",331,[[["self"]],["result"]]],[11,"get_type_id","","",331,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",671,[[["t"]],["t"]]],[11,"into","","",671,[[["self"]],["u"]]],[11,"try_from","","",671,[[["u"]],["result"]]],[11,"borrow","","",671,[[["self"]],["t"]]],[11,"borrow_mut","","",671,[[["self"]],["t"]]],[11,"try_into","","",671,[[["self"]],["result"]]],[11,"get_type_id","","",671,[[["self"]],["typeid"]]],[11,"from","","",333,[[["t"]],["t"]]],[11,"into","","",333,[[["self"]],["u"]]],[11,"to_owned","","",333,[[["self"]],["t"]]],[11,"clone_into","","",333,N],[11,"try_from","","",333,[[["u"]],["result"]]],[11,"borrow","","",333,[[["self"]],["t"]]],[11,"borrow_mut","","",333,[[["self"]],["t"]]],[11,"try_into","","",333,[[["self"]],["result"]]],[11,"get_type_id","","",333,[[["self"]],["typeid"]]],[11,"from","","",334,[[["t"]],["t"]]],[11,"into","","",334,[[["self"]],["u"]]],[11,"try_from","","",334,[[["u"]],["result"]]],[11,"borrow","","",334,[[["self"]],["t"]]],[11,"borrow_mut","","",334,[[["self"]],["t"]]],[11,"try_into","","",334,[[["self"]],["result"]]],[11,"get_type_id","","",334,[[["self"]],["typeid"]]],[11,"from","","",335,[[["t"]],["t"]]],[11,"into","","",335,[[["self"]],["u"]]],[11,"try_from","","",335,[[["u"]],["result"]]],[11,"borrow","","",335,[[["self"]],["t"]]],[11,"borrow_mut","","",335,[[["self"]],["t"]]],[11,"try_into","","",335,[[["self"]],["result"]]],[11,"get_type_id","","",335,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",672,[[["t"]],["t"]]],[11,"into","","",672,[[["self"]],["u"]]],[11,"try_from","","",672,[[["u"]],["result"]]],[11,"borrow","","",672,[[["self"]],["t"]]],[11,"borrow_mut","","",672,[[["self"]],["t"]]],[11,"try_into","","",672,[[["self"]],["result"]]],[11,"get_type_id","","",672,[[["self"]],["typeid"]]],[11,"from","","",337,[[["t"]],["t"]]],[11,"into","","",337,[[["self"]],["u"]]],[11,"to_owned","","",337,[[["self"]],["t"]]],[11,"clone_into","","",337,N],[11,"try_from","","",337,[[["u"]],["result"]]],[11,"borrow","","",337,[[["self"]],["t"]]],[11,"borrow_mut","","",337,[[["self"]],["t"]]],[11,"try_into","","",337,[[["self"]],["result"]]],[11,"get_type_id","","",337,[[["self"]],["typeid"]]],[11,"from","","",338,[[["t"]],["t"]]],[11,"into","","",338,[[["self"]],["u"]]],[11,"try_from","","",338,[[["u"]],["result"]]],[11,"borrow","","",338,[[["self"]],["t"]]],[11,"borrow_mut","","",338,[[["self"]],["t"]]],[11,"try_into","","",338,[[["self"]],["result"]]],[11,"get_type_id","","",338,[[["self"]],["typeid"]]],[11,"from","","",339,[[["t"]],["t"]]],[11,"into","","",339,[[["self"]],["u"]]],[11,"try_from","","",339,[[["u"]],["result"]]],[11,"borrow","","",339,[[["self"]],["t"]]],[11,"borrow_mut","","",339,[[["self"]],["t"]]],[11,"try_into","","",339,[[["self"]],["result"]]],[11,"get_type_id","","",339,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["t"]],["t"]]],[11,"into","","",355,[[["self"]],["u"]]],[11,"to_owned","","",355,[[["self"]],["t"]]],[11,"clone_into","","",355,N],[11,"try_from","","",355,[[["u"]],["result"]]],[11,"borrow","","",355,[[["self"]],["t"]]],[11,"borrow_mut","","",355,[[["self"]],["t"]]],[11,"try_into","","",355,[[["self"]],["result"]]],[11,"get_type_id","","",355,[[["self"]],["typeid"]]],[11,"from","","",356,[[["t"]],["t"]]],[11,"into","","",356,[[["self"]],["u"]]],[11,"to_owned","","",356,[[["self"]],["t"]]],[11,"clone_into","","",356,N],[11,"try_from","","",356,[[["u"]],["result"]]],[11,"borrow","","",356,[[["self"]],["t"]]],[11,"borrow_mut","","",356,[[["self"]],["t"]]],[11,"try_into","","",356,[[["self"]],["result"]]],[11,"get_type_id","","",356,[[["self"]],["typeid"]]],[11,"from","","",357,[[["t"]],["t"]]],[11,"into","","",357,[[["self"]],["u"]]],[11,"to_owned","","",357,[[["self"]],["t"]]],[11,"clone_into","","",357,N],[11,"try_from","","",357,[[["u"]],["result"]]],[11,"borrow","","",357,[[["self"]],["t"]]],[11,"borrow_mut","","",357,[[["self"]],["t"]]],[11,"try_into","","",357,[[["self"]],["result"]]],[11,"get_type_id","","",357,[[["self"]],["typeid"]]],[11,"from","","",673,[[["t"]],["t"]]],[11,"into","","",673,[[["self"]],["u"]]],[11,"try_from","","",673,[[["u"]],["result"]]],[11,"borrow","","",673,[[["self"]],["t"]]],[11,"borrow_mut","","",673,[[["self"]],["t"]]],[11,"try_into","","",673,[[["self"]],["result"]]],[11,"get_type_id","","",673,[[["self"]],["typeid"]]],[11,"from","","",340,[[["t"]],["t"]]],[11,"into","","",340,[[["self"]],["u"]]],[11,"to_owned","","",340,[[["self"]],["t"]]],[11,"clone_into","","",340,N],[11,"try_from","","",340,[[["u"]],["result"]]],[11,"borrow","","",340,[[["self"]],["t"]]],[11,"borrow_mut","","",340,[[["self"]],["t"]]],[11,"try_into","","",340,[[["self"]],["result"]]],[11,"get_type_id","","",340,[[["self"]],["typeid"]]],[11,"from","","",341,[[["t"]],["t"]]],[11,"into","","",341,[[["self"]],["u"]]],[11,"try_from","","",341,[[["u"]],["result"]]],[11,"borrow","","",341,[[["self"]],["t"]]],[11,"borrow_mut","","",341,[[["self"]],["t"]]],[11,"try_into","","",341,[[["self"]],["result"]]],[11,"get_type_id","","",341,[[["self"]],["typeid"]]],[11,"from","","",674,[[["t"]],["t"]]],[11,"into","","",674,[[["self"]],["u"]]],[11,"try_from","","",674,[[["u"]],["result"]]],[11,"borrow","","",674,[[["self"]],["t"]]],[11,"borrow_mut","","",674,[[["self"]],["t"]]],[11,"try_into","","",674,[[["self"]],["result"]]],[11,"get_type_id","","",674,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",675,[[["t"]],["t"]]],[11,"into","","",675,[[["self"]],["u"]]],[11,"try_from","","",675,[[["u"]],["result"]]],[11,"borrow","","",675,[[["self"]],["t"]]],[11,"borrow_mut","","",675,[[["self"]],["t"]]],[11,"try_into","","",675,[[["self"]],["result"]]],[11,"get_type_id","","",675,[[["self"]],["typeid"]]],[11,"from","","",342,[[["t"]],["t"]]],[11,"into","","",342,[[["self"]],["u"]]],[11,"to_owned","","",342,[[["self"]],["t"]]],[11,"clone_into","","",342,N],[11,"try_from","","",342,[[["u"]],["result"]]],[11,"borrow","","",342,[[["self"]],["t"]]],[11,"borrow_mut","","",342,[[["self"]],["t"]]],[11,"try_into","","",342,[[["self"]],["result"]]],[11,"get_type_id","","",342,[[["self"]],["typeid"]]],[11,"from","","",343,[[["t"]],["t"]]],[11,"into","","",343,[[["self"]],["u"]]],[11,"try_from","","",343,[[["u"]],["result"]]],[11,"borrow","","",343,[[["self"]],["t"]]],[11,"borrow_mut","","",343,[[["self"]],["t"]]],[11,"try_into","","",343,[[["self"]],["result"]]],[11,"get_type_id","","",343,[[["self"]],["typeid"]]],[11,"from","","",344,[[["t"]],["t"]]],[11,"into","","",344,[[["self"]],["u"]]],[11,"try_from","","",344,[[["u"]],["result"]]],[11,"borrow","","",344,[[["self"]],["t"]]],[11,"borrow_mut","","",344,[[["self"]],["t"]]],[11,"try_into","","",344,[[["self"]],["result"]]],[11,"get_type_id","","",344,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",676,[[["t"]],["t"]]],[11,"into","","",676,[[["self"]],["u"]]],[11,"try_from","","",676,[[["u"]],["result"]]],[11,"borrow","","",676,[[["self"]],["t"]]],[11,"borrow_mut","","",676,[[["self"]],["t"]]],[11,"try_into","","",676,[[["self"]],["result"]]],[11,"get_type_id","","",676,[[["self"]],["typeid"]]],[11,"from","","",345,[[["t"]],["t"]]],[11,"into","","",345,[[["self"]],["u"]]],[11,"to_owned","","",345,[[["self"]],["t"]]],[11,"clone_into","","",345,N],[11,"try_from","","",345,[[["u"]],["result"]]],[11,"borrow","","",345,[[["self"]],["t"]]],[11,"borrow_mut","","",345,[[["self"]],["t"]]],[11,"try_into","","",345,[[["self"]],["result"]]],[11,"get_type_id","","",345,[[["self"]],["typeid"]]],[11,"from","","",346,[[["t"]],["t"]]],[11,"into","","",346,[[["self"]],["u"]]],[11,"to_owned","","",346,[[["self"]],["t"]]],[11,"clone_into","","",346,N],[11,"try_from","","",346,[[["u"]],["result"]]],[11,"borrow","","",346,[[["self"]],["t"]]],[11,"borrow_mut","","",346,[[["self"]],["t"]]],[11,"try_into","","",346,[[["self"]],["result"]]],[11,"get_type_id","","",346,[[["self"]],["typeid"]]],[11,"from","","",347,[[["t"]],["t"]]],[11,"into","","",347,[[["self"]],["u"]]],[11,"try_from","","",347,[[["u"]],["result"]]],[11,"borrow","","",347,[[["self"]],["t"]]],[11,"borrow_mut","","",347,[[["self"]],["t"]]],[11,"try_into","","",347,[[["self"]],["result"]]],[11,"get_type_id","","",347,[[["self"]],["typeid"]]],[11,"from","","",348,[[["t"]],["t"]]],[11,"into","","",348,[[["self"]],["u"]]],[11,"try_from","","",348,[[["u"]],["result"]]],[11,"borrow","","",348,[[["self"]],["t"]]],[11,"borrow_mut","","",348,[[["self"]],["t"]]],[11,"try_into","","",348,[[["self"]],["result"]]],[11,"get_type_id","","",348,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",677,[[["t"]],["t"]]],[11,"into","","",677,[[["self"]],["u"]]],[11,"try_from","","",677,[[["u"]],["result"]]],[11,"borrow","","",677,[[["self"]],["t"]]],[11,"borrow_mut","","",677,[[["self"]],["t"]]],[11,"try_into","","",677,[[["self"]],["result"]]],[11,"get_type_id","","",677,[[["self"]],["typeid"]]],[11,"from","","",349,[[["t"]],["t"]]],[11,"into","","",349,[[["self"]],["u"]]],[11,"to_owned","","",349,[[["self"]],["t"]]],[11,"clone_into","","",349,N],[11,"try_from","","",349,[[["u"]],["result"]]],[11,"borrow","","",349,[[["self"]],["t"]]],[11,"borrow_mut","","",349,[[["self"]],["t"]]],[11,"try_into","","",349,[[["self"]],["result"]]],[11,"get_type_id","","",349,[[["self"]],["typeid"]]],[11,"from","","",350,[[["t"]],["t"]]],[11,"into","","",350,[[["self"]],["u"]]],[11,"try_from","","",350,[[["u"]],["result"]]],[11,"borrow","","",350,[[["self"]],["t"]]],[11,"borrow_mut","","",350,[[["self"]],["t"]]],[11,"try_into","","",350,[[["self"]],["result"]]],[11,"get_type_id","","",350,[[["self"]],["typeid"]]],[11,"from","","",351,[[["t"]],["t"]]],[11,"into","","",351,[[["self"]],["u"]]],[11,"try_from","","",351,[[["u"]],["result"]]],[11,"borrow","","",351,[[["self"]],["t"]]],[11,"borrow_mut","","",351,[[["self"]],["t"]]],[11,"try_into","","",351,[[["self"]],["result"]]],[11,"get_type_id","","",351,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",678,[[["t"]],["t"]]],[11,"into","","",678,[[["self"]],["u"]]],[11,"try_from","","",678,[[["u"]],["result"]]],[11,"borrow","","",678,[[["self"]],["t"]]],[11,"borrow_mut","","",678,[[["self"]],["t"]]],[11,"try_into","","",678,[[["self"]],["result"]]],[11,"get_type_id","","",678,[[["self"]],["typeid"]]],[11,"from","","",358,[[["t"]],["t"]]],[11,"into","","",358,[[["self"]],["u"]]],[11,"try_from","","",358,[[["u"]],["result"]]],[11,"borrow","","",358,[[["self"]],["t"]]],[11,"borrow_mut","","",358,[[["self"]],["t"]]],[11,"try_into","","",358,[[["self"]],["result"]]],[11,"get_type_id","","",358,[[["self"]],["typeid"]]],[11,"from","","",679,[[["t"]],["t"]]],[11,"into","","",679,[[["self"]],["u"]]],[11,"try_from","","",679,[[["u"]],["result"]]],[11,"borrow","","",679,[[["self"]],["t"]]],[11,"borrow_mut","","",679,[[["self"]],["t"]]],[11,"try_into","","",679,[[["self"]],["result"]]],[11,"get_type_id","","",679,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",680,[[["t"]],["t"]]],[11,"into","","",680,[[["self"]],["u"]]],[11,"try_from","","",680,[[["u"]],["result"]]],[11,"borrow","","",680,[[["self"]],["t"]]],[11,"borrow_mut","","",680,[[["self"]],["t"]]],[11,"try_into","","",680,[[["self"]],["result"]]],[11,"get_type_id","","",680,[[["self"]],["typeid"]]],[11,"from","","",360,[[["t"]],["t"]]],[11,"into","","",360,[[["self"]],["u"]]],[11,"try_from","","",360,[[["u"]],["result"]]],[11,"borrow","","",360,[[["self"]],["t"]]],[11,"borrow_mut","","",360,[[["self"]],["t"]]],[11,"try_into","","",360,[[["self"]],["result"]]],[11,"get_type_id","","",360,[[["self"]],["typeid"]]],[11,"from","","",681,[[["t"]],["t"]]],[11,"into","","",681,[[["self"]],["u"]]],[11,"try_from","","",681,[[["u"]],["result"]]],[11,"borrow","","",681,[[["self"]],["t"]]],[11,"borrow_mut","","",681,[[["self"]],["t"]]],[11,"try_into","","",681,[[["self"]],["result"]]],[11,"get_type_id","","",681,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",682,[[["t"]],["t"]]],[11,"into","","",682,[[["self"]],["u"]]],[11,"try_from","","",682,[[["u"]],["result"]]],[11,"borrow","","",682,[[["self"]],["t"]]],[11,"borrow_mut","","",682,[[["self"]],["t"]]],[11,"try_into","","",682,[[["self"]],["result"]]],[11,"get_type_id","","",682,[[["self"]],["typeid"]]],[11,"from","","",362,[[["t"]],["t"]]],[11,"into","","",362,[[["self"]],["u"]]],[11,"try_from","","",362,[[["u"]],["result"]]],[11,"borrow","","",362,[[["self"]],["t"]]],[11,"borrow_mut","","",362,[[["self"]],["t"]]],[11,"try_into","","",362,[[["self"]],["result"]]],[11,"get_type_id","","",362,[[["self"]],["typeid"]]],[11,"from","","",683,[[["t"]],["t"]]],[11,"into","","",683,[[["self"]],["u"]]],[11,"try_from","","",683,[[["u"]],["result"]]],[11,"borrow","","",683,[[["self"]],["t"]]],[11,"borrow_mut","","",683,[[["self"]],["t"]]],[11,"try_into","","",683,[[["self"]],["result"]]],[11,"get_type_id","","",683,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",684,[[["t"]],["t"]]],[11,"into","","",684,[[["self"]],["u"]]],[11,"try_from","","",684,[[["u"]],["result"]]],[11,"borrow","","",684,[[["self"]],["t"]]],[11,"borrow_mut","","",684,[[["self"]],["t"]]],[11,"try_into","","",684,[[["self"]],["result"]]],[11,"get_type_id","","",684,[[["self"]],["typeid"]]],[11,"from","","",363,[[["t"]],["t"]]],[11,"into","","",363,[[["self"]],["u"]]],[11,"try_from","","",363,[[["u"]],["result"]]],[11,"borrow","","",363,[[["self"]],["t"]]],[11,"borrow_mut","","",363,[[["self"]],["t"]]],[11,"try_into","","",363,[[["self"]],["result"]]],[11,"get_type_id","","",363,[[["self"]],["typeid"]]],[11,"from","","",685,[[["t"]],["t"]]],[11,"into","","",685,[[["self"]],["u"]]],[11,"try_from","","",685,[[["u"]],["result"]]],[11,"borrow","","",685,[[["self"]],["t"]]],[11,"borrow_mut","","",685,[[["self"]],["t"]]],[11,"try_into","","",685,[[["self"]],["result"]]],[11,"get_type_id","","",685,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",686,[[["t"]],["t"]]],[11,"into","","",686,[[["self"]],["u"]]],[11,"try_from","","",686,[[["u"]],["result"]]],[11,"borrow","","",686,[[["self"]],["t"]]],[11,"borrow_mut","","",686,[[["self"]],["t"]]],[11,"try_into","","",686,[[["self"]],["result"]]],[11,"get_type_id","","",686,[[["self"]],["typeid"]]],[11,"from","","",364,[[["t"]],["t"]]],[11,"into","","",364,[[["self"]],["u"]]],[11,"try_from","","",364,[[["u"]],["result"]]],[11,"borrow","","",364,[[["self"]],["t"]]],[11,"borrow_mut","","",364,[[["self"]],["t"]]],[11,"try_into","","",364,[[["self"]],["result"]]],[11,"get_type_id","","",364,[[["self"]],["typeid"]]],[11,"from","","",687,[[["t"]],["t"]]],[11,"into","","",687,[[["self"]],["u"]]],[11,"try_from","","",687,[[["u"]],["result"]]],[11,"borrow","","",687,[[["self"]],["t"]]],[11,"borrow_mut","","",687,[[["self"]],["t"]]],[11,"try_into","","",687,[[["self"]],["result"]]],[11,"get_type_id","","",687,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",688,[[["t"]],["t"]]],[11,"into","","",688,[[["self"]],["u"]]],[11,"try_from","","",688,[[["u"]],["result"]]],[11,"borrow","","",688,[[["self"]],["t"]]],[11,"borrow_mut","","",688,[[["self"]],["t"]]],[11,"try_into","","",688,[[["self"]],["result"]]],[11,"get_type_id","","",688,[[["self"]],["typeid"]]],[11,"from","","",366,[[["t"]],["t"]]],[11,"into","","",366,[[["self"]],["u"]]],[11,"to_owned","","",366,[[["self"]],["t"]]],[11,"clone_into","","",366,N],[11,"try_from","","",366,[[["u"]],["result"]]],[11,"borrow","","",366,[[["self"]],["t"]]],[11,"borrow_mut","","",366,[[["self"]],["t"]]],[11,"try_into","","",366,[[["self"]],["result"]]],[11,"get_type_id","","",366,[[["self"]],["typeid"]]],[11,"from","","",367,[[["t"]],["t"]]],[11,"into","","",367,[[["self"]],["u"]]],[11,"to_owned","","",367,[[["self"]],["t"]]],[11,"clone_into","","",367,N],[11,"try_from","","",367,[[["u"]],["result"]]],[11,"borrow","","",367,[[["self"]],["t"]]],[11,"borrow_mut","","",367,[[["self"]],["t"]]],[11,"try_into","","",367,[[["self"]],["result"]]],[11,"get_type_id","","",367,[[["self"]],["typeid"]]],[11,"from","","",368,[[["t"]],["t"]]],[11,"into","","",368,[[["self"]],["u"]]],[11,"try_from","","",368,[[["u"]],["result"]]],[11,"borrow","","",368,[[["self"]],["t"]]],[11,"borrow_mut","","",368,[[["self"]],["t"]]],[11,"try_into","","",368,[[["self"]],["result"]]],[11,"get_type_id","","",368,[[["self"]],["typeid"]]],[11,"from","","",369,[[["t"]],["t"]]],[11,"into","","",369,[[["self"]],["u"]]],[11,"try_from","","",369,[[["u"]],["result"]]],[11,"borrow","","",369,[[["self"]],["t"]]],[11,"borrow_mut","","",369,[[["self"]],["t"]]],[11,"try_into","","",369,[[["self"]],["result"]]],[11,"get_type_id","","",369,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",689,[[["t"]],["t"]]],[11,"into","","",689,[[["self"]],["u"]]],[11,"try_from","","",689,[[["u"]],["result"]]],[11,"borrow","","",689,[[["self"]],["t"]]],[11,"borrow_mut","","",689,[[["self"]],["t"]]],[11,"try_into","","",689,[[["self"]],["result"]]],[11,"get_type_id","","",689,[[["self"]],["typeid"]]],[11,"from","","",371,[[["t"]],["t"]]],[11,"into","","",371,[[["self"]],["u"]]],[11,"try_from","","",371,[[["u"]],["result"]]],[11,"borrow","","",371,[[["self"]],["t"]]],[11,"borrow_mut","","",371,[[["self"]],["t"]]],[11,"try_into","","",371,[[["self"]],["result"]]],[11,"get_type_id","","",371,[[["self"]],["typeid"]]],[11,"from","","",690,[[["t"]],["t"]]],[11,"into","","",690,[[["self"]],["u"]]],[11,"try_from","","",690,[[["u"]],["result"]]],[11,"borrow","","",690,[[["self"]],["t"]]],[11,"borrow_mut","","",690,[[["self"]],["t"]]],[11,"try_into","","",690,[[["self"]],["result"]]],[11,"get_type_id","","",690,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",691,[[["t"]],["t"]]],[11,"into","","",691,[[["self"]],["u"]]],[11,"try_from","","",691,[[["u"]],["result"]]],[11,"borrow","","",691,[[["self"]],["t"]]],[11,"borrow_mut","","",691,[[["self"]],["t"]]],[11,"try_into","","",691,[[["self"]],["result"]]],[11,"get_type_id","","",691,[[["self"]],["typeid"]]],[11,"from","","",372,[[["t"]],["t"]]],[11,"into","","",372,[[["self"]],["u"]]],[11,"to_owned","","",372,[[["self"]],["t"]]],[11,"clone_into","","",372,N],[11,"try_from","","",372,[[["u"]],["result"]]],[11,"borrow","","",372,[[["self"]],["t"]]],[11,"borrow_mut","","",372,[[["self"]],["t"]]],[11,"try_into","","",372,[[["self"]],["result"]]],[11,"get_type_id","","",372,[[["self"]],["typeid"]]],[11,"from","","",373,[[["t"]],["t"]]],[11,"into","","",373,[[["self"]],["u"]]],[11,"to_owned","","",373,[[["self"]],["t"]]],[11,"clone_into","","",373,N],[11,"try_from","","",373,[[["u"]],["result"]]],[11,"borrow","","",373,[[["self"]],["t"]]],[11,"borrow_mut","","",373,[[["self"]],["t"]]],[11,"try_into","","",373,[[["self"]],["result"]]],[11,"get_type_id","","",373,[[["self"]],["typeid"]]],[11,"from","","",374,[[["t"]],["t"]]],[11,"into","","",374,[[["self"]],["u"]]],[11,"try_from","","",374,[[["u"]],["result"]]],[11,"borrow","","",374,[[["self"]],["t"]]],[11,"borrow_mut","","",374,[[["self"]],["t"]]],[11,"try_into","","",374,[[["self"]],["result"]]],[11,"get_type_id","","",374,[[["self"]],["typeid"]]],[11,"from","","",375,[[["t"]],["t"]]],[11,"into","","",375,[[["self"]],["u"]]],[11,"try_from","","",375,[[["u"]],["result"]]],[11,"borrow","","",375,[[["self"]],["t"]]],[11,"borrow_mut","","",375,[[["self"]],["t"]]],[11,"try_into","","",375,[[["self"]],["result"]]],[11,"get_type_id","","",375,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",692,[[["t"]],["t"]]],[11,"into","","",692,[[["self"]],["u"]]],[11,"try_from","","",692,[[["u"]],["result"]]],[11,"borrow","","",692,[[["self"]],["t"]]],[11,"borrow_mut","","",692,[[["self"]],["t"]]],[11,"try_into","","",692,[[["self"]],["result"]]],[11,"get_type_id","","",692,[[["self"]],["typeid"]]],[11,"from","","",376,[[["t"]],["t"]]],[11,"into","","",376,[[["self"]],["u"]]],[11,"try_from","","",376,[[["u"]],["result"]]],[11,"borrow","","",376,[[["self"]],["t"]]],[11,"borrow_mut","","",376,[[["self"]],["t"]]],[11,"try_into","","",376,[[["self"]],["result"]]],[11,"get_type_id","","",376,[[["self"]],["typeid"]]],[11,"from","","",377,[[["t"]],["t"]]],[11,"into","","",377,[[["self"]],["u"]]],[11,"try_from","","",377,[[["u"]],["result"]]],[11,"borrow","","",377,[[["self"]],["t"]]],[11,"borrow_mut","","",377,[[["self"]],["t"]]],[11,"try_into","","",377,[[["self"]],["result"]]],[11,"get_type_id","","",377,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",693,[[["t"]],["t"]]],[11,"into","","",693,[[["self"]],["u"]]],[11,"try_from","","",693,[[["u"]],["result"]]],[11,"borrow","","",693,[[["self"]],["t"]]],[11,"borrow_mut","","",693,[[["self"]],["t"]]],[11,"try_into","","",693,[[["self"]],["result"]]],[11,"get_type_id","","",693,[[["self"]],["typeid"]]],[11,"from","","",379,[[["t"]],["t"]]],[11,"into","","",379,[[["self"]],["u"]]],[11,"to_owned","","",379,[[["self"]],["t"]]],[11,"clone_into","","",379,N],[11,"try_from","","",379,[[["u"]],["result"]]],[11,"borrow","","",379,[[["self"]],["t"]]],[11,"borrow_mut","","",379,[[["self"]],["t"]]],[11,"try_into","","",379,[[["self"]],["result"]]],[11,"get_type_id","","",379,[[["self"]],["typeid"]]],[11,"from","","",380,[[["t"]],["t"]]],[11,"into","","",380,[[["self"]],["u"]]],[11,"to_owned","","",380,[[["self"]],["t"]]],[11,"clone_into","","",380,N],[11,"try_from","","",380,[[["u"]],["result"]]],[11,"borrow","","",380,[[["self"]],["t"]]],[11,"borrow_mut","","",380,[[["self"]],["t"]]],[11,"try_into","","",380,[[["self"]],["result"]]],[11,"get_type_id","","",380,[[["self"]],["typeid"]]],[11,"from","","",381,[[["t"]],["t"]]],[11,"into","","",381,[[["self"]],["u"]]],[11,"try_from","","",381,[[["u"]],["result"]]],[11,"borrow","","",381,[[["self"]],["t"]]],[11,"borrow_mut","","",381,[[["self"]],["t"]]],[11,"try_into","","",381,[[["self"]],["result"]]],[11,"get_type_id","","",381,[[["self"]],["typeid"]]],[11,"from","","",382,[[["t"]],["t"]]],[11,"into","","",382,[[["self"]],["u"]]],[11,"try_from","","",382,[[["u"]],["result"]]],[11,"borrow","","",382,[[["self"]],["t"]]],[11,"borrow_mut","","",382,[[["self"]],["t"]]],[11,"try_into","","",382,[[["self"]],["result"]]],[11,"get_type_id","","",382,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",694,[[["t"]],["t"]]],[11,"into","","",694,[[["self"]],["u"]]],[11,"try_from","","",694,[[["u"]],["result"]]],[11,"borrow","","",694,[[["self"]],["t"]]],[11,"borrow_mut","","",694,[[["self"]],["t"]]],[11,"try_into","","",694,[[["self"]],["result"]]],[11,"get_type_id","","",694,[[["self"]],["typeid"]]],[11,"from","","",384,[[["t"]],["t"]]],[11,"into","","",384,[[["self"]],["u"]]],[11,"try_from","","",384,[[["u"]],["result"]]],[11,"borrow","","",384,[[["self"]],["t"]]],[11,"borrow_mut","","",384,[[["self"]],["t"]]],[11,"try_into","","",384,[[["self"]],["result"]]],[11,"get_type_id","","",384,[[["self"]],["typeid"]]],[11,"from","","",385,[[["t"]],["t"]]],[11,"into","","",385,[[["self"]],["u"]]],[11,"try_from","","",385,[[["u"]],["result"]]],[11,"borrow","","",385,[[["self"]],["t"]]],[11,"borrow_mut","","",385,[[["self"]],["t"]]],[11,"try_into","","",385,[[["self"]],["result"]]],[11,"get_type_id","","",385,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",695,[[["t"]],["t"]]],[11,"into","","",695,[[["self"]],["u"]]],[11,"try_from","","",695,[[["u"]],["result"]]],[11,"borrow","","",695,[[["self"]],["t"]]],[11,"borrow_mut","","",695,[[["self"]],["t"]]],[11,"try_into","","",695,[[["self"]],["result"]]],[11,"get_type_id","","",695,[[["self"]],["typeid"]]],[11,"from","","",386,[[["t"]],["t"]]],[11,"into","","",386,[[["self"]],["u"]]],[11,"to_owned","","",386,[[["self"]],["t"]]],[11,"clone_into","","",386,N],[11,"try_from","","",386,[[["u"]],["result"]]],[11,"borrow","","",386,[[["self"]],["t"]]],[11,"borrow_mut","","",386,[[["self"]],["t"]]],[11,"try_into","","",386,[[["self"]],["result"]]],[11,"get_type_id","","",386,[[["self"]],["typeid"]]],[11,"from","","",387,[[["t"]],["t"]]],[11,"into","","",387,[[["self"]],["u"]]],[11,"to_owned","","",387,[[["self"]],["t"]]],[11,"clone_into","","",387,N],[11,"try_from","","",387,[[["u"]],["result"]]],[11,"borrow","","",387,[[["self"]],["t"]]],[11,"borrow_mut","","",387,[[["self"]],["t"]]],[11,"try_into","","",387,[[["self"]],["result"]]],[11,"get_type_id","","",387,[[["self"]],["typeid"]]],[11,"from","","",388,[[["t"]],["t"]]],[11,"into","","",388,[[["self"]],["u"]]],[11,"try_from","","",388,[[["u"]],["result"]]],[11,"borrow","","",388,[[["self"]],["t"]]],[11,"borrow_mut","","",388,[[["self"]],["t"]]],[11,"try_into","","",388,[[["self"]],["result"]]],[11,"get_type_id","","",388,[[["self"]],["typeid"]]],[11,"from","","",389,[[["t"]],["t"]]],[11,"into","","",389,[[["self"]],["u"]]],[11,"try_from","","",389,[[["u"]],["result"]]],[11,"borrow","","",389,[[["self"]],["t"]]],[11,"borrow_mut","","",389,[[["self"]],["t"]]],[11,"try_into","","",389,[[["self"]],["result"]]],[11,"get_type_id","","",389,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",696,[[["t"]],["t"]]],[11,"into","","",696,[[["self"]],["u"]]],[11,"try_from","","",696,[[["u"]],["result"]]],[11,"borrow","","",696,[[["self"]],["t"]]],[11,"borrow_mut","","",696,[[["self"]],["t"]]],[11,"try_into","","",696,[[["self"]],["result"]]],[11,"get_type_id","","",696,[[["self"]],["typeid"]]],[11,"from","","",390,[[["t"]],["t"]]],[11,"into","","",390,[[["self"]],["u"]]],[11,"try_from","","",390,[[["u"]],["result"]]],[11,"borrow","","",390,[[["self"]],["t"]]],[11,"borrow_mut","","",390,[[["self"]],["t"]]],[11,"try_into","","",390,[[["self"]],["result"]]],[11,"get_type_id","","",390,[[["self"]],["typeid"]]],[11,"from","","",697,[[["t"]],["t"]]],[11,"into","","",697,[[["self"]],["u"]]],[11,"try_from","","",697,[[["u"]],["result"]]],[11,"borrow","","",697,[[["self"]],["t"]]],[11,"borrow_mut","","",697,[[["self"]],["t"]]],[11,"try_into","","",697,[[["self"]],["result"]]],[11,"get_type_id","","",697,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",698,[[["t"]],["t"]]],[11,"into","","",698,[[["self"]],["u"]]],[11,"try_from","","",698,[[["u"]],["result"]]],[11,"borrow","","",698,[[["self"]],["t"]]],[11,"borrow_mut","","",698,[[["self"]],["t"]]],[11,"try_into","","",698,[[["self"]],["result"]]],[11,"get_type_id","","",698,[[["self"]],["typeid"]]],[11,"from","","",392,[[["t"]],["t"]]],[11,"into","","",392,[[["self"]],["u"]]],[11,"to_owned","","",392,[[["self"]],["t"]]],[11,"clone_into","","",392,N],[11,"try_from","","",392,[[["u"]],["result"]]],[11,"borrow","","",392,[[["self"]],["t"]]],[11,"borrow_mut","","",392,[[["self"]],["t"]]],[11,"try_into","","",392,[[["self"]],["result"]]],[11,"get_type_id","","",392,[[["self"]],["typeid"]]],[11,"from","","",393,[[["t"]],["t"]]],[11,"into","","",393,[[["self"]],["u"]]],[11,"try_from","","",393,[[["u"]],["result"]]],[11,"borrow","","",393,[[["self"]],["t"]]],[11,"borrow_mut","","",393,[[["self"]],["t"]]],[11,"try_into","","",393,[[["self"]],["result"]]],[11,"get_type_id","","",393,[[["self"]],["typeid"]]],[11,"from","","",394,[[["t"]],["t"]]],[11,"into","","",394,[[["self"]],["u"]]],[11,"try_from","","",394,[[["u"]],["result"]]],[11,"borrow","","",394,[[["self"]],["t"]]],[11,"borrow_mut","","",394,[[["self"]],["t"]]],[11,"try_into","","",394,[[["self"]],["result"]]],[11,"get_type_id","","",394,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",699,[[["t"]],["t"]]],[11,"into","","",699,[[["self"]],["u"]]],[11,"try_from","","",699,[[["u"]],["result"]]],[11,"borrow","","",699,[[["self"]],["t"]]],[11,"borrow_mut","","",699,[[["self"]],["t"]]],[11,"try_into","","",699,[[["self"]],["result"]]],[11,"get_type_id","","",699,[[["self"]],["typeid"]]],[11,"from","","",396,[[["t"]],["t"]]],[11,"into","","",396,[[["self"]],["u"]]],[11,"try_from","","",396,[[["u"]],["result"]]],[11,"borrow","","",396,[[["self"]],["t"]]],[11,"borrow_mut","","",396,[[["self"]],["t"]]],[11,"try_into","","",396,[[["self"]],["result"]]],[11,"get_type_id","","",396,[[["self"]],["typeid"]]],[11,"from","","",700,[[["t"]],["t"]]],[11,"into","","",700,[[["self"]],["u"]]],[11,"try_from","","",700,[[["u"]],["result"]]],[11,"borrow","","",700,[[["self"]],["t"]]],[11,"borrow_mut","","",700,[[["self"]],["t"]]],[11,"try_into","","",700,[[["self"]],["result"]]],[11,"get_type_id","","",700,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",701,[[["t"]],["t"]]],[11,"into","","",701,[[["self"]],["u"]]],[11,"try_from","","",701,[[["u"]],["result"]]],[11,"borrow","","",701,[[["self"]],["t"]]],[11,"borrow_mut","","",701,[[["self"]],["t"]]],[11,"try_into","","",701,[[["self"]],["result"]]],[11,"get_type_id","","",701,[[["self"]],["typeid"]]],[11,"from","","",397,[[["t"]],["t"]]],[11,"into","","",397,[[["self"]],["u"]]],[11,"to_owned","","",397,[[["self"]],["t"]]],[11,"clone_into","","",397,N],[11,"try_from","","",397,[[["u"]],["result"]]],[11,"borrow","","",397,[[["self"]],["t"]]],[11,"borrow_mut","","",397,[[["self"]],["t"]]],[11,"try_into","","",397,[[["self"]],["result"]]],[11,"get_type_id","","",397,[[["self"]],["typeid"]]],[11,"from","","",398,[[["t"]],["t"]]],[11,"into","","",398,[[["self"]],["u"]]],[11,"try_from","","",398,[[["u"]],["result"]]],[11,"borrow","","",398,[[["self"]],["t"]]],[11,"borrow_mut","","",398,[[["self"]],["t"]]],[11,"try_into","","",398,[[["self"]],["result"]]],[11,"get_type_id","","",398,[[["self"]],["typeid"]]],[11,"from","","",399,[[["t"]],["t"]]],[11,"into","","",399,[[["self"]],["u"]]],[11,"try_from","","",399,[[["u"]],["result"]]],[11,"borrow","","",399,[[["self"]],["t"]]],[11,"borrow_mut","","",399,[[["self"]],["t"]]],[11,"try_into","","",399,[[["self"]],["result"]]],[11,"get_type_id","","",399,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",702,[[["t"]],["t"]]],[11,"into","","",702,[[["self"]],["u"]]],[11,"try_from","","",702,[[["u"]],["result"]]],[11,"borrow","","",702,[[["self"]],["t"]]],[11,"borrow_mut","","",702,[[["self"]],["t"]]],[11,"try_into","","",702,[[["self"]],["result"]]],[11,"get_type_id","","",702,[[["self"]],["typeid"]]],[11,"from","","",400,[[["t"]],["t"]]],[11,"into","","",400,[[["self"]],["u"]]],[11,"to_owned","","",400,[[["self"]],["t"]]],[11,"clone_into","","",400,N],[11,"try_from","","",400,[[["u"]],["result"]]],[11,"borrow","","",400,[[["self"]],["t"]]],[11,"borrow_mut","","",400,[[["self"]],["t"]]],[11,"try_into","","",400,[[["self"]],["result"]]],[11,"get_type_id","","",400,[[["self"]],["typeid"]]],[11,"from","","",401,[[["t"]],["t"]]],[11,"into","","",401,[[["self"]],["u"]]],[11,"try_from","","",401,[[["u"]],["result"]]],[11,"borrow","","",401,[[["self"]],["t"]]],[11,"borrow_mut","","",401,[[["self"]],["t"]]],[11,"try_into","","",401,[[["self"]],["result"]]],[11,"get_type_id","","",401,[[["self"]],["typeid"]]],[11,"from","","",703,[[["t"]],["t"]]],[11,"into","","",703,[[["self"]],["u"]]],[11,"try_from","","",703,[[["u"]],["result"]]],[11,"borrow","","",703,[[["self"]],["t"]]],[11,"borrow_mut","","",703,[[["self"]],["t"]]],[11,"try_into","","",703,[[["self"]],["result"]]],[11,"get_type_id","","",703,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",704,[[["t"]],["t"]]],[11,"into","","",704,[[["self"]],["u"]]],[11,"try_from","","",704,[[["u"]],["result"]]],[11,"borrow","","",704,[[["self"]],["t"]]],[11,"borrow_mut","","",704,[[["self"]],["t"]]],[11,"try_into","","",704,[[["self"]],["result"]]],[11,"get_type_id","","",704,[[["self"]],["typeid"]]],[11,"from","","",403,[[["t"]],["t"]]],[11,"into","","",403,[[["self"]],["u"]]],[11,"try_from","","",403,[[["u"]],["result"]]],[11,"borrow","","",403,[[["self"]],["t"]]],[11,"borrow_mut","","",403,[[["self"]],["t"]]],[11,"try_into","","",403,[[["self"]],["result"]]],[11,"get_type_id","","",403,[[["self"]],["typeid"]]],[11,"from","","",705,[[["t"]],["t"]]],[11,"into","","",705,[[["self"]],["u"]]],[11,"try_from","","",705,[[["u"]],["result"]]],[11,"borrow","","",705,[[["self"]],["t"]]],[11,"borrow_mut","","",705,[[["self"]],["t"]]],[11,"try_into","","",705,[[["self"]],["result"]]],[11,"get_type_id","","",705,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",706,[[["t"]],["t"]]],[11,"into","","",706,[[["self"]],["u"]]],[11,"try_from","","",706,[[["u"]],["result"]]],[11,"borrow","","",706,[[["self"]],["t"]]],[11,"borrow_mut","","",706,[[["self"]],["t"]]],[11,"try_into","","",706,[[["self"]],["result"]]],[11,"get_type_id","","",706,[[["self"]],["typeid"]]],[11,"from","","",405,[[["t"]],["t"]]],[11,"into","","",405,[[["self"]],["u"]]],[11,"to_owned","","",405,[[["self"]],["t"]]],[11,"clone_into","","",405,N],[11,"try_from","","",405,[[["u"]],["result"]]],[11,"borrow","","",405,[[["self"]],["t"]]],[11,"borrow_mut","","",405,[[["self"]],["t"]]],[11,"try_into","","",405,[[["self"]],["result"]]],[11,"get_type_id","","",405,[[["self"]],["typeid"]]],[11,"from","","",406,[[["t"]],["t"]]],[11,"into","","",406,[[["self"]],["u"]]],[11,"try_from","","",406,[[["u"]],["result"]]],[11,"borrow","","",406,[[["self"]],["t"]]],[11,"borrow_mut","","",406,[[["self"]],["t"]]],[11,"try_into","","",406,[[["self"]],["result"]]],[11,"get_type_id","","",406,[[["self"]],["typeid"]]],[11,"from","","",707,[[["t"]],["t"]]],[11,"into","","",707,[[["self"]],["u"]]],[11,"try_from","","",707,[[["u"]],["result"]]],[11,"borrow","","",707,[[["self"]],["t"]]],[11,"borrow_mut","","",707,[[["self"]],["t"]]],[11,"try_into","","",707,[[["self"]],["result"]]],[11,"get_type_id","","",707,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",708,[[["t"]],["t"]]],[11,"into","","",708,[[["self"]],["u"]]],[11,"try_from","","",708,[[["u"]],["result"]]],[11,"borrow","","",708,[[["self"]],["t"]]],[11,"borrow_mut","","",708,[[["self"]],["t"]]],[11,"try_into","","",708,[[["self"]],["result"]]],[11,"get_type_id","","",708,[[["self"]],["typeid"]]],[11,"from","","",407,[[["t"]],["t"]]],[11,"into","","",407,[[["self"]],["u"]]],[11,"try_from","","",407,[[["u"]],["result"]]],[11,"borrow","","",407,[[["self"]],["t"]]],[11,"borrow_mut","","",407,[[["self"]],["t"]]],[11,"try_into","","",407,[[["self"]],["result"]]],[11,"get_type_id","","",407,[[["self"]],["typeid"]]],[11,"from","","",709,[[["t"]],["t"]]],[11,"into","","",709,[[["self"]],["u"]]],[11,"try_from","","",709,[[["u"]],["result"]]],[11,"borrow","","",709,[[["self"]],["t"]]],[11,"borrow_mut","","",709,[[["self"]],["t"]]],[11,"try_into","","",709,[[["self"]],["result"]]],[11,"get_type_id","","",709,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",710,[[["t"]],["t"]]],[11,"into","","",710,[[["self"]],["u"]]],[11,"try_from","","",710,[[["u"]],["result"]]],[11,"borrow","","",710,[[["self"]],["t"]]],[11,"borrow_mut","","",710,[[["self"]],["t"]]],[11,"try_into","","",710,[[["self"]],["result"]]],[11,"get_type_id","","",710,[[["self"]],["typeid"]]],[11,"from","","",408,[[["t"]],["t"]]],[11,"into","","",408,[[["self"]],["u"]]],[11,"to_owned","","",408,[[["self"]],["t"]]],[11,"clone_into","","",408,N],[11,"try_from","","",408,[[["u"]],["result"]]],[11,"borrow","","",408,[[["self"]],["t"]]],[11,"borrow_mut","","",408,[[["self"]],["t"]]],[11,"try_into","","",408,[[["self"]],["result"]]],[11,"get_type_id","","",408,[[["self"]],["typeid"]]],[11,"from","","",409,[[["t"]],["t"]]],[11,"into","","",409,[[["self"]],["u"]]],[11,"to_owned","","",409,[[["self"]],["t"]]],[11,"clone_into","","",409,N],[11,"try_from","","",409,[[["u"]],["result"]]],[11,"borrow","","",409,[[["self"]],["t"]]],[11,"borrow_mut","","",409,[[["self"]],["t"]]],[11,"try_into","","",409,[[["self"]],["result"]]],[11,"get_type_id","","",409,[[["self"]],["typeid"]]],[11,"from","","",410,[[["t"]],["t"]]],[11,"into","","",410,[[["self"]],["u"]]],[11,"try_from","","",410,[[["u"]],["result"]]],[11,"borrow","","",410,[[["self"]],["t"]]],[11,"borrow_mut","","",410,[[["self"]],["t"]]],[11,"try_into","","",410,[[["self"]],["result"]]],[11,"get_type_id","","",410,[[["self"]],["typeid"]]],[11,"from","","",711,[[["t"]],["t"]]],[11,"into","","",711,[[["self"]],["u"]]],[11,"try_from","","",711,[[["u"]],["result"]]],[11,"borrow","","",711,[[["self"]],["t"]]],[11,"borrow_mut","","",711,[[["self"]],["t"]]],[11,"try_into","","",711,[[["self"]],["result"]]],[11,"get_type_id","","",711,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["t"]],["t"]]],[11,"into","","",422,[[["self"]],["u"]]],[11,"to_owned","","",422,[[["self"]],["t"]]],[11,"clone_into","","",422,N],[11,"try_from","","",422,[[["u"]],["result"]]],[11,"borrow","","",422,[[["self"]],["t"]]],[11,"borrow_mut","","",422,[[["self"]],["t"]]],[11,"try_into","","",422,[[["self"]],["result"]]],[11,"get_type_id","","",422,[[["self"]],["typeid"]]],[11,"from","","",712,[[["t"]],["t"]]],[11,"into","","",712,[[["self"]],["u"]]],[11,"try_from","","",712,[[["u"]],["result"]]],[11,"borrow","","",712,[[["self"]],["t"]]],[11,"borrow_mut","","",712,[[["self"]],["t"]]],[11,"try_into","","",712,[[["self"]],["result"]]],[11,"get_type_id","","",712,[[["self"]],["typeid"]]],[11,"from","","",412,[[["t"]],["t"]]],[11,"into","","",412,[[["self"]],["u"]]],[11,"to_owned","","",412,[[["self"]],["t"]]],[11,"clone_into","","",412,N],[11,"try_from","","",412,[[["u"]],["result"]]],[11,"borrow","","",412,[[["self"]],["t"]]],[11,"borrow_mut","","",412,[[["self"]],["t"]]],[11,"try_into","","",412,[[["self"]],["result"]]],[11,"get_type_id","","",412,[[["self"]],["typeid"]]],[11,"from","","",413,[[["t"]],["t"]]],[11,"into","","",413,[[["self"]],["u"]]],[11,"try_from","","",413,[[["u"]],["result"]]],[11,"borrow","","",413,[[["self"]],["t"]]],[11,"borrow_mut","","",413,[[["self"]],["t"]]],[11,"try_into","","",413,[[["self"]],["result"]]],[11,"get_type_id","","",413,[[["self"]],["typeid"]]],[11,"from","","",414,[[["t"]],["t"]]],[11,"into","","",414,[[["self"]],["u"]]],[11,"try_from","","",414,[[["u"]],["result"]]],[11,"borrow","","",414,[[["self"]],["t"]]],[11,"borrow_mut","","",414,[[["self"]],["t"]]],[11,"try_into","","",414,[[["self"]],["result"]]],[11,"get_type_id","","",414,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",713,[[["t"]],["t"]]],[11,"into","","",713,[[["self"]],["u"]]],[11,"try_from","","",713,[[["u"]],["result"]]],[11,"borrow","","",713,[[["self"]],["t"]]],[11,"borrow_mut","","",713,[[["self"]],["t"]]],[11,"try_into","","",713,[[["self"]],["result"]]],[11,"get_type_id","","",713,[[["self"]],["typeid"]]],[11,"from","","",416,[[["t"]],["t"]]],[11,"into","","",416,[[["self"]],["u"]]],[11,"to_owned","","",416,[[["self"]],["t"]]],[11,"clone_into","","",416,N],[11,"try_from","","",416,[[["u"]],["result"]]],[11,"borrow","","",416,[[["self"]],["t"]]],[11,"borrow_mut","","",416,[[["self"]],["t"]]],[11,"try_into","","",416,[[["self"]],["result"]]],[11,"get_type_id","","",416,[[["self"]],["typeid"]]],[11,"from","","",417,[[["t"]],["t"]]],[11,"into","","",417,[[["self"]],["u"]]],[11,"to_owned","","",417,[[["self"]],["t"]]],[11,"clone_into","","",417,N],[11,"try_from","","",417,[[["u"]],["result"]]],[11,"borrow","","",417,[[["self"]],["t"]]],[11,"borrow_mut","","",417,[[["self"]],["t"]]],[11,"try_into","","",417,[[["self"]],["result"]]],[11,"get_type_id","","",417,[[["self"]],["typeid"]]],[11,"from","","",418,[[["t"]],["t"]]],[11,"into","","",418,[[["self"]],["u"]]],[11,"try_from","","",418,[[["u"]],["result"]]],[11,"borrow","","",418,[[["self"]],["t"]]],[11,"borrow_mut","","",418,[[["self"]],["t"]]],[11,"try_into","","",418,[[["self"]],["result"]]],[11,"get_type_id","","",418,[[["self"]],["typeid"]]],[11,"from","","",714,[[["t"]],["t"]]],[11,"into","","",714,[[["self"]],["u"]]],[11,"try_from","","",714,[[["u"]],["result"]]],[11,"borrow","","",714,[[["self"]],["t"]]],[11,"borrow_mut","","",714,[[["self"]],["t"]]],[11,"try_into","","",714,[[["self"]],["result"]]],[11,"get_type_id","","",714,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["t"]],["t"]]],[11,"into","","",423,[[["self"]],["u"]]],[11,"to_owned","","",423,[[["self"]],["t"]]],[11,"clone_into","","",423,N],[11,"try_from","","",423,[[["u"]],["result"]]],[11,"borrow","","",423,[[["self"]],["t"]]],[11,"borrow_mut","","",423,[[["self"]],["t"]]],[11,"try_into","","",423,[[["self"]],["result"]]],[11,"get_type_id","","",423,[[["self"]],["typeid"]]],[11,"from","","",715,[[["t"]],["t"]]],[11,"into","","",715,[[["self"]],["u"]]],[11,"try_from","","",715,[[["u"]],["result"]]],[11,"borrow","","",715,[[["self"]],["t"]]],[11,"borrow_mut","","",715,[[["self"]],["t"]]],[11,"try_into","","",715,[[["self"]],["result"]]],[11,"get_type_id","","",715,[[["self"]],["typeid"]]],[11,"from","","",419,[[["t"]],["t"]]],[11,"into","","",419,[[["self"]],["u"]]],[11,"to_owned","","",419,[[["self"]],["t"]]],[11,"clone_into","","",419,N],[11,"try_from","","",419,[[["u"]],["result"]]],[11,"borrow","","",419,[[["self"]],["t"]]],[11,"borrow_mut","","",419,[[["self"]],["t"]]],[11,"try_into","","",419,[[["self"]],["result"]]],[11,"get_type_id","","",419,[[["self"]],["typeid"]]],[11,"from","","",420,[[["t"]],["t"]]],[11,"into","","",420,[[["self"]],["u"]]],[11,"try_from","","",420,[[["u"]],["result"]]],[11,"borrow","","",420,[[["self"]],["t"]]],[11,"borrow_mut","","",420,[[["self"]],["t"]]],[11,"try_into","","",420,[[["self"]],["result"]]],[11,"get_type_id","","",420,[[["self"]],["typeid"]]],[11,"from","","",421,[[["t"]],["t"]]],[11,"into","","",421,[[["self"]],["u"]]],[11,"try_from","","",421,[[["u"]],["result"]]],[11,"borrow","","",421,[[["self"]],["t"]]],[11,"borrow_mut","","",421,[[["self"]],["t"]]],[11,"try_into","","",421,[[["self"]],["result"]]],[11,"get_type_id","","",421,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",716,[[["t"]],["t"]]],[11,"into","","",716,[[["self"]],["u"]]],[11,"try_from","","",716,[[["u"]],["result"]]],[11,"borrow","","",716,[[["self"]],["t"]]],[11,"borrow_mut","","",716,[[["self"]],["t"]]],[11,"try_into","","",716,[[["self"]],["result"]]],[11,"get_type_id","","",716,[[["self"]],["typeid"]]],[11,"from","","",424,[[["t"]],["t"]]],[11,"into","","",424,[[["self"]],["u"]]],[11,"try_from","","",424,[[["u"]],["result"]]],[11,"borrow","","",424,[[["self"]],["t"]]],[11,"borrow_mut","","",424,[[["self"]],["t"]]],[11,"try_into","","",424,[[["self"]],["result"]]],[11,"get_type_id","","",424,[[["self"]],["typeid"]]],[11,"from","","",717,[[["t"]],["t"]]],[11,"into","","",717,[[["self"]],["u"]]],[11,"try_from","","",717,[[["u"]],["result"]]],[11,"borrow","","",717,[[["self"]],["t"]]],[11,"borrow_mut","","",717,[[["self"]],["t"]]],[11,"try_into","","",717,[[["self"]],["result"]]],[11,"get_type_id","","",717,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["t"]],["t"]]],[11,"into","","",434,[[["self"]],["u"]]],[11,"to_owned","","",434,[[["self"]],["t"]]],[11,"clone_into","","",434,N],[11,"try_from","","",434,[[["u"]],["result"]]],[11,"borrow","","",434,[[["self"]],["t"]]],[11,"borrow_mut","","",434,[[["self"]],["t"]]],[11,"try_into","","",434,[[["self"]],["result"]]],[11,"get_type_id","","",434,[[["self"]],["typeid"]]],[11,"from","","",718,[[["t"]],["t"]]],[11,"into","","",718,[[["self"]],["u"]]],[11,"try_from","","",718,[[["u"]],["result"]]],[11,"borrow","","",718,[[["self"]],["t"]]],[11,"borrow_mut","","",718,[[["self"]],["t"]]],[11,"try_into","","",718,[[["self"]],["result"]]],[11,"get_type_id","","",718,[[["self"]],["typeid"]]],[11,"from","","",426,[[["t"]],["t"]]],[11,"into","","",426,[[["self"]],["u"]]],[11,"to_owned","","",426,[[["self"]],["t"]]],[11,"clone_into","","",426,N],[11,"try_from","","",426,[[["u"]],["result"]]],[11,"borrow","","",426,[[["self"]],["t"]]],[11,"borrow_mut","","",426,[[["self"]],["t"]]],[11,"try_into","","",426,[[["self"]],["result"]]],[11,"get_type_id","","",426,[[["self"]],["typeid"]]],[11,"from","","",427,[[["t"]],["t"]]],[11,"into","","",427,[[["self"]],["u"]]],[11,"try_from","","",427,[[["u"]],["result"]]],[11,"borrow","","",427,[[["self"]],["t"]]],[11,"borrow_mut","","",427,[[["self"]],["t"]]],[11,"try_into","","",427,[[["self"]],["result"]]],[11,"get_type_id","","",427,[[["self"]],["typeid"]]],[11,"from","","",428,[[["t"]],["t"]]],[11,"into","","",428,[[["self"]],["u"]]],[11,"try_from","","",428,[[["u"]],["result"]]],[11,"borrow","","",428,[[["self"]],["t"]]],[11,"borrow_mut","","",428,[[["self"]],["t"]]],[11,"try_into","","",428,[[["self"]],["result"]]],[11,"get_type_id","","",428,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",719,[[["t"]],["t"]]],[11,"into","","",719,[[["self"]],["u"]]],[11,"try_from","","",719,[[["u"]],["result"]]],[11,"borrow","","",719,[[["self"]],["t"]]],[11,"borrow_mut","","",719,[[["self"]],["t"]]],[11,"try_into","","",719,[[["self"]],["result"]]],[11,"get_type_id","","",719,[[["self"]],["typeid"]]],[11,"from","","",430,[[["t"]],["t"]]],[11,"into","","",430,[[["self"]],["u"]]],[11,"try_from","","",430,[[["u"]],["result"]]],[11,"borrow","","",430,[[["self"]],["t"]]],[11,"borrow_mut","","",430,[[["self"]],["t"]]],[11,"try_into","","",430,[[["self"]],["result"]]],[11,"get_type_id","","",430,[[["self"]],["typeid"]]],[11,"from","","",720,[[["t"]],["t"]]],[11,"into","","",720,[[["self"]],["u"]]],[11,"try_from","","",720,[[["u"]],["result"]]],[11,"borrow","","",720,[[["self"]],["t"]]],[11,"borrow_mut","","",720,[[["self"]],["t"]]],[11,"try_into","","",720,[[["self"]],["result"]]],[11,"get_type_id","","",720,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["t"]],["t"]]],[11,"into","","",435,[[["self"]],["u"]]],[11,"to_owned","","",435,[[["self"]],["t"]]],[11,"clone_into","","",435,N],[11,"try_from","","",435,[[["u"]],["result"]]],[11,"borrow","","",435,[[["self"]],["t"]]],[11,"borrow_mut","","",435,[[["self"]],["t"]]],[11,"try_into","","",435,[[["self"]],["result"]]],[11,"get_type_id","","",435,[[["self"]],["typeid"]]],[11,"from","","",721,[[["t"]],["t"]]],[11,"into","","",721,[[["self"]],["u"]]],[11,"try_from","","",721,[[["u"]],["result"]]],[11,"borrow","","",721,[[["self"]],["t"]]],[11,"borrow_mut","","",721,[[["self"]],["t"]]],[11,"try_into","","",721,[[["self"]],["result"]]],[11,"get_type_id","","",721,[[["self"]],["typeid"]]],[11,"from","","",431,[[["t"]],["t"]]],[11,"into","","",431,[[["self"]],["u"]]],[11,"to_owned","","",431,[[["self"]],["t"]]],[11,"clone_into","","",431,N],[11,"try_from","","",431,[[["u"]],["result"]]],[11,"borrow","","",431,[[["self"]],["t"]]],[11,"borrow_mut","","",431,[[["self"]],["t"]]],[11,"try_into","","",431,[[["self"]],["result"]]],[11,"get_type_id","","",431,[[["self"]],["typeid"]]],[11,"from","","",432,[[["t"]],["t"]]],[11,"into","","",432,[[["self"]],["u"]]],[11,"try_from","","",432,[[["u"]],["result"]]],[11,"borrow","","",432,[[["self"]],["t"]]],[11,"borrow_mut","","",432,[[["self"]],["t"]]],[11,"try_into","","",432,[[["self"]],["result"]]],[11,"get_type_id","","",432,[[["self"]],["typeid"]]],[11,"from","","",433,[[["t"]],["t"]]],[11,"into","","",433,[[["self"]],["u"]]],[11,"try_from","","",433,[[["u"]],["result"]]],[11,"borrow","","",433,[[["self"]],["t"]]],[11,"borrow_mut","","",433,[[["self"]],["t"]]],[11,"try_into","","",433,[[["self"]],["result"]]],[11,"get_type_id","","",433,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",722,[[["t"]],["t"]]],[11,"into","","",722,[[["self"]],["u"]]],[11,"try_from","","",722,[[["u"]],["result"]]],[11,"borrow","","",722,[[["self"]],["t"]]],[11,"borrow_mut","","",722,[[["self"]],["t"]]],[11,"try_into","","",722,[[["self"]],["result"]]],[11,"get_type_id","","",722,[[["self"]],["typeid"]]],[11,"from","","",436,[[["t"]],["t"]]],[11,"into","","",436,[[["self"]],["u"]]],[11,"to_owned","","",436,[[["self"]],["t"]]],[11,"clone_into","","",436,N],[11,"try_from","","",436,[[["u"]],["result"]]],[11,"borrow","","",436,[[["self"]],["t"]]],[11,"borrow_mut","","",436,[[["self"]],["t"]]],[11,"try_into","","",436,[[["self"]],["result"]]],[11,"get_type_id","","",436,[[["self"]],["typeid"]]],[11,"from","","",437,[[["t"]],["t"]]],[11,"into","","",437,[[["self"]],["u"]]],[11,"try_from","","",437,[[["u"]],["result"]]],[11,"borrow","","",437,[[["self"]],["t"]]],[11,"borrow_mut","","",437,[[["self"]],["t"]]],[11,"try_into","","",437,[[["self"]],["result"]]],[11,"get_type_id","","",437,[[["self"]],["typeid"]]],[11,"from","","",438,[[["t"]],["t"]]],[11,"into","","",438,[[["self"]],["u"]]],[11,"try_from","","",438,[[["u"]],["result"]]],[11,"borrow","","",438,[[["self"]],["t"]]],[11,"borrow_mut","","",438,[[["self"]],["t"]]],[11,"try_into","","",438,[[["self"]],["result"]]],[11,"get_type_id","","",438,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",723,[[["t"]],["t"]]],[11,"into","","",723,[[["self"]],["u"]]],[11,"try_from","","",723,[[["u"]],["result"]]],[11,"borrow","","",723,[[["self"]],["t"]]],[11,"borrow_mut","","",723,[[["self"]],["t"]]],[11,"try_into","","",723,[[["self"]],["result"]]],[11,"get_type_id","","",723,[[["self"]],["typeid"]]],[11,"from","","",440,[[["t"]],["t"]]],[11,"into","","",440,[[["self"]],["u"]]],[11,"to_owned","","",440,[[["self"]],["t"]]],[11,"clone_into","","",440,N],[11,"try_from","","",440,[[["u"]],["result"]]],[11,"borrow","","",440,[[["self"]],["t"]]],[11,"borrow_mut","","",440,[[["self"]],["t"]]],[11,"try_into","","",440,[[["self"]],["result"]]],[11,"get_type_id","","",440,[[["self"]],["typeid"]]],[11,"from","","",724,[[["t"]],["t"]]],[11,"into","","",724,[[["self"]],["u"]]],[11,"try_from","","",724,[[["u"]],["result"]]],[11,"borrow","","",724,[[["self"]],["t"]]],[11,"borrow_mut","","",724,[[["self"]],["t"]]],[11,"try_into","","",724,[[["self"]],["result"]]],[11,"get_type_id","","",724,[[["self"]],["typeid"]]],[11,"from","","",441,[[["t"]],["t"]]],[11,"into","","",441,[[["self"]],["u"]]],[11,"try_from","","",441,[[["u"]],["result"]]],[11,"borrow","","",441,[[["self"]],["t"]]],[11,"borrow_mut","","",441,[[["self"]],["t"]]],[11,"try_into","","",441,[[["self"]],["result"]]],[11,"get_type_id","","",441,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",725,[[["t"]],["t"]]],[11,"into","","",725,[[["self"]],["u"]]],[11,"try_from","","",725,[[["u"]],["result"]]],[11,"borrow","","",725,[[["self"]],["t"]]],[11,"borrow_mut","","",725,[[["self"]],["t"]]],[11,"try_into","","",725,[[["self"]],["result"]]],[11,"get_type_id","","",725,[[["self"]],["typeid"]]],[11,"from","","",442,[[["t"]],["t"]]],[11,"into","","",442,[[["self"]],["u"]]],[11,"to_owned","","",442,[[["self"]],["t"]]],[11,"clone_into","","",442,N],[11,"try_from","","",442,[[["u"]],["result"]]],[11,"borrow","","",442,[[["self"]],["t"]]],[11,"borrow_mut","","",442,[[["self"]],["t"]]],[11,"try_into","","",442,[[["self"]],["result"]]],[11,"get_type_id","","",442,[[["self"]],["typeid"]]],[11,"from","","",443,[[["t"]],["t"]]],[11,"into","","",443,[[["self"]],["u"]]],[11,"try_from","","",443,[[["u"]],["result"]]],[11,"borrow","","",443,[[["self"]],["t"]]],[11,"borrow_mut","","",443,[[["self"]],["t"]]],[11,"try_into","","",443,[[["self"]],["result"]]],[11,"get_type_id","","",443,[[["self"]],["typeid"]]],[11,"from","","",444,[[["t"]],["t"]]],[11,"into","","",444,[[["self"]],["u"]]],[11,"try_from","","",444,[[["u"]],["result"]]],[11,"borrow","","",444,[[["self"]],["t"]]],[11,"borrow_mut","","",444,[[["self"]],["t"]]],[11,"try_into","","",444,[[["self"]],["result"]]],[11,"get_type_id","","",444,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",726,[[["t"]],["t"]]],[11,"into","","",726,[[["self"]],["u"]]],[11,"try_from","","",726,[[["u"]],["result"]]],[11,"borrow","","",726,[[["self"]],["t"]]],[11,"borrow_mut","","",726,[[["self"]],["t"]]],[11,"try_into","","",726,[[["self"]],["result"]]],[11,"get_type_id","","",726,[[["self"]],["typeid"]]],[11,"from","","",445,[[["t"]],["t"]]],[11,"into","","",445,[[["self"]],["u"]]],[11,"to_owned","","",445,[[["self"]],["t"]]],[11,"clone_into","","",445,N],[11,"try_from","","",445,[[["u"]],["result"]]],[11,"borrow","","",445,[[["self"]],["t"]]],[11,"borrow_mut","","",445,[[["self"]],["t"]]],[11,"try_into","","",445,[[["self"]],["result"]]],[11,"get_type_id","","",445,[[["self"]],["typeid"]]],[11,"from","","",727,[[["t"]],["t"]]],[11,"into","","",727,[[["self"]],["u"]]],[11,"try_from","","",727,[[["u"]],["result"]]],[11,"borrow","","",727,[[["self"]],["t"]]],[11,"borrow_mut","","",727,[[["self"]],["t"]]],[11,"try_into","","",727,[[["self"]],["result"]]],[11,"get_type_id","","",727,[[["self"]],["typeid"]]],[11,"from","","",446,[[["t"]],["t"]]],[11,"into","","",446,[[["self"]],["u"]]],[11,"try_from","","",446,[[["u"]],["result"]]],[11,"borrow","","",446,[[["self"]],["t"]]],[11,"borrow_mut","","",446,[[["self"]],["t"]]],[11,"try_into","","",446,[[["self"]],["result"]]],[11,"get_type_id","","",446,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",728,[[["t"]],["t"]]],[11,"into","","",728,[[["self"]],["u"]]],[11,"try_from","","",728,[[["u"]],["result"]]],[11,"borrow","","",728,[[["self"]],["t"]]],[11,"borrow_mut","","",728,[[["self"]],["t"]]],[11,"try_into","","",728,[[["self"]],["result"]]],[11,"get_type_id","","",728,[[["self"]],["typeid"]]],[11,"from","","",447,[[["t"]],["t"]]],[11,"into","","",447,[[["self"]],["u"]]],[11,"to_owned","","",447,[[["self"]],["t"]]],[11,"clone_into","","",447,N],[11,"try_from","","",447,[[["u"]],["result"]]],[11,"borrow","","",447,[[["self"]],["t"]]],[11,"borrow_mut","","",447,[[["self"]],["t"]]],[11,"try_into","","",447,[[["self"]],["result"]]],[11,"get_type_id","","",447,[[["self"]],["typeid"]]],[11,"from","","",448,[[["t"]],["t"]]],[11,"into","","",448,[[["self"]],["u"]]],[11,"try_from","","",448,[[["u"]],["result"]]],[11,"borrow","","",448,[[["self"]],["t"]]],[11,"borrow_mut","","",448,[[["self"]],["t"]]],[11,"try_into","","",448,[[["self"]],["result"]]],[11,"get_type_id","","",448,[[["self"]],["typeid"]]],[11,"from","","",449,[[["t"]],["t"]]],[11,"into","","",449,[[["self"]],["u"]]],[11,"try_from","","",449,[[["u"]],["result"]]],[11,"borrow","","",449,[[["self"]],["t"]]],[11,"borrow_mut","","",449,[[["self"]],["t"]]],[11,"try_into","","",449,[[["self"]],["result"]]],[11,"get_type_id","","",449,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["t"]],["t"]]],[11,"into","","",729,[[["self"]],["u"]]],[11,"to_owned","","",729,[[["self"]],["t"]]],[11,"clone_into","","",729,N],[11,"try_from","","",729,[[["u"]],["result"]]],[11,"borrow","","",729,[[["self"]],["t"]]],[11,"borrow_mut","","",729,[[["self"]],["t"]]],[11,"try_into","","",729,[[["self"]],["result"]]],[11,"get_type_id","","",729,[[["self"]],["typeid"]]],[11,"from","","",730,[[["t"]],["t"]]],[11,"into","","",730,[[["self"]],["u"]]],[11,"try_from","","",730,[[["u"]],["result"]]],[11,"borrow","","",730,[[["self"]],["t"]]],[11,"borrow_mut","","",730,[[["self"]],["t"]]],[11,"try_into","","",730,[[["self"]],["result"]]],[11,"get_type_id","","",730,[[["self"]],["typeid"]]],[11,"from","","",451,[[["t"]],["t"]]],[11,"into","","",451,[[["self"]],["u"]]],[11,"to_owned","","",451,[[["self"]],["t"]]],[11,"clone_into","","",451,N],[11,"try_from","","",451,[[["u"]],["result"]]],[11,"borrow","","",451,[[["self"]],["t"]]],[11,"borrow_mut","","",451,[[["self"]],["t"]]],[11,"try_into","","",451,[[["self"]],["result"]]],[11,"get_type_id","","",451,[[["self"]],["typeid"]]],[11,"from","","",452,[[["t"]],["t"]]],[11,"into","","",452,[[["self"]],["u"]]],[11,"to_owned","","",452,[[["self"]],["t"]]],[11,"clone_into","","",452,N],[11,"try_from","","",452,[[["u"]],["result"]]],[11,"borrow","","",452,[[["self"]],["t"]]],[11,"borrow_mut","","",452,[[["self"]],["t"]]],[11,"try_into","","",452,[[["self"]],["result"]]],[11,"get_type_id","","",452,[[["self"]],["typeid"]]],[11,"from","","",453,[[["t"]],["t"]]],[11,"into","","",453,[[["self"]],["u"]]],[11,"to_owned","","",453,[[["self"]],["t"]]],[11,"clone_into","","",453,N],[11,"try_from","","",453,[[["u"]],["result"]]],[11,"borrow","","",453,[[["self"]],["t"]]],[11,"borrow_mut","","",453,[[["self"]],["t"]]],[11,"try_into","","",453,[[["self"]],["result"]]],[11,"get_type_id","","",453,[[["self"]],["typeid"]]],[11,"from","","",454,[[["t"]],["t"]]],[11,"into","","",454,[[["self"]],["u"]]],[11,"try_from","","",454,[[["u"]],["result"]]],[11,"borrow","","",454,[[["self"]],["t"]]],[11,"borrow_mut","","",454,[[["self"]],["t"]]],[11,"try_into","","",454,[[["self"]],["result"]]],[11,"get_type_id","","",454,[[["self"]],["typeid"]]],[11,"from","","",731,[[["t"]],["t"]]],[11,"into","","",731,[[["self"]],["u"]]],[11,"try_from","","",731,[[["u"]],["result"]]],[11,"borrow","","",731,[[["self"]],["t"]]],[11,"borrow_mut","","",731,[[["self"]],["t"]]],[11,"try_into","","",731,[[["self"]],["result"]]],[11,"get_type_id","","",731,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",732,[[["t"]],["t"]]],[11,"into","","",732,[[["self"]],["u"]]],[11,"try_from","","",732,[[["u"]],["result"]]],[11,"borrow","","",732,[[["self"]],["t"]]],[11,"borrow_mut","","",732,[[["self"]],["t"]]],[11,"try_into","","",732,[[["self"]],["result"]]],[11,"get_type_id","","",732,[[["self"]],["typeid"]]],[11,"from","","",456,[[["t"]],["t"]]],[11,"into","","",456,[[["self"]],["u"]]],[11,"to_owned","","",456,[[["self"]],["t"]]],[11,"clone_into","","",456,N],[11,"try_from","","",456,[[["u"]],["result"]]],[11,"borrow","","",456,[[["self"]],["t"]]],[11,"borrow_mut","","",456,[[["self"]],["t"]]],[11,"try_into","","",456,[[["self"]],["result"]]],[11,"get_type_id","","",456,[[["self"]],["typeid"]]],[11,"from","","",457,[[["t"]],["t"]]],[11,"into","","",457,[[["self"]],["u"]]],[11,"try_from","","",457,[[["u"]],["result"]]],[11,"borrow","","",457,[[["self"]],["t"]]],[11,"borrow_mut","","",457,[[["self"]],["t"]]],[11,"try_into","","",457,[[["self"]],["result"]]],[11,"get_type_id","","",457,[[["self"]],["typeid"]]],[11,"from","","",458,[[["t"]],["t"]]],[11,"into","","",458,[[["self"]],["u"]]],[11,"try_from","","",458,[[["u"]],["result"]]],[11,"borrow","","",458,[[["self"]],["t"]]],[11,"borrow_mut","","",458,[[["self"]],["t"]]],[11,"try_into","","",458,[[["self"]],["result"]]],[11,"get_type_id","","",458,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",733,[[["t"]],["t"]]],[11,"into","","",733,[[["self"]],["u"]]],[11,"try_from","","",733,[[["u"]],["result"]]],[11,"borrow","","",733,[[["self"]],["t"]]],[11,"borrow_mut","","",733,[[["self"]],["t"]]],[11,"try_into","","",733,[[["self"]],["result"]]],[11,"get_type_id","","",733,[[["self"]],["typeid"]]],[11,"from","","",460,[[["t"]],["t"]]],[11,"into","","",460,[[["self"]],["u"]]],[11,"to_owned","","",460,[[["self"]],["t"]]],[11,"clone_into","","",460,N],[11,"try_from","","",460,[[["u"]],["result"]]],[11,"borrow","","",460,[[["self"]],["t"]]],[11,"borrow_mut","","",460,[[["self"]],["t"]]],[11,"try_into","","",460,[[["self"]],["result"]]],[11,"get_type_id","","",460,[[["self"]],["typeid"]]],[11,"from","","",461,[[["t"]],["t"]]],[11,"into","","",461,[[["self"]],["u"]]],[11,"to_owned","","",461,[[["self"]],["t"]]],[11,"clone_into","","",461,N],[11,"try_from","","",461,[[["u"]],["result"]]],[11,"borrow","","",461,[[["self"]],["t"]]],[11,"borrow_mut","","",461,[[["self"]],["t"]]],[11,"try_into","","",461,[[["self"]],["result"]]],[11,"get_type_id","","",461,[[["self"]],["typeid"]]],[11,"from","","",462,[[["t"]],["t"]]],[11,"into","","",462,[[["self"]],["u"]]],[11,"try_from","","",462,[[["u"]],["result"]]],[11,"borrow","","",462,[[["self"]],["t"]]],[11,"borrow_mut","","",462,[[["self"]],["t"]]],[11,"try_into","","",462,[[["self"]],["result"]]],[11,"get_type_id","","",462,[[["self"]],["typeid"]]],[11,"from","","",463,[[["t"]],["t"]]],[11,"into","","",463,[[["self"]],["u"]]],[11,"try_from","","",463,[[["u"]],["result"]]],[11,"borrow","","",463,[[["self"]],["t"]]],[11,"borrow_mut","","",463,[[["self"]],["t"]]],[11,"try_into","","",463,[[["self"]],["result"]]],[11,"get_type_id","","",463,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",734,[[["t"]],["t"]]],[11,"into","","",734,[[["self"]],["u"]]],[11,"try_from","","",734,[[["u"]],["result"]]],[11,"borrow","","",734,[[["self"]],["t"]]],[11,"borrow_mut","","",734,[[["self"]],["t"]]],[11,"try_into","","",734,[[["self"]],["result"]]],[11,"get_type_id","","",734,[[["self"]],["typeid"]]],[11,"from","","",465,[[["t"]],["t"]]],[11,"into","","",465,[[["self"]],["u"]]],[11,"to_owned","","",465,[[["self"]],["t"]]],[11,"clone_into","","",465,N],[11,"try_from","","",465,[[["u"]],["result"]]],[11,"borrow","","",465,[[["self"]],["t"]]],[11,"borrow_mut","","",465,[[["self"]],["t"]]],[11,"try_into","","",465,[[["self"]],["result"]]],[11,"get_type_id","","",465,[[["self"]],["typeid"]]],[11,"from","","",466,[[["t"]],["t"]]],[11,"into","","",466,[[["self"]],["u"]]],[11,"try_from","","",466,[[["u"]],["result"]]],[11,"borrow","","",466,[[["self"]],["t"]]],[11,"borrow_mut","","",466,[[["self"]],["t"]]],[11,"try_into","","",466,[[["self"]],["result"]]],[11,"get_type_id","","",466,[[["self"]],["typeid"]]],[11,"from","","",467,[[["t"]],["t"]]],[11,"into","","",467,[[["self"]],["u"]]],[11,"try_from","","",467,[[["u"]],["result"]]],[11,"borrow","","",467,[[["self"]],["t"]]],[11,"borrow_mut","","",467,[[["self"]],["t"]]],[11,"try_into","","",467,[[["self"]],["result"]]],[11,"get_type_id","","",467,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",735,[[["t"]],["t"]]],[11,"into","","",735,[[["self"]],["u"]]],[11,"try_from","","",735,[[["u"]],["result"]]],[11,"borrow","","",735,[[["self"]],["t"]]],[11,"borrow_mut","","",735,[[["self"]],["t"]]],[11,"try_into","","",735,[[["self"]],["result"]]],[11,"get_type_id","","",735,[[["self"]],["typeid"]]],[11,"from","","",469,[[["t"]],["t"]]],[11,"into","","",469,[[["self"]],["u"]]],[11,"to_owned","","",469,[[["self"]],["t"]]],[11,"clone_into","","",469,N],[11,"try_from","","",469,[[["u"]],["result"]]],[11,"borrow","","",469,[[["self"]],["t"]]],[11,"borrow_mut","","",469,[[["self"]],["t"]]],[11,"try_into","","",469,[[["self"]],["result"]]],[11,"get_type_id","","",469,[[["self"]],["typeid"]]],[11,"from","","",470,[[["t"]],["t"]]],[11,"into","","",470,[[["self"]],["u"]]],[11,"try_from","","",470,[[["u"]],["result"]]],[11,"borrow","","",470,[[["self"]],["t"]]],[11,"borrow_mut","","",470,[[["self"]],["t"]]],[11,"try_into","","",470,[[["self"]],["result"]]],[11,"get_type_id","","",470,[[["self"]],["typeid"]]],[11,"from","","",471,[[["t"]],["t"]]],[11,"into","","",471,[[["self"]],["u"]]],[11,"try_from","","",471,[[["u"]],["result"]]],[11,"borrow","","",471,[[["self"]],["t"]]],[11,"borrow_mut","","",471,[[["self"]],["t"]]],[11,"try_into","","",471,[[["self"]],["result"]]],[11,"get_type_id","","",471,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["t"]],["t"]]],[11,"into","","",736,[[["self"]],["u"]]],[11,"to_owned","","",736,[[["self"]],["t"]]],[11,"clone_into","","",736,N],[11,"try_from","","",736,[[["u"]],["result"]]],[11,"borrow","","",736,[[["self"]],["t"]]],[11,"borrow_mut","","",736,[[["self"]],["t"]]],[11,"try_into","","",736,[[["self"]],["result"]]],[11,"get_type_id","","",736,[[["self"]],["typeid"]]],[11,"from","","",737,[[["t"]],["t"]]],[11,"into","","",737,[[["self"]],["u"]]],[11,"try_from","","",737,[[["u"]],["result"]]],[11,"borrow","","",737,[[["self"]],["t"]]],[11,"borrow_mut","","",737,[[["self"]],["t"]]],[11,"try_into","","",737,[[["self"]],["result"]]],[11,"get_type_id","","",737,[[["self"]],["typeid"]]],[11,"from","","",472,[[["t"]],["t"]]],[11,"into","","",472,[[["self"]],["u"]]],[11,"to_owned","","",472,[[["self"]],["t"]]],[11,"clone_into","","",472,N],[11,"try_from","","",472,[[["u"]],["result"]]],[11,"borrow","","",472,[[["self"]],["t"]]],[11,"borrow_mut","","",472,[[["self"]],["t"]]],[11,"try_into","","",472,[[["self"]],["result"]]],[11,"get_type_id","","",472,[[["self"]],["typeid"]]],[11,"from","","",473,[[["t"]],["t"]]],[11,"into","","",473,[[["self"]],["u"]]],[11,"to_owned","","",473,[[["self"]],["t"]]],[11,"clone_into","","",473,N],[11,"try_from","","",473,[[["u"]],["result"]]],[11,"borrow","","",473,[[["self"]],["t"]]],[11,"borrow_mut","","",473,[[["self"]],["t"]]],[11,"try_into","","",473,[[["self"]],["result"]]],[11,"get_type_id","","",473,[[["self"]],["typeid"]]],[11,"from","","",474,[[["t"]],["t"]]],[11,"into","","",474,[[["self"]],["u"]]],[11,"to_owned","","",474,[[["self"]],["t"]]],[11,"clone_into","","",474,N],[11,"try_from","","",474,[[["u"]],["result"]]],[11,"borrow","","",474,[[["self"]],["t"]]],[11,"borrow_mut","","",474,[[["self"]],["t"]]],[11,"try_into","","",474,[[["self"]],["result"]]],[11,"get_type_id","","",474,[[["self"]],["typeid"]]],[11,"from","","",475,[[["t"]],["t"]]],[11,"into","","",475,[[["self"]],["u"]]],[11,"try_from","","",475,[[["u"]],["result"]]],[11,"borrow","","",475,[[["self"]],["t"]]],[11,"borrow_mut","","",475,[[["self"]],["t"]]],[11,"try_into","","",475,[[["self"]],["result"]]],[11,"get_type_id","","",475,[[["self"]],["typeid"]]],[11,"from","","",738,[[["t"]],["t"]]],[11,"into","","",738,[[["self"]],["u"]]],[11,"try_from","","",738,[[["u"]],["result"]]],[11,"borrow","","",738,[[["self"]],["t"]]],[11,"borrow_mut","","",738,[[["self"]],["t"]]],[11,"try_into","","",738,[[["self"]],["result"]]],[11,"get_type_id","","",738,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",739,[[["t"]],["t"]]],[11,"into","","",739,[[["self"]],["u"]]],[11,"try_from","","",739,[[["u"]],["result"]]],[11,"borrow","","",739,[[["self"]],["t"]]],[11,"borrow_mut","","",739,[[["self"]],["t"]]],[11,"try_into","","",739,[[["self"]],["result"]]],[11,"get_type_id","","",739,[[["self"]],["typeid"]]],[11,"from","","",476,[[["t"]],["t"]]],[11,"into","","",476,[[["self"]],["u"]]],[11,"to_owned","","",476,[[["self"]],["t"]]],[11,"clone_into","","",476,N],[11,"try_from","","",476,[[["u"]],["result"]]],[11,"borrow","","",476,[[["self"]],["t"]]],[11,"borrow_mut","","",476,[[["self"]],["t"]]],[11,"try_into","","",476,[[["self"]],["result"]]],[11,"get_type_id","","",476,[[["self"]],["typeid"]]],[11,"from","","",477,[[["t"]],["t"]]],[11,"into","","",477,[[["self"]],["u"]]],[11,"try_from","","",477,[[["u"]],["result"]]],[11,"borrow","","",477,[[["self"]],["t"]]],[11,"borrow_mut","","",477,[[["self"]],["t"]]],[11,"try_into","","",477,[[["self"]],["result"]]],[11,"get_type_id","","",477,[[["self"]],["typeid"]]],[11,"from","","",478,[[["t"]],["t"]]],[11,"into","","",478,[[["self"]],["u"]]],[11,"try_from","","",478,[[["u"]],["result"]]],[11,"borrow","","",478,[[["self"]],["t"]]],[11,"borrow_mut","","",478,[[["self"]],["t"]]],[11,"try_into","","",478,[[["self"]],["result"]]],[11,"get_type_id","","",478,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",740,[[["t"]],["t"]]],[11,"into","","",740,[[["self"]],["u"]]],[11,"try_from","","",740,[[["u"]],["result"]]],[11,"borrow","","",740,[[["self"]],["t"]]],[11,"borrow_mut","","",740,[[["self"]],["t"]]],[11,"try_into","","",740,[[["self"]],["result"]]],[11,"get_type_id","","",740,[[["self"]],["typeid"]]],[11,"from","","",479,[[["t"]],["t"]]],[11,"into","","",479,[[["self"]],["u"]]],[11,"to_owned","","",479,[[["self"]],["t"]]],[11,"clone_into","","",479,N],[11,"try_from","","",479,[[["u"]],["result"]]],[11,"borrow","","",479,[[["self"]],["t"]]],[11,"borrow_mut","","",479,[[["self"]],["t"]]],[11,"try_into","","",479,[[["self"]],["result"]]],[11,"get_type_id","","",479,[[["self"]],["typeid"]]],[11,"from","","",480,[[["t"]],["t"]]],[11,"into","","",480,[[["self"]],["u"]]],[11,"to_owned","","",480,[[["self"]],["t"]]],[11,"clone_into","","",480,N],[11,"try_from","","",480,[[["u"]],["result"]]],[11,"borrow","","",480,[[["self"]],["t"]]],[11,"borrow_mut","","",480,[[["self"]],["t"]]],[11,"try_into","","",480,[[["self"]],["result"]]],[11,"get_type_id","","",480,[[["self"]],["typeid"]]],[11,"from","","",481,[[["t"]],["t"]]],[11,"into","","",481,[[["self"]],["u"]]],[11,"try_from","","",481,[[["u"]],["result"]]],[11,"borrow","","",481,[[["self"]],["t"]]],[11,"borrow_mut","","",481,[[["self"]],["t"]]],[11,"try_into","","",481,[[["self"]],["result"]]],[11,"get_type_id","","",481,[[["self"]],["typeid"]]],[11,"from","","",482,[[["t"]],["t"]]],[11,"into","","",482,[[["self"]],["u"]]],[11,"try_from","","",482,[[["u"]],["result"]]],[11,"borrow","","",482,[[["self"]],["t"]]],[11,"borrow_mut","","",482,[[["self"]],["t"]]],[11,"try_into","","",482,[[["self"]],["result"]]],[11,"get_type_id","","",482,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",741,[[["t"]],["t"]]],[11,"into","","",741,[[["self"]],["u"]]],[11,"try_from","","",741,[[["u"]],["result"]]],[11,"borrow","","",741,[[["self"]],["t"]]],[11,"borrow_mut","","",741,[[["self"]],["t"]]],[11,"try_into","","",741,[[["self"]],["result"]]],[11,"get_type_id","","",741,[[["self"]],["typeid"]]],[11,"from","","",483,[[["t"]],["t"]]],[11,"into","","",483,[[["self"]],["u"]]],[11,"to_owned","","",483,[[["self"]],["t"]]],[11,"clone_into","","",483,N],[11,"try_from","","",483,[[["u"]],["result"]]],[11,"borrow","","",483,[[["self"]],["t"]]],[11,"borrow_mut","","",483,[[["self"]],["t"]]],[11,"try_into","","",483,[[["self"]],["result"]]],[11,"get_type_id","","",483,[[["self"]],["typeid"]]],[11,"from","","",484,[[["t"]],["t"]]],[11,"into","","",484,[[["self"]],["u"]]],[11,"try_from","","",484,[[["u"]],["result"]]],[11,"borrow","","",484,[[["self"]],["t"]]],[11,"borrow_mut","","",484,[[["self"]],["t"]]],[11,"try_into","","",484,[[["self"]],["result"]]],[11,"get_type_id","","",484,[[["self"]],["typeid"]]],[11,"from","","",485,[[["t"]],["t"]]],[11,"into","","",485,[[["self"]],["u"]]],[11,"try_from","","",485,[[["u"]],["result"]]],[11,"borrow","","",485,[[["self"]],["t"]]],[11,"borrow_mut","","",485,[[["self"]],["t"]]],[11,"try_into","","",485,[[["self"]],["result"]]],[11,"get_type_id","","",485,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",742,[[["t"]],["t"]]],[11,"into","","",742,[[["self"]],["u"]]],[11,"try_from","","",742,[[["u"]],["result"]]],[11,"borrow","","",742,[[["self"]],["t"]]],[11,"borrow_mut","","",742,[[["self"]],["t"]]],[11,"try_into","","",742,[[["self"]],["result"]]],[11,"get_type_id","","",742,[[["self"]],["typeid"]]],[11,"from","","",486,[[["t"]],["t"]]],[11,"into","","",486,[[["self"]],["u"]]],[11,"to_owned","","",486,[[["self"]],["t"]]],[11,"clone_into","","",486,N],[11,"try_from","","",486,[[["u"]],["result"]]],[11,"borrow","","",486,[[["self"]],["t"]]],[11,"borrow_mut","","",486,[[["self"]],["t"]]],[11,"try_into","","",486,[[["self"]],["result"]]],[11,"get_type_id","","",486,[[["self"]],["typeid"]]],[11,"from","","",487,[[["t"]],["t"]]],[11,"into","","",487,[[["self"]],["u"]]],[11,"try_from","","",487,[[["u"]],["result"]]],[11,"borrow","","",487,[[["self"]],["t"]]],[11,"borrow_mut","","",487,[[["self"]],["t"]]],[11,"try_into","","",487,[[["self"]],["result"]]],[11,"get_type_id","","",487,[[["self"]],["typeid"]]],[11,"from","","",743,[[["t"]],["t"]]],[11,"into","","",743,[[["self"]],["u"]]],[11,"try_from","","",743,[[["u"]],["result"]]],[11,"borrow","","",743,[[["self"]],["t"]]],[11,"borrow_mut","","",743,[[["self"]],["t"]]],[11,"try_into","","",743,[[["self"]],["result"]]],[11,"get_type_id","","",743,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",744,[[["t"]],["t"]]],[11,"into","","",744,[[["self"]],["u"]]],[11,"try_from","","",744,[[["u"]],["result"]]],[11,"borrow","","",744,[[["self"]],["t"]]],[11,"borrow_mut","","",744,[[["self"]],["t"]]],[11,"try_into","","",744,[[["self"]],["result"]]],[11,"get_type_id","","",744,[[["self"]],["typeid"]]],[11,"from","","",489,[[["t"]],["t"]]],[11,"into","","",489,[[["self"]],["u"]]],[11,"to_owned","","",489,[[["self"]],["t"]]],[11,"clone_into","","",489,N],[11,"try_from","","",489,[[["u"]],["result"]]],[11,"borrow","","",489,[[["self"]],["t"]]],[11,"borrow_mut","","",489,[[["self"]],["t"]]],[11,"try_into","","",489,[[["self"]],["result"]]],[11,"get_type_id","","",489,[[["self"]],["typeid"]]],[11,"from","","",490,[[["t"]],["t"]]],[11,"into","","",490,[[["self"]],["u"]]],[11,"try_from","","",490,[[["u"]],["result"]]],[11,"borrow","","",490,[[["self"]],["t"]]],[11,"borrow_mut","","",490,[[["self"]],["t"]]],[11,"try_into","","",490,[[["self"]],["result"]]],[11,"get_type_id","","",490,[[["self"]],["typeid"]]],[11,"from","","",745,[[["t"]],["t"]]],[11,"into","","",745,[[["self"]],["u"]]],[11,"try_from","","",745,[[["u"]],["result"]]],[11,"borrow","","",745,[[["self"]],["t"]]],[11,"borrow_mut","","",745,[[["self"]],["t"]]],[11,"try_into","","",745,[[["self"]],["result"]]],[11,"get_type_id","","",745,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",746,[[["t"]],["t"]]],[11,"into","","",746,[[["self"]],["u"]]],[11,"try_from","","",746,[[["u"]],["result"]]],[11,"borrow","","",746,[[["self"]],["t"]]],[11,"borrow_mut","","",746,[[["self"]],["t"]]],[11,"try_into","","",746,[[["self"]],["result"]]],[11,"get_type_id","","",746,[[["self"]],["typeid"]]],[11,"from","","",492,[[["t"]],["t"]]],[11,"into","","",492,[[["self"]],["u"]]],[11,"to_owned","","",492,[[["self"]],["t"]]],[11,"clone_into","","",492,N],[11,"try_from","","",492,[[["u"]],["result"]]],[11,"borrow","","",492,[[["self"]],["t"]]],[11,"borrow_mut","","",492,[[["self"]],["t"]]],[11,"try_into","","",492,[[["self"]],["result"]]],[11,"get_type_id","","",492,[[["self"]],["typeid"]]],[11,"from","","",493,[[["t"]],["t"]]],[11,"into","","",493,[[["self"]],["u"]]],[11,"try_from","","",493,[[["u"]],["result"]]],[11,"borrow","","",493,[[["self"]],["t"]]],[11,"borrow_mut","","",493,[[["self"]],["t"]]],[11,"try_into","","",493,[[["self"]],["result"]]],[11,"get_type_id","","",493,[[["self"]],["typeid"]]],[11,"from","","",747,[[["t"]],["t"]]],[11,"into","","",747,[[["self"]],["u"]]],[11,"try_from","","",747,[[["u"]],["result"]]],[11,"borrow","","",747,[[["self"]],["t"]]],[11,"borrow_mut","","",747,[[["self"]],["t"]]],[11,"try_into","","",747,[[["self"]],["result"]]],[11,"get_type_id","","",747,[[["self"]],["typeid"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",748,[[["t"]],["t"]]],[11,"into","","",748,[[["self"]],["u"]]],[11,"try_from","","",748,[[["u"]],["result"]]],[11,"borrow","","",748,[[["self"]],["t"]]],[11,"borrow_mut","","",748,[[["self"]],["t"]]],[11,"try_into","","",748,[[["self"]],["result"]]],[11,"get_type_id","","",748,[[["self"]],["typeid"]]],[11,"from","","",494,[[["t"]],["t"]]],[11,"into","","",494,[[["self"]],["u"]]],[11,"to_owned","","",494,[[["self"]],["t"]]],[11,"clone_into","","",494,N],[11,"try_from","","",494,[[["u"]],["result"]]],[11,"borrow","","",494,[[["self"]],["t"]]],[11,"borrow_mut","","",494,[[["self"]],["t"]]],[11,"try_into","","",494,[[["self"]],["result"]]],[11,"get_type_id","","",494,[[["self"]],["typeid"]]],[11,"from","","",495,[[["t"]],["t"]]],[11,"into","","",495,[[["self"]],["u"]]],[11,"try_from","","",495,[[["u"]],["result"]]],[11,"borrow","","",495,[[["self"]],["t"]]],[11,"borrow_mut","","",495,[[["self"]],["t"]]],[11,"try_into","","",495,[[["self"]],["result"]]],[11,"get_type_id","","",495,[[["self"]],["typeid"]]],[11,"from","","",749,[[["t"]],["t"]]],[11,"into","","",749,[[["self"]],["u"]]],[11,"try_from","","",749,[[["u"]],["result"]]],[11,"borrow","","",749,[[["self"]],["t"]]],[11,"borrow_mut","","",749,[[["self"]],["t"]]],[11,"try_into","","",749,[[["self"]],["result"]]],[11,"get_type_id","","",749,[[["self"]],["typeid"]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"]],["capability"]]],[11,"clone","","",1,[[["self"]],["presentmethod"]]],[11,"clone","","",2,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",7,[[["self"]],["capability"]]],[11,"clone","","",8,[[["self"]],["presentmethod"]]],[11,"clone","","",9,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",25,[[["self"]],["position"]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",32,[[["self"]],["position"]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",42,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",48,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",55,[[["self"]],["error"]]],[11,"clone","","",56,[[["self"]],["flags"]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",62,[[["self"]],["error"]]],[11,"clone","","",63,[[["self"]],["flags"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",66,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",69,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",75,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",78,[[["self"]],["error"]]],[11,"clone","","",79,[[["self"]],["lifetime"]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",88,[[["self"]],["error"]]],[11,"clone","","",89,[[["self"]],["lifetime"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",139,[[["self"]],["type"]]],[11,"clone","","",140,[[["self"]],["capability"]]],[11,"clone","","",141,[[["self"]],["buttonstate"]]],[11,"clone","","",142,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",152,[[["self"]],["type"]]],[11,"clone","","",153,[[["self"]],["capability"]]],[11,"clone","","",154,[[["self"]],["buttonstate"]]],[11,"clone","","",155,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",165,[[["self"]],["type"]]],[11,"clone","","",166,[[["self"]],["capability"]]],[11,"clone","","",167,[[["self"]],["buttonstate"]]],[11,"clone","","",168,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",175,[[["self"]],["source"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",179,[[["self"]],["source"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",186,[[["self"]],["buttonstate"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",193,[[["self"]],["type"]]],[11,"clone","","",194,[[["self"]],["capability"]]],[11,"clone","","",195,[[["self"]],["buttonstate"]]],[11,"clone","","",196,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",201,[[["self"]],["source"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",204,[[["self"]],["source"]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",209,[[["self"]],["buttonstate"]]],[11,"clone","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",212,[[["self"]],["contenthint"]]],[11,"clone","","",213,[[["self"]],["contentpurpose"]]],[11,"clone","","",214,[[["self"]],["preeditstyle"]]],[11,"clone","","",215,[[["self"]],["textdirection"]]],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",221,[[["self"]],["contenthint"]]],[11,"clone","","",222,[[["self"]],["contentpurpose"]]],[11,"clone","","",223,[[["self"]],["preeditstyle"]]],[11,"clone","","",224,[[["self"]],["textdirection"]]],[11,"clone","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",228,[[["self"]],["changecause"]]],[11,"clone","","",240,[[["self"]],["contenthint"]]],[11,"clone","","",229,[[["self"]],["contentpurpose"]]],[11,"clone","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",235,[[["self"]],["changecause"]]],[11,"clone","","",241,[[["self"]],["contenthint"]]],[11,"clone","","",236,[[["self"]],["contentpurpose"]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",244,[[["self"]],["error"]]],[11,"clone","","",245,[[["self"]],["mode"]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",250,[[["self"]],["error"]]],[11,"clone","","",251,[[["self"]],["mode"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",294,[[["self"]],["version"]]],[11,"clone","","",295,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",299,[[["self"]],["resizeedge"]]],[11,"clone","","",300,[[["self"]],["state"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",307,[[["self"]],["version"]]],[11,"clone","","",308,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",311,[[["self"]],["resizeedge"]]],[11,"clone","","",312,[[["self"]],["state"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",317,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",321,[[["self"]],["error"]]],[11,"clone","","",352,[[["self"]],["anchor"]]],[11,"clone","","",353,[[["self"]],["gravity"]]],[11,"clone","","",354,[[["self"]],["constraintadjustment"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",324,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",328,[[["self"]],["resizeedge"]]],[11,"clone","","",329,[[["self"]],["state"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",333,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",337,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",340,[[["self"]],["error"]]],[11,"clone","","",355,[[["self"]],["anchor"]]],[11,"clone","","",356,[[["self"]],["gravity"]]],[11,"clone","","",357,[[["self"]],["constraintadjustment"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",342,[[["self"]],["error"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",345,[[["self"]],["resizeedge"]]],[11,"clone","","",346,[[["self"]],["state"]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",349,[[["self"]],["error"]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",366,[[["self"]],["flags"]]],[11,"clone","","",367,[[["self"]],["cancelreason"]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",372,[[["self"]],["flags"]]],[11,"clone","","",373,[[["self"]],["cancelreason"]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",379,[[["self"]],["state"]]],[11,"clone","","",380,[[["self"]],["error"]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",386,[[["self"]],["state"]]],[11,"clone","","",387,[[["self"]],["error"]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",392,[[["self"]],["error"]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",397,[[["self"]],["error"]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",400,[[["self"]],["error"]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",405,[[["self"]],["error"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",408,[[["self"]],["error"]]],[11,"clone","","",409,[[["self"]],["layer"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",412,[[["self"]],["error"]]],[11,"clone","","",422,[[["self"]],["anchor"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",416,[[["self"]],["error"]]],[11,"clone","","",417,[[["self"]],["layer"]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",419,[[["self"]],["error"]]],[11,"clone","","",423,[[["self"]],["anchor"]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",426,[[["self"]],["error"]]],[11,"clone","","",434,[[["self"]],["flags"]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",431,[[["self"]],["error"]]],[11,"clone","","",435,[[["self"]],["flags"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation","",436,[[["self"]],["error"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation_feedback","",440,[[["self"]],["kind"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation","",442,[[["self"]],["error"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation_feedback","",445,[[["self"]],["kind"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_wm_base","",447,[[["self"]],["error"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_positioner","",451,[[["self"]],["error"]]],[11,"clone","","",452,[[["self"]],["anchor"]]],[11,"clone","","",453,[[["self"]],["gravity"]]],[11,"clone","","",729,[[["self"]],["constraintadjustment"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_surface","",456,[[["self"]],["error"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_toplevel","",460,[[["self"]],["resizeedge"]]],[11,"clone","","",461,[[["self"]],["state"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_popup","",465,[[["self"]],["error"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_wm_base","",469,[[["self"]],["error"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_positioner","",472,[[["self"]],["error"]]],[11,"clone","","",473,[[["self"]],["anchor"]]],[11,"clone","","",474,[[["self"]],["gravity"]]],[11,"clone","","",736,[[["self"]],["constraintadjustment"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_surface","",476,[[["self"]],["error"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_toplevel","",479,[[["self"]],["resizeedge"]]],[11,"clone","","",480,[[["self"]],["state"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_popup","",483,[[["self"]],["error"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewporter","",486,[[["self"]],["error"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewport","",489,[[["self"]],["error"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewporter","",492,[[["self"]],["error"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewport","",494,[[["self"]],["error"]]],[11,"extend","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["self"],["t"]]]],[11,"extend","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["self"],["t"]]]],[11,"extend","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["self"],["t"]]]],[11,"extend","","",353,[[["self"],["t"]]]],[11,"extend","","",354,[[["self"],["t"]]]],[11,"extend","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["self"],["t"]]]],[11,"extend","","",356,[[["self"],["t"]]]],[11,"extend","","",357,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["self"],["t"]]]],[11,"extend","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["self"],["t"]]]],[11,"extend","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["self"],["t"]]]],[11,"extend","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["self"],["t"]]]],[11,"partial_cmp","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["self"],["contenthint"]],["option",["ordering"]]]],[11,"lt","","",240,[[["self"],["contenthint"]],["bool"]]],[11,"le","","",240,[[["self"],["contenthint"]],["bool"]]],[11,"gt","","",240,[[["self"],["contenthint"]],["bool"]]],[11,"ge","","",240,[[["self"],["contenthint"]],["bool"]]],[11,"partial_cmp","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["self"],["contenthint"]],["option",["ordering"]]]],[11,"lt","","",241,[[["self"],["contenthint"]],["bool"]]],[11,"le","","",241,[[["self"],["contenthint"]],["bool"]]],[11,"gt","","",241,[[["self"],["contenthint"]],["bool"]]],[11,"ge","","",241,[[["self"],["contenthint"]],["bool"]]],[11,"partial_cmp","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",352,[[["self"],["anchor"]],["bool"]]],[11,"le","","",352,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",352,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",352,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","","",353,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",353,[[["self"],["gravity"]],["bool"]]],[11,"le","","",353,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",353,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",353,[[["self"],["gravity"]],["bool"]]],[11,"partial_cmp","","",354,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"partial_cmp","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",355,[[["self"],["anchor"]],["bool"]]],[11,"le","","",355,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",355,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",355,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","","",356,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",356,[[["self"],["gravity"]],["bool"]]],[11,"le","","",356,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",356,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",356,[[["self"],["gravity"]],["bool"]]],[11,"partial_cmp","","",357,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",422,[[["self"],["anchor"]],["bool"]]],[11,"le","","",422,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",422,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",422,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",423,[[["self"],["anchor"]],["bool"]]],[11,"le","","",423,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",423,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",423,[[["self"],["anchor"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["self"],["flags"]],["option",["ordering"]]]],[11,"lt","","",434,[[["self"],["flags"]],["bool"]]],[11,"le","","",434,[[["self"],["flags"]],["bool"]]],[11,"gt","","",434,[[["self"],["flags"]],["bool"]]],[11,"ge","","",434,[[["self"],["flags"]],["bool"]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["self"],["flags"]],["option",["ordering"]]]],[11,"lt","","",435,[[["self"],["flags"]],["bool"]]],[11,"le","","",435,[[["self"],["flags"]],["bool"]]],[11,"gt","","",435,[[["self"],["flags"]],["bool"]]],[11,"ge","","",435,[[["self"],["flags"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"],["capability"]],["bool"]]],[11,"eq","","",1,[[["self"],["presentmethod"]],["bool"]]],[11,"eq","","",2,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",7,[[["self"],["capability"]],["bool"]]],[11,"eq","","",8,[[["self"],["presentmethod"]],["bool"]]],[11,"eq","","",9,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",25,[[["self"],["position"]],["bool"]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",32,[[["self"],["position"]],["bool"]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",42,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",48,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",55,[[["self"],["error"]],["bool"]]],[11,"eq","","",56,[[["self"],["flags"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",62,[[["self"],["error"]],["bool"]]],[11,"eq","","",63,[[["self"],["flags"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",66,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",69,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",75,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",78,[[["self"],["error"]],["bool"]]],[11,"eq","","",79,[[["self"],["lifetime"]],["bool"]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",88,[[["self"],["error"]],["bool"]]],[11,"eq","","",89,[[["self"],["lifetime"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",139,[[["self"],["type"]],["bool"]]],[11,"eq","","",140,[[["self"],["capability"]],["bool"]]],[11,"eq","","",141,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",142,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",152,[[["self"],["type"]],["bool"]]],[11,"eq","","",153,[[["self"],["capability"]],["bool"]]],[11,"eq","","",154,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",155,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",165,[[["self"],["type"]],["bool"]]],[11,"eq","","",166,[[["self"],["capability"]],["bool"]]],[11,"eq","","",167,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",168,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",175,[[["self"],["source"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",179,[[["self"],["source"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",186,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",193,[[["self"],["type"]],["bool"]]],[11,"eq","","",194,[[["self"],["capability"]],["bool"]]],[11,"eq","","",195,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",196,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",201,[[["self"],["source"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",204,[[["self"],["source"]],["bool"]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",209,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",212,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",213,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","","",214,[[["self"],["preeditstyle"]],["bool"]]],[11,"eq","","",215,[[["self"],["textdirection"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",221,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",222,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","","",223,[[["self"],["preeditstyle"]],["bool"]]],[11,"eq","","",224,[[["self"],["textdirection"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",228,[[["self"],["changecause"]],["bool"]]],[11,"eq","","",240,[[["self"],["contenthint"]],["bool"]]],[11,"ne","","",240,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",229,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",235,[[["self"],["changecause"]],["bool"]]],[11,"eq","","",241,[[["self"],["contenthint"]],["bool"]]],[11,"ne","","",241,[[["self"],["contenthint"]],["bool"]]],[11,"eq","","",236,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",244,[[["self"],["error"]],["bool"]]],[11,"eq","","",245,[[["self"],["mode"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",250,[[["self"],["error"]],["bool"]]],[11,"eq","","",251,[[["self"],["mode"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",294,[[["self"],["version"]],["bool"]]],[11,"eq","","",295,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",299,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",300,[[["self"],["state"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",307,[[["self"],["version"]],["bool"]]],[11,"eq","","",308,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",311,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",312,[[["self"],["state"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",317,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",321,[[["self"],["error"]],["bool"]]],[11,"eq","","",352,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",352,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",353,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",353,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",354,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",324,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",328,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",329,[[["self"],["state"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",333,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",337,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",340,[[["self"],["error"]],["bool"]]],[11,"eq","","",355,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",355,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",356,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",356,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",357,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",342,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",345,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",346,[[["self"],["state"]],["bool"]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",349,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",366,[[["self"],["flags"]],["bool"]]],[11,"eq","","",367,[[["self"],["cancelreason"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",372,[[["self"],["flags"]],["bool"]]],[11,"eq","","",373,[[["self"],["cancelreason"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",379,[[["self"],["state"]],["bool"]]],[11,"eq","","",380,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",386,[[["self"],["state"]],["bool"]]],[11,"eq","","",387,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",392,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",397,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",400,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",405,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",408,[[["self"],["error"]],["bool"]]],[11,"eq","","",409,[[["self"],["layer"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",412,[[["self"],["error"]],["bool"]]],[11,"eq","","",422,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",422,[[["self"],["anchor"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",416,[[["self"],["error"]],["bool"]]],[11,"eq","","",417,[[["self"],["layer"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",419,[[["self"],["error"]],["bool"]]],[11,"eq","","",423,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",423,[[["self"],["anchor"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",426,[[["self"],["error"]],["bool"]]],[11,"eq","","",434,[[["self"],["flags"]],["bool"]]],[11,"ne","","",434,[[["self"],["flags"]],["bool"]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",431,[[["self"],["error"]],["bool"]]],[11,"eq","","",435,[[["self"],["flags"]],["bool"]]],[11,"ne","","",435,[[["self"],["flags"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation","",436,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation_feedback","",440,[[["self"],["kind"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation","",442,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation_feedback","",445,[[["self"],["kind"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_wm_base","",447,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_positioner","",451,[[["self"],["error"]],["bool"]]],[11,"eq","","",452,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",453,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_surface","",456,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_toplevel","",460,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",461,[[["self"],["state"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_popup","",465,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_wm_base","",469,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_positioner","",472,[[["self"],["error"]],["bool"]]],[11,"eq","","",473,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",474,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_surface","",476,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_toplevel","",479,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",480,[[["self"],["state"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_popup","",483,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewporter","",486,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewport","",489,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewporter","",492,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewport","",494,[[["self"],["error"]],["bool"]]],[11,"cmp","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["self"],["contenthint"]],["ordering"]]],[11,"cmp","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["self"],["contenthint"]],["ordering"]]],[11,"cmp","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","","",353,[[["self"],["gravity"]],["ordering"]]],[11,"cmp","","",354,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"cmp","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","","",356,[[["self"],["gravity"]],["ordering"]]],[11,"cmp","","",357,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["self"],["flags"]],["ordering"]]],[11,"cmp","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["self"],["flags"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"hash","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,N],[11,"hash","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,N],[11,"hash","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,N],[11,"hash","","",353,N],[11,"hash","","",354,N],[11,"hash","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,N],[11,"hash","","",356,N],[11,"hash","","",357,N],[11,"hash","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,N],[11,"hash","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,N],[11,"hash","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,N],[11,"hash","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,N],[11,"hash","wayland_protocols::xdg_shell::client::xdg_positioner","",729,N],[11,"hash","wayland_protocols::xdg_shell::server::xdg_positioner","",736,N],[11,"fmt","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",165,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",175,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",179,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",186,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",193,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",201,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",204,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",209,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",212,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",221,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",228,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",235,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",244,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",250,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",251,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",294,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",295,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",299,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",300,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",307,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",308,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",311,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",312,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",317,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",321,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",352,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",353,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",354,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",324,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",328,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",329,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",333,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",337,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",340,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",355,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",356,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",357,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",342,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",345,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",346,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",349,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",366,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",367,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",372,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",373,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",379,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",380,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",386,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",387,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",392,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",397,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",400,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",405,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",408,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",409,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",412,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",422,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",416,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",417,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",419,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",423,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",426,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",434,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",431,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",435,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation","",436,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",440,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation","",442,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",445,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_wm_base","",447,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",451,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",452,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",453,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",729,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_surface","",456,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_toplevel","",460,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",461,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_popup","",465,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_wm_base","",469,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",472,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",473,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",474,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",736,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_surface","",476,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_toplevel","",479,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",480,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_popup","",483,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewporter","",486,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewport","",489,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewporter","",492,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewport","",494,[[["self"],["formatter"]],["result"]]],[11,"sub","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the set difference of the two sets of flags.",240,[[["self"],["contenthint"]],["contenthint"]]],[11,"sub","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the set difference of the two sets of flags.",241,[[["self"],["contenthint"]],["contenthint"]]],[11,"sub","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the set difference of the two sets of flags.",352,[[["self"],["anchor"]],["anchor"]]],[11,"sub","","Returns the set difference of the two sets of flags.",353,[[["self"],["gravity"]],["gravity"]]],[11,"sub","","Returns the set difference of the two sets of flags.",354,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the set difference of the two sets of flags.",355,[[["self"],["anchor"]],["anchor"]]],[11,"sub","","Returns the set difference of the two sets of flags.",356,[[["self"],["gravity"]],["gravity"]]],[11,"sub","","Returns the set difference of the two sets of flags.",357,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the set difference of the two sets of flags.",422,[[["self"],["anchor"]],["anchor"]]],[11,"sub","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the set difference of the two sets of flags.",423,[[["self"],["anchor"]],["anchor"]]],[11,"sub","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the set difference of the two sets of flags.",434,[[["self"],["flags"]],["flags"]]],[11,"sub","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the set difference of the two sets of flags.",435,[[["self"],["flags"]],["flags"]]],[11,"sub","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the set difference of the two sets of flags.",729,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the set difference of the two sets of flags.",736,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Disables all flags enabled in the set.",240,[[["self"],["contenthint"]]]],[11,"sub_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Disables all flags enabled in the set.",241,[[["self"],["contenthint"]]]],[11,"sub_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Disables all flags enabled in the set.",352,[[["self"],["anchor"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",353,[[["self"],["gravity"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",354,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Disables all flags enabled in the set.",355,[[["self"],["anchor"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",356,[[["self"],["gravity"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",357,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Disables all flags enabled in the set.",422,[[["self"],["anchor"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Disables all flags enabled in the set.",423,[[["self"],["anchor"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Disables all flags enabled in the set.",434,[[["self"],["flags"]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Disables all flags enabled in the set.",435,[[["self"],["flags"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags enabled in the set.",729,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags enabled in the set.",736,[[["self"],["constraintadjustment"]]]],[11,"not","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the complement of this set of flags.",240,[[["self"]],["contenthint"]]],[11,"not","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the complement of this set of flags.",241,[[["self"]],["contenthint"]]],[11,"not","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the complement of this set of flags.",352,[[["self"]],["anchor"]]],[11,"not","","Returns the complement of this set of flags.",353,[[["self"]],["gravity"]]],[11,"not","","Returns the complement of this set of flags.",354,[[["self"]],["constraintadjustment"]]],[11,"not","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the complement of this set of flags.",355,[[["self"]],["anchor"]]],[11,"not","","Returns the complement of this set of flags.",356,[[["self"]],["gravity"]]],[11,"not","","Returns the complement of this set of flags.",357,[[["self"]],["constraintadjustment"]]],[11,"not","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the complement of this set of flags.",422,[[["self"]],["anchor"]]],[11,"not","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the complement of this set of flags.",423,[[["self"]],["anchor"]]],[11,"not","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the complement of this set of flags.",434,[[["self"]],["flags"]]],[11,"not","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the complement of this set of flags.",435,[[["self"]],["flags"]]],[11,"not","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the complement of this set of flags.",729,[[["self"]],["constraintadjustment"]]],[11,"not","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the complement of this set of flags.",736,[[["self"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the intersection between the two sets of flags.",240,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitand","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the intersection between the two sets of flags.",241,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitand","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the intersection between the two sets of flags.",352,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",353,[[["self"],["gravity"]],["gravity"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",354,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the intersection between the two sets of flags.",355,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",356,[[["self"],["gravity"]],["gravity"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",357,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the intersection between the two sets of flags.",422,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the intersection between the two sets of flags.",423,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the intersection between the two sets of flags.",434,[[["self"],["flags"]],["flags"]]],[11,"bitand","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the intersection between the two sets of flags.",435,[[["self"],["flags"]],["flags"]]],[11,"bitand","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the intersection between the two sets of flags.",729,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the intersection between the two sets of flags.",736,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the union of the two sets of flags.",240,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the union of the two sets of flags.",241,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the union of the two sets of flags.",352,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","","Returns the union of the two sets of flags.",353,[[["self"],["gravity"]],["gravity"]]],[11,"bitor","","Returns the union of the two sets of flags.",354,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the union of the two sets of flags.",355,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","","Returns the union of the two sets of flags.",356,[[["self"],["gravity"]],["gravity"]]],[11,"bitor","","Returns the union of the two sets of flags.",357,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the union of the two sets of flags.",422,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the union of the two sets of flags.",423,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the union of the two sets of flags.",434,[[["self"],["flags"]],["flags"]]],[11,"bitor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the union of the two sets of flags.",435,[[["self"],["flags"]],["flags"]]],[11,"bitor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the union of the two sets of flags.",729,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the union of the two sets of flags.",736,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Returns the left flags, but with all the right flags toggled.",240,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitxor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the left flags, but with all the right flags toggled.",241,[[["self"],["contenthint"]],["contenthint"]]],[11,"bitxor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the left flags, but with all the right flags toggled.",352,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",353,[[["self"],["gravity"]],["gravity"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",354,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the left flags, but with all the right flags toggled.",355,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",356,[[["self"],["gravity"]],["gravity"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",357,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Returns the left flags, but with all the right flags toggled.",422,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the left flags, but with all the right flags toggled.",423,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Returns the left flags, but with all the right flags toggled.",434,[[["self"],["flags"]],["flags"]]],[11,"bitxor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the left flags, but with all the right flags toggled.",435,[[["self"],["flags"]],["flags"]]],[11,"bitxor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the left flags, but with all the right flags toggled.",729,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the left flags, but with all the right flags toggled.",736,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Disables all flags disabled in the set.",240,[[["self"],["contenthint"]]]],[11,"bitand_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Disables all flags disabled in the set.",241,[[["self"],["contenthint"]]]],[11,"bitand_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Disables all flags disabled in the set.",352,[[["self"],["anchor"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",353,[[["self"],["gravity"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",354,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Disables all flags disabled in the set.",355,[[["self"],["anchor"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",356,[[["self"],["gravity"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",357,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Disables all flags disabled in the set.",422,[[["self"],["anchor"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Disables all flags disabled in the set.",423,[[["self"],["anchor"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Disables all flags disabled in the set.",434,[[["self"],["flags"]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Disables all flags disabled in the set.",435,[[["self"],["flags"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags disabled in the set.",729,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags disabled in the set.",736,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Adds the set of flags.",240,[[["self"],["contenthint"]]]],[11,"bitor_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Adds the set of flags.",241,[[["self"],["contenthint"]]]],[11,"bitor_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Adds the set of flags.",352,[[["self"],["anchor"]]]],[11,"bitor_assign","","Adds the set of flags.",353,[[["self"],["gravity"]]]],[11,"bitor_assign","","Adds the set of flags.",354,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Adds the set of flags.",355,[[["self"],["anchor"]]]],[11,"bitor_assign","","Adds the set of flags.",356,[[["self"],["gravity"]]]],[11,"bitor_assign","","Adds the set of flags.",357,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Adds the set of flags.",422,[[["self"],["anchor"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Adds the set of flags.",423,[[["self"],["anchor"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Adds the set of flags.",434,[[["self"],["flags"]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Adds the set of flags.",435,[[["self"],["flags"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Adds the set of flags.",729,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Adds the set of flags.",736,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","Toggles the set of flags.",240,[[["self"],["contenthint"]]]],[11,"bitxor_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Toggles the set of flags.",241,[[["self"],["contenthint"]]]],[11,"bitxor_assign","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Toggles the set of flags.",352,[[["self"],["anchor"]]]],[11,"bitxor_assign","","Toggles the set of flags.",353,[[["self"],["gravity"]]]],[11,"bitxor_assign","","Toggles the set of flags.",354,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Toggles the set of flags.",355,[[["self"],["anchor"]]]],[11,"bitxor_assign","","Toggles the set of flags.",356,[[["self"],["gravity"]]]],[11,"bitxor_assign","","Toggles the set of flags.",357,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","Toggles the set of flags.",422,[[["self"],["anchor"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Toggles the set of flags.",423,[[["self"],["anchor"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","Toggles the set of flags.",434,[[["self"],["flags"]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Toggles the set of flags.",435,[[["self"],["flags"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Toggles the set of flags.",729,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Toggles the set of flags.",736,[[["self"],["constraintadjustment"]]]],[11,"from_iter","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["t"]],["contenthint"]]],[11,"from_iter","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["t"]],["contenthint"]]],[11,"from_iter","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["t"]],["anchor"]]],[11,"from_iter","","",353,[[["t"]],["gravity"]]],[11,"from_iter","","",354,[[["t"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["t"]],["anchor"]]],[11,"from_iter","","",356,[[["t"]],["gravity"]]],[11,"from_iter","","",357,[[["t"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["t"]],["anchor"]]],[11,"from_iter","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["t"]],["anchor"]]],[11,"from_iter","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["t"]],["flags"]]],[11,"from_iter","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["t"]],["flags"]]],[11,"from_iter","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["t"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["t"]],["constraintadjustment"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",353,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",354,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",356,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",357,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",353,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",354,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",356,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",357,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",353,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",354,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",356,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",357,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",240,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",241,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",352,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",353,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",354,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",355,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",356,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",357,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",422,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",423,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",434,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",435,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",729,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",736,[[["self"],["formatter"]],["result"]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",3,[[["self"]],["bool"]]],[11,"opcode","","",3,[[["self"]],["u16"]]],[11,"child","","",3,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",3,N],[11,"into_raw","","",3,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",3,N],[11,"as_raw_c_in","","",3,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",4,[[["self"]],["bool"]]],[11,"opcode","","",4,[[["self"]],["u16"]]],[11,"child","","",4,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",4,N],[11,"into_raw","","",4,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",4,N],[11,"as_raw_c_in","","",4,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",498,[[["self"]],["bool"]]],[11,"opcode","","",498,[[["self"]],["u16"]]],[11,"child","","",498,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",498,N],[11,"into_raw","","",498,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",498,N],[11,"as_raw_c_in","","",498,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",6,[[["self"]],["bool"]]],[11,"opcode","","",6,[[["self"]],["u16"]]],[11,"child","","",6,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",6,N],[11,"into_raw","","",6,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",6,N],[11,"as_raw_c_in","","",6,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",10,[[["self"]],["bool"]]],[11,"opcode","","",10,[[["self"]],["u16"]]],[11,"child","","",10,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",10,N],[11,"into_raw","","",10,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",10,N],[11,"as_raw_c_in","","",10,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",11,[[["self"]],["bool"]]],[11,"opcode","","",11,[[["self"]],["u16"]]],[11,"child","","",11,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",11,N],[11,"into_raw","","",11,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",11,N],[11,"as_raw_c_in","","",11,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",501,[[["self"]],["bool"]]],[11,"opcode","","",501,[[["self"]],["u16"]]],[11,"child","","",501,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",501,N],[11,"into_raw","","",501,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",501,N],[11,"as_raw_c_in","","",501,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",12,[[["self"]],["bool"]]],[11,"opcode","","",12,[[["self"]],["u16"]]],[11,"child","","",12,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",12,N],[11,"into_raw","","",12,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",12,N],[11,"as_raw_c_in","","",12,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",13,[[["self"]],["bool"]]],[11,"opcode","","",13,[[["self"]],["u16"]]],[11,"child","","",13,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",13,N],[11,"into_raw","","",13,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",13,N],[11,"as_raw_c_in","","",13,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",503,[[["self"]],["bool"]]],[11,"opcode","","",503,[[["self"]],["u16"]]],[11,"child","","",503,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",503,N],[11,"into_raw","","",503,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",503,N],[11,"as_raw_c_in","","",503,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",15,[[["self"]],["bool"]]],[11,"opcode","","",15,[[["self"]],["u16"]]],[11,"child","","",15,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",15,N],[11,"into_raw","","",15,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",15,N],[11,"as_raw_c_in","","",15,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",505,[[["self"]],["bool"]]],[11,"opcode","","",505,[[["self"]],["u16"]]],[11,"child","","",505,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",505,N],[11,"into_raw","","",505,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",505,N],[11,"as_raw_c_in","","",505,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",17,[[["self"]],["bool"]]],[11,"opcode","","",17,[[["self"]],["u16"]]],[11,"child","","",17,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",17,N],[11,"into_raw","","",17,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",17,N],[11,"as_raw_c_in","","",17,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",507,[[["self"]],["bool"]]],[11,"opcode","","",507,[[["self"]],["u16"]]],[11,"child","","",507,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",507,N],[11,"into_raw","","",507,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",507,N],[11,"as_raw_c_in","","",507,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",18,N],[11,"into_raw","","",18,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",18,N],[11,"as_raw_c_in","","",18,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",509,[[["self"]],["bool"]]],[11,"opcode","","",509,[[["self"]],["u16"]]],[11,"child","","",509,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",509,N],[11,"into_raw","","",509,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",509,N],[11,"as_raw_c_in","","",509,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,[[["self"]],["bool"]]],[11,"opcode","","",19,[[["self"]],["u16"]]],[11,"child","","",19,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",19,N],[11,"into_raw","","",19,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",19,N],[11,"as_raw_c_in","","",19,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",20,[[["self"]],["bool"]]],[11,"opcode","","",20,[[["self"]],["u16"]]],[11,"child","","",20,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",20,N],[11,"into_raw","","",20,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",20,N],[11,"as_raw_c_in","","",20,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",512,[[["self"]],["bool"]]],[11,"opcode","","",512,[[["self"]],["u16"]]],[11,"child","","",512,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",512,N],[11,"into_raw","","",512,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",512,N],[11,"as_raw_c_in","","",512,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",22,N],[11,"as_raw_c_in","","",22,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",514,[[["self"]],["bool"]]],[11,"opcode","","",514,[[["self"]],["u16"]]],[11,"child","","",514,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",514,N],[11,"into_raw","","",514,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",514,N],[11,"as_raw_c_in","","",514,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",26,N],[11,"into_raw","","",26,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",26,N],[11,"as_raw_c_in","","",26,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",516,[[["self"]],["bool"]]],[11,"opcode","","",516,[[["self"]],["u16"]]],[11,"child","","",516,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",516,N],[11,"into_raw","","",516,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",516,N],[11,"as_raw_c_in","","",516,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",28,N],[11,"into_raw","","",28,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",28,N],[11,"as_raw_c_in","","",28,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",29,N],[11,"into_raw","","",29,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",29,N],[11,"as_raw_c_in","","",29,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",519,[[["self"]],["bool"]]],[11,"opcode","","",519,[[["self"]],["u16"]]],[11,"child","","",519,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",519,N],[11,"into_raw","","",519,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",519,N],[11,"as_raw_c_in","","",519,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",30,N],[11,"into_raw","","",30,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",30,N],[11,"as_raw_c_in","","",30,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",31,N],[11,"into_raw","","",31,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",31,N],[11,"as_raw_c_in","","",31,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",521,[[["self"]],["bool"]]],[11,"opcode","","",521,[[["self"]],["u16"]]],[11,"child","","",521,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",521,N],[11,"into_raw","","",521,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",521,N],[11,"as_raw_c_in","","",521,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",33,N],[11,"as_raw_c_in","","",33,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",523,[[["self"]],["bool"]]],[11,"opcode","","",523,[[["self"]],["u16"]]],[11,"child","","",523,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",523,N],[11,"into_raw","","",523,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",523,N],[11,"as_raw_c_in","","",523,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",34,[[["self"]],["bool"]]],[11,"opcode","","",34,[[["self"]],["u16"]]],[11,"child","","",34,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",34,N],[11,"into_raw","","",34,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",34,N],[11,"as_raw_c_in","","",34,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",525,[[["self"]],["bool"]]],[11,"opcode","","",525,[[["self"]],["u16"]]],[11,"child","","",525,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",525,N],[11,"into_raw","","",525,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",525,N],[11,"as_raw_c_in","","",525,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",36,N],[11,"into_raw","","",36,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",36,N],[11,"as_raw_c_in","","",36,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",37,N],[11,"into_raw","","",37,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",39,N],[11,"into_raw","","",39,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",39,N],[11,"as_raw_c_in","","",39,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",528,[[["self"]],["bool"]]],[11,"opcode","","",528,[[["self"]],["u16"]]],[11,"child","","",528,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",528,N],[11,"into_raw","","",528,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",528,N],[11,"as_raw_c_in","","",528,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",40,[[["self"]],["bool"]]],[11,"opcode","","",40,[[["self"]],["u16"]]],[11,"child","","",40,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",40,N],[11,"into_raw","","",40,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",40,N],[11,"as_raw_c_in","","",40,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",41,[[["self"]],["bool"]]],[11,"opcode","","",41,[[["self"]],["u16"]]],[11,"child","","",41,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",41,N],[11,"into_raw","","",41,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",41,N],[11,"as_raw_c_in","","",41,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",531,[[["self"]],["bool"]]],[11,"opcode","","",531,[[["self"]],["u16"]]],[11,"child","","",531,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",531,N],[11,"into_raw","","",531,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",531,N],[11,"as_raw_c_in","","",531,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",45,N],[11,"into_raw","","",45,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",45,N],[11,"as_raw_c_in","","",45,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",46,[[["self"]],["bool"]]],[11,"opcode","","",46,[[["self"]],["u16"]]],[11,"child","","",46,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",46,N],[11,"into_raw","","",46,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",46,N],[11,"as_raw_c_in","","",46,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",49,[[["self"]],["bool"]]],[11,"opcode","","",49,[[["self"]],["u16"]]],[11,"child","","",49,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",49,N],[11,"into_raw","","",49,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",49,N],[11,"as_raw_c_in","","",49,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",534,[[["self"]],["bool"]]],[11,"opcode","","",534,[[["self"]],["u16"]]],[11,"child","","",534,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",534,N],[11,"into_raw","","",534,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",534,N],[11,"as_raw_c_in","","",534,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",50,N],[11,"into_raw","","",50,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",50,N],[11,"as_raw_c_in","","",50,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",51,N],[11,"into_raw","","",51,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",52,[[["self"]],["bool"]]],[11,"opcode","","",52,[[["self"]],["u16"]]],[11,"child","","",52,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",52,N],[11,"into_raw","","",52,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",52,N],[11,"as_raw_c_in","","",52,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",53,N],[11,"into_raw","","",53,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",53,N],[11,"as_raw_c_in","","",53,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",57,[[["self"]],["bool"]]],[11,"opcode","","",57,[[["self"]],["u16"]]],[11,"child","","",57,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",57,N],[11,"into_raw","","",57,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",57,N],[11,"as_raw_c_in","","",57,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",58,[[["self"]],["bool"]]],[11,"opcode","","",58,[[["self"]],["u16"]]],[11,"child","","",58,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",58,N],[11,"into_raw","","",58,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",58,N],[11,"as_raw_c_in","","",58,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",60,N],[11,"into_raw","","",60,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",61,N],[11,"into_raw","","",61,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",61,N],[11,"as_raw_c_in","","",61,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",64,[[["self"]],["bool"]]],[11,"opcode","","",64,[[["self"]],["u16"]]],[11,"child","","",64,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",64,N],[11,"into_raw","","",64,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",64,N],[11,"as_raw_c_in","","",64,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",65,[[["self"]],["bool"]]],[11,"opcode","","",65,[[["self"]],["u16"]]],[11,"child","","",65,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",65,N],[11,"into_raw","","",65,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",65,N],[11,"as_raw_c_in","","",65,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",67,N],[11,"into_raw","","",67,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",541,[[["self"]],["bool"]]],[11,"opcode","","",541,[[["self"]],["u16"]]],[11,"child","","",541,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",541,N],[11,"into_raw","","",541,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",541,N],[11,"as_raw_c_in","","",541,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",70,[[["self"]],["bool"]]],[11,"opcode","","",70,[[["self"]],["u16"]]],[11,"child","","",70,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",70,N],[11,"into_raw","","",70,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",70,N],[11,"as_raw_c_in","","",70,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",543,[[["self"]],["bool"]]],[11,"opcode","","",543,[[["self"]],["u16"]]],[11,"child","","",543,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",543,N],[11,"into_raw","","",543,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",543,N],[11,"as_raw_c_in","","",543,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",545,[[["self"]],["bool"]]],[11,"opcode","","",545,[[["self"]],["u16"]]],[11,"child","","",545,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",545,N],[11,"into_raw","","",545,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",545,N],[11,"as_raw_c_in","","",545,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",72,[[["self"]],["bool"]]],[11,"opcode","","",72,[[["self"]],["u16"]]],[11,"child","","",72,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",72,N],[11,"into_raw","","",72,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",72,N],[11,"as_raw_c_in","","",72,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",74,[[["self"]],["bool"]]],[11,"opcode","","",74,[[["self"]],["u16"]]],[11,"child","","",74,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",74,N],[11,"into_raw","","",74,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",74,N],[11,"as_raw_c_in","","",74,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",547,[[["self"]],["bool"]]],[11,"opcode","","",547,[[["self"]],["u16"]]],[11,"child","","",547,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",547,N],[11,"into_raw","","",547,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",547,N],[11,"as_raw_c_in","","",547,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",76,[[["self"]],["bool"]]],[11,"opcode","","",76,[[["self"]],["u16"]]],[11,"child","","",76,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",76,N],[11,"into_raw","","",76,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",76,N],[11,"as_raw_c_in","","",76,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",549,[[["self"]],["bool"]]],[11,"opcode","","",549,[[["self"]],["u16"]]],[11,"child","","",549,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",549,N],[11,"into_raw","","",549,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",549,N],[11,"as_raw_c_in","","",549,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",551,[[["self"]],["bool"]]],[11,"opcode","","",551,[[["self"]],["u16"]]],[11,"child","","",551,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",551,N],[11,"into_raw","","",551,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",551,N],[11,"as_raw_c_in","","",551,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",77,[[["self"]],["bool"]]],[11,"opcode","","",77,[[["self"]],["u16"]]],[11,"child","","",77,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",77,N],[11,"into_raw","","",77,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",77,N],[11,"as_raw_c_in","","",77,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",80,[[["self"]],["bool"]]],[11,"opcode","","",80,[[["self"]],["u16"]]],[11,"child","","",80,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",80,N],[11,"into_raw","","",80,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",80,N],[11,"as_raw_c_in","","",80,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",553,[[["self"]],["bool"]]],[11,"opcode","","",553,[[["self"]],["u16"]]],[11,"child","","",553,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",553,N],[11,"into_raw","","",553,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",553,N],[11,"as_raw_c_in","","",553,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",82,N],[11,"into_raw","","",82,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",82,N],[11,"as_raw_c_in","","",82,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",83,[[["self"]],["bool"]]],[11,"opcode","","",83,[[["self"]],["u16"]]],[11,"child","","",83,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",83,N],[11,"into_raw","","",83,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",83,N],[11,"as_raw_c_in","","",83,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",85,[[["self"]],["bool"]]],[11,"opcode","","",85,[[["self"]],["u16"]]],[11,"child","","",85,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",85,N],[11,"into_raw","","",85,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",85,N],[11,"as_raw_c_in","","",85,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",86,[[["self"]],["bool"]]],[11,"opcode","","",86,[[["self"]],["u16"]]],[11,"child","","",86,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",86,N],[11,"into_raw","","",86,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",86,N],[11,"as_raw_c_in","","",86,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",90,[[["self"]],["bool"]]],[11,"opcode","","",90,[[["self"]],["u16"]]],[11,"child","","",90,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",90,N],[11,"into_raw","","",90,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",90,N],[11,"as_raw_c_in","","",90,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",557,[[["self"]],["bool"]]],[11,"opcode","","",557,[[["self"]],["u16"]]],[11,"child","","",557,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",557,N],[11,"into_raw","","",557,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",557,N],[11,"as_raw_c_in","","",557,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",91,[[["self"]],["bool"]]],[11,"opcode","","",91,[[["self"]],["u16"]]],[11,"child","","",91,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",91,N],[11,"into_raw","","",91,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",91,N],[11,"as_raw_c_in","","",91,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",92,[[["self"]],["bool"]]],[11,"opcode","","",92,[[["self"]],["u16"]]],[11,"child","","",92,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",92,N],[11,"into_raw","","",92,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",92,N],[11,"as_raw_c_in","","",92,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",93,[[["self"]],["bool"]]],[11,"opcode","","",93,[[["self"]],["u16"]]],[11,"child","","",93,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",93,N],[11,"into_raw","","",93,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",93,N],[11,"as_raw_c_in","","",93,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",94,[[["self"]],["bool"]]],[11,"opcode","","",94,[[["self"]],["u16"]]],[11,"child","","",94,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",94,N],[11,"into_raw","","",94,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",94,N],[11,"as_raw_c_in","","",94,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",95,[[["self"]],["bool"]]],[11,"opcode","","",95,[[["self"]],["u16"]]],[11,"child","","",95,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",95,N],[11,"into_raw","","",95,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",95,N],[11,"as_raw_c_in","","",95,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",561,[[["self"]],["bool"]]],[11,"opcode","","",561,[[["self"]],["u16"]]],[11,"child","","",561,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",561,N],[11,"into_raw","","",561,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",561,N],[11,"as_raw_c_in","","",561,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"child","","",97,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",97,N],[11,"into_raw","","",97,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",97,N],[11,"as_raw_c_in","","",97,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",98,[[["self"]],["bool"]]],[11,"opcode","","",98,[[["self"]],["u16"]]],[11,"child","","",98,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",98,N],[11,"into_raw","","",98,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",98,N],[11,"as_raw_c_in","","",98,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",100,[[["self"]],["bool"]]],[11,"opcode","","",100,[[["self"]],["u16"]]],[11,"child","","",100,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",100,N],[11,"into_raw","","",100,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",100,N],[11,"as_raw_c_in","","",100,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",101,N],[11,"into_raw","","",101,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",101,N],[11,"as_raw_c_in","","",101,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",103,[[["self"]],["bool"]]],[11,"opcode","","",103,[[["self"]],["u16"]]],[11,"child","","",103,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",103,N],[11,"into_raw","","",103,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",103,N],[11,"as_raw_c_in","","",103,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",565,[[["self"]],["bool"]]],[11,"opcode","","",565,[[["self"]],["u16"]]],[11,"child","","",565,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",565,N],[11,"into_raw","","",565,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",565,N],[11,"as_raw_c_in","","",565,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",104,[[["self"]],["bool"]]],[11,"opcode","","",104,[[["self"]],["u16"]]],[11,"child","","",104,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",104,N],[11,"into_raw","","",104,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",104,N],[11,"as_raw_c_in","","",104,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",105,[[["self"]],["bool"]]],[11,"opcode","","",105,[[["self"]],["u16"]]],[11,"child","","",105,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",105,N],[11,"into_raw","","",105,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",105,N],[11,"as_raw_c_in","","",105,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",106,[[["self"]],["bool"]]],[11,"opcode","","",106,[[["self"]],["u16"]]],[11,"child","","",106,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",106,N],[11,"into_raw","","",106,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",106,N],[11,"as_raw_c_in","","",106,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",107,[[["self"]],["bool"]]],[11,"opcode","","",107,[[["self"]],["u16"]]],[11,"child","","",107,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",107,N],[11,"into_raw","","",107,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",107,N],[11,"as_raw_c_in","","",107,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",108,[[["self"]],["bool"]]],[11,"opcode","","",108,[[["self"]],["u16"]]],[11,"child","","",108,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",108,N],[11,"into_raw","","",108,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",108,N],[11,"as_raw_c_in","","",108,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",569,[[["self"]],["bool"]]],[11,"opcode","","",569,[[["self"]],["u16"]]],[11,"child","","",569,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",569,N],[11,"into_raw","","",569,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",569,N],[11,"as_raw_c_in","","",569,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",110,[[["self"]],["bool"]]],[11,"opcode","","",110,[[["self"]],["u16"]]],[11,"child","","",110,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",110,N],[11,"into_raw","","",110,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",110,N],[11,"as_raw_c_in","","",110,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",111,[[["self"]],["bool"]]],[11,"opcode","","",111,[[["self"]],["u16"]]],[11,"child","","",111,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",111,N],[11,"into_raw","","",111,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",111,N],[11,"as_raw_c_in","","",111,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",113,[[["self"]],["bool"]]],[11,"opcode","","",113,[[["self"]],["u16"]]],[11,"child","","",113,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",113,N],[11,"into_raw","","",113,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",113,N],[11,"as_raw_c_in","","",113,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",114,[[["self"]],["bool"]]],[11,"opcode","","",114,[[["self"]],["u16"]]],[11,"child","","",114,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",114,N],[11,"into_raw","","",114,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",114,N],[11,"as_raw_c_in","","",114,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",116,[[["self"]],["bool"]]],[11,"opcode","","",116,[[["self"]],["u16"]]],[11,"child","","",116,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",116,N],[11,"into_raw","","",116,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",116,N],[11,"as_raw_c_in","","",116,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",117,[[["self"]],["bool"]]],[11,"opcode","","",117,[[["self"]],["u16"]]],[11,"child","","",117,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",117,N],[11,"into_raw","","",117,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",117,N],[11,"as_raw_c_in","","",117,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",119,[[["self"]],["bool"]]],[11,"opcode","","",119,[[["self"]],["u16"]]],[11,"child","","",119,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",119,N],[11,"into_raw","","",119,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",119,N],[11,"as_raw_c_in","","",119,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",574,[[["self"]],["bool"]]],[11,"opcode","","",574,[[["self"]],["u16"]]],[11,"child","","",574,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",574,N],[11,"into_raw","","",574,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",574,N],[11,"as_raw_c_in","","",574,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",120,[[["self"]],["bool"]]],[11,"opcode","","",120,[[["self"]],["u16"]]],[11,"child","","",120,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",120,N],[11,"into_raw","","",120,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",120,N],[11,"as_raw_c_in","","",120,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",121,[[["self"]],["bool"]]],[11,"opcode","","",121,[[["self"]],["u16"]]],[11,"child","","",121,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",121,N],[11,"into_raw","","",121,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",121,N],[11,"as_raw_c_in","","",121,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",122,[[["self"]],["bool"]]],[11,"opcode","","",122,[[["self"]],["u16"]]],[11,"child","","",122,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",122,N],[11,"into_raw","","",122,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",122,N],[11,"as_raw_c_in","","",122,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",123,[[["self"]],["bool"]]],[11,"opcode","","",123,[[["self"]],["u16"]]],[11,"child","","",123,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",123,N],[11,"into_raw","","",123,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",123,N],[11,"as_raw_c_in","","",123,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",124,[[["self"]],["bool"]]],[11,"opcode","","",124,[[["self"]],["u16"]]],[11,"child","","",124,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",124,N],[11,"into_raw","","",124,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",124,N],[11,"as_raw_c_in","","",124,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",125,[[["self"]],["bool"]]],[11,"opcode","","",125,[[["self"]],["u16"]]],[11,"child","","",125,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",125,N],[11,"into_raw","","",125,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",125,N],[11,"as_raw_c_in","","",125,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",126,[[["self"]],["bool"]]],[11,"opcode","","",126,[[["self"]],["u16"]]],[11,"child","","",126,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",126,N],[11,"into_raw","","",126,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",126,N],[11,"as_raw_c_in","","",126,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",579,[[["self"]],["bool"]]],[11,"opcode","","",579,[[["self"]],["u16"]]],[11,"child","","",579,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",579,N],[11,"into_raw","","",579,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",579,N],[11,"as_raw_c_in","","",579,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",128,[[["self"]],["bool"]]],[11,"opcode","","",128,[[["self"]],["u16"]]],[11,"child","","",128,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",128,N],[11,"into_raw","","",128,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",128,N],[11,"as_raw_c_in","","",128,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",129,[[["self"]],["bool"]]],[11,"opcode","","",129,[[["self"]],["u16"]]],[11,"child","","",129,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",129,N],[11,"into_raw","","",129,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",129,N],[11,"as_raw_c_in","","",129,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",131,[[["self"]],["bool"]]],[11,"opcode","","",131,[[["self"]],["u16"]]],[11,"child","","",131,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",131,N],[11,"into_raw","","",131,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",131,N],[11,"as_raw_c_in","","",131,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",582,[[["self"]],["bool"]]],[11,"opcode","","",582,[[["self"]],["u16"]]],[11,"child","","",582,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",582,N],[11,"into_raw","","",582,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",582,N],[11,"as_raw_c_in","","",582,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",132,[[["self"]],["bool"]]],[11,"opcode","","",132,[[["self"]],["u16"]]],[11,"child","","",132,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",132,N],[11,"into_raw","","",132,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",132,N],[11,"as_raw_c_in","","",132,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",133,[[["self"]],["bool"]]],[11,"opcode","","",133,[[["self"]],["u16"]]],[11,"child","","",133,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",133,N],[11,"into_raw","","",133,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",133,N],[11,"as_raw_c_in","","",133,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",134,[[["self"]],["bool"]]],[11,"opcode","","",134,[[["self"]],["u16"]]],[11,"child","","",134,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",134,N],[11,"into_raw","","",134,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",134,N],[11,"as_raw_c_in","","",134,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",585,[[["self"]],["bool"]]],[11,"opcode","","",585,[[["self"]],["u16"]]],[11,"child","","",585,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",585,N],[11,"into_raw","","",585,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",585,N],[11,"as_raw_c_in","","",585,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",136,[[["self"]],["bool"]]],[11,"opcode","","",136,[[["self"]],["u16"]]],[11,"child","","",136,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",136,N],[11,"into_raw","","",136,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",136,N],[11,"as_raw_c_in","","",136,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",137,[[["self"]],["bool"]]],[11,"opcode","","",137,[[["self"]],["u16"]]],[11,"child","","",137,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",137,N],[11,"into_raw","","",137,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",137,N],[11,"as_raw_c_in","","",137,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",143,[[["self"]],["bool"]]],[11,"opcode","","",143,[[["self"]],["u16"]]],[11,"child","","",143,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",143,N],[11,"into_raw","","",143,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",143,N],[11,"as_raw_c_in","","",143,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",144,[[["self"]],["bool"]]],[11,"opcode","","",144,[[["self"]],["u16"]]],[11,"child","","",144,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",144,N],[11,"into_raw","","",144,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",144,N],[11,"as_raw_c_in","","",144,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",146,[[["self"]],["bool"]]],[11,"opcode","","",146,[[["self"]],["u16"]]],[11,"child","","",146,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",146,N],[11,"into_raw","","",146,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",146,N],[11,"as_raw_c_in","","",146,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",147,[[["self"]],["bool"]]],[11,"opcode","","",147,[[["self"]],["u16"]]],[11,"child","","",147,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",147,N],[11,"into_raw","","",147,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",147,N],[11,"as_raw_c_in","","",147,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",149,[[["self"]],["bool"]]],[11,"opcode","","",149,[[["self"]],["u16"]]],[11,"child","","",149,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",149,N],[11,"into_raw","","",149,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",149,N],[11,"as_raw_c_in","","",149,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",590,[[["self"]],["bool"]]],[11,"opcode","","",590,[[["self"]],["u16"]]],[11,"child","","",590,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",590,N],[11,"into_raw","","",590,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",590,N],[11,"as_raw_c_in","","",590,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",150,[[["self"]],["bool"]]],[11,"opcode","","",150,[[["self"]],["u16"]]],[11,"child","","",150,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",150,N],[11,"into_raw","","",150,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",150,N],[11,"as_raw_c_in","","",150,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",151,[[["self"]],["bool"]]],[11,"opcode","","",151,[[["self"]],["u16"]]],[11,"child","","",151,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",151,N],[11,"into_raw","","",151,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",151,N],[11,"as_raw_c_in","","",151,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",156,[[["self"]],["bool"]]],[11,"opcode","","",156,[[["self"]],["u16"]]],[11,"child","","",156,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",156,N],[11,"into_raw","","",156,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",156,N],[11,"as_raw_c_in","","",156,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",157,[[["self"]],["bool"]]],[11,"opcode","","",157,[[["self"]],["u16"]]],[11,"child","","",157,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",157,N],[11,"into_raw","","",157,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",157,N],[11,"as_raw_c_in","","",157,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",158,[[["self"]],["bool"]]],[11,"opcode","","",158,[[["self"]],["u16"]]],[11,"child","","",158,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",158,N],[11,"into_raw","","",158,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",158,N],[11,"as_raw_c_in","","",158,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",159,[[["self"]],["bool"]]],[11,"opcode","","",159,[[["self"]],["u16"]]],[11,"child","","",159,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",159,N],[11,"into_raw","","",159,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",159,N],[11,"as_raw_c_in","","",159,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",160,[[["self"]],["bool"]]],[11,"opcode","","",160,[[["self"]],["u16"]]],[11,"child","","",160,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",160,N],[11,"into_raw","","",160,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",160,N],[11,"as_raw_c_in","","",160,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",595,[[["self"]],["bool"]]],[11,"opcode","","",595,[[["self"]],["u16"]]],[11,"child","","",595,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",595,N],[11,"into_raw","","",595,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",595,N],[11,"as_raw_c_in","","",595,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",162,[[["self"]],["bool"]]],[11,"opcode","","",162,[[["self"]],["u16"]]],[11,"child","","",162,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",162,N],[11,"into_raw","","",162,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",162,N],[11,"as_raw_c_in","","",162,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",163,[[["self"]],["bool"]]],[11,"opcode","","",163,[[["self"]],["u16"]]],[11,"child","","",163,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",163,N],[11,"into_raw","","",163,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",163,N],[11,"as_raw_c_in","","",163,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",169,[[["self"]],["bool"]]],[11,"opcode","","",169,[[["self"]],["u16"]]],[11,"child","","",169,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",169,N],[11,"into_raw","","",169,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",169,N],[11,"as_raw_c_in","","",169,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",170,[[["self"]],["bool"]]],[11,"opcode","","",170,[[["self"]],["u16"]]],[11,"child","","",170,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",170,N],[11,"into_raw","","",170,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",170,N],[11,"as_raw_c_in","","",170,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",172,[[["self"]],["bool"]]],[11,"opcode","","",172,[[["self"]],["u16"]]],[11,"child","","",172,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",172,N],[11,"into_raw","","",172,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",172,N],[11,"as_raw_c_in","","",172,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",173,[[["self"]],["bool"]]],[11,"opcode","","",173,[[["self"]],["u16"]]],[11,"child","","",173,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",173,N],[11,"into_raw","","",173,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",173,N],[11,"as_raw_c_in","","",173,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",176,[[["self"]],["bool"]]],[11,"opcode","","",176,[[["self"]],["u16"]]],[11,"child","","",176,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",176,N],[11,"into_raw","","",176,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",176,N],[11,"as_raw_c_in","","",176,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",177,[[["self"]],["bool"]]],[11,"opcode","","",177,[[["self"]],["u16"]]],[11,"child","","",177,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",177,N],[11,"into_raw","","",177,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",177,N],[11,"as_raw_c_in","","",177,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",180,[[["self"]],["bool"]]],[11,"opcode","","",180,[[["self"]],["u16"]]],[11,"child","","",180,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",180,N],[11,"into_raw","","",180,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",180,N],[11,"as_raw_c_in","","",180,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",181,[[["self"]],["bool"]]],[11,"opcode","","",181,[[["self"]],["u16"]]],[11,"child","","",181,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",181,N],[11,"into_raw","","",181,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",181,N],[11,"as_raw_c_in","","",181,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",183,[[["self"]],["bool"]]],[11,"opcode","","",183,[[["self"]],["u16"]]],[11,"child","","",183,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",183,N],[11,"into_raw","","",183,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",183,N],[11,"as_raw_c_in","","",183,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",184,[[["self"]],["bool"]]],[11,"opcode","","",184,[[["self"]],["u16"]]],[11,"child","","",184,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",184,N],[11,"into_raw","","",184,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",184,N],[11,"as_raw_c_in","","",184,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",187,[[["self"]],["bool"]]],[11,"opcode","","",187,[[["self"]],["u16"]]],[11,"child","","",187,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",187,N],[11,"into_raw","","",187,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",187,N],[11,"as_raw_c_in","","",187,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",188,[[["self"]],["bool"]]],[11,"opcode","","",188,[[["self"]],["u16"]]],[11,"child","","",188,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",188,N],[11,"into_raw","","",188,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",188,N],[11,"as_raw_c_in","","",188,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",190,[[["self"]],["bool"]]],[11,"opcode","","",190,[[["self"]],["u16"]]],[11,"child","","",190,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",190,N],[11,"into_raw","","",190,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",190,N],[11,"as_raw_c_in","","",190,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",604,[[["self"]],["bool"]]],[11,"opcode","","",604,[[["self"]],["u16"]]],[11,"child","","",604,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",604,N],[11,"into_raw","","",604,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",604,N],[11,"as_raw_c_in","","",604,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",191,[[["self"]],["bool"]]],[11,"opcode","","",191,[[["self"]],["u16"]]],[11,"child","","",191,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",191,N],[11,"into_raw","","",191,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",191,N],[11,"as_raw_c_in","","",191,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",192,[[["self"]],["bool"]]],[11,"opcode","","",192,[[["self"]],["u16"]]],[11,"child","","",192,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",192,N],[11,"into_raw","","",192,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",192,N],[11,"as_raw_c_in","","",192,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",197,[[["self"]],["bool"]]],[11,"opcode","","",197,[[["self"]],["u16"]]],[11,"child","","",197,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",197,N],[11,"into_raw","","",197,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",197,N],[11,"as_raw_c_in","","",197,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",198,[[["self"]],["bool"]]],[11,"opcode","","",198,[[["self"]],["u16"]]],[11,"child","","",198,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",198,N],[11,"into_raw","","",198,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",198,N],[11,"as_raw_c_in","","",198,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",199,[[["self"]],["bool"]]],[11,"opcode","","",199,[[["self"]],["u16"]]],[11,"child","","",199,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",199,N],[11,"into_raw","","",199,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",199,N],[11,"as_raw_c_in","","",199,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",200,[[["self"]],["bool"]]],[11,"opcode","","",200,[[["self"]],["u16"]]],[11,"child","","",200,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",200,N],[11,"into_raw","","",200,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",200,N],[11,"as_raw_c_in","","",200,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",202,[[["self"]],["bool"]]],[11,"opcode","","",202,[[["self"]],["u16"]]],[11,"child","","",202,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",202,N],[11,"into_raw","","",202,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",202,N],[11,"as_raw_c_in","","",202,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",203,[[["self"]],["bool"]]],[11,"opcode","","",203,[[["self"]],["u16"]]],[11,"child","","",203,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",203,N],[11,"into_raw","","",203,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",203,N],[11,"as_raw_c_in","","",203,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",205,[[["self"]],["bool"]]],[11,"opcode","","",205,[[["self"]],["u16"]]],[11,"child","","",205,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",205,N],[11,"into_raw","","",205,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",205,N],[11,"as_raw_c_in","","",205,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",206,[[["self"]],["bool"]]],[11,"opcode","","",206,[[["self"]],["u16"]]],[11,"child","","",206,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",206,N],[11,"into_raw","","",206,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",206,N],[11,"as_raw_c_in","","",206,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",207,[[["self"]],["bool"]]],[11,"opcode","","",207,[[["self"]],["u16"]]],[11,"child","","",207,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",207,N],[11,"into_raw","","",207,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",207,N],[11,"as_raw_c_in","","",207,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",208,[[["self"]],["bool"]]],[11,"opcode","","",208,[[["self"]],["u16"]]],[11,"child","","",208,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",208,N],[11,"into_raw","","",208,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",208,N],[11,"as_raw_c_in","","",208,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",210,[[["self"]],["bool"]]],[11,"opcode","","",210,[[["self"]],["u16"]]],[11,"child","","",210,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",210,N],[11,"into_raw","","",210,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",210,N],[11,"as_raw_c_in","","",210,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",211,[[["self"]],["bool"]]],[11,"opcode","","",211,[[["self"]],["u16"]]],[11,"child","","",211,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",211,N],[11,"into_raw","","",211,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",211,N],[11,"as_raw_c_in","","",211,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",216,[[["self"]],["bool"]]],[11,"opcode","","",216,[[["self"]],["u16"]]],[11,"child","","",216,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",216,N],[11,"into_raw","","",216,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",216,N],[11,"as_raw_c_in","","",216,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",217,[[["self"]],["bool"]]],[11,"opcode","","",217,[[["self"]],["u16"]]],[11,"child","","",217,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",217,N],[11,"into_raw","","",217,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",217,N],[11,"as_raw_c_in","","",217,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",219,[[["self"]],["bool"]]],[11,"opcode","","",219,[[["self"]],["u16"]]],[11,"child","","",219,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",219,N],[11,"into_raw","","",219,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",219,N],[11,"as_raw_c_in","","",219,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",614,[[["self"]],["bool"]]],[11,"opcode","","",614,[[["self"]],["u16"]]],[11,"child","","",614,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",614,N],[11,"into_raw","","",614,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",614,N],[11,"as_raw_c_in","","",614,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",225,[[["self"]],["bool"]]],[11,"opcode","","",225,[[["self"]],["u16"]]],[11,"child","","",225,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",225,N],[11,"into_raw","","",225,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",225,N],[11,"as_raw_c_in","","",225,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",226,[[["self"]],["bool"]]],[11,"opcode","","",226,[[["self"]],["u16"]]],[11,"child","","",226,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",226,N],[11,"into_raw","","",226,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",226,N],[11,"as_raw_c_in","","",226,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",227,[[["self"]],["bool"]]],[11,"opcode","","",227,[[["self"]],["u16"]]],[11,"child","","",227,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",227,N],[11,"into_raw","","",227,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",227,N],[11,"as_raw_c_in","","",227,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",617,[[["self"]],["bool"]]],[11,"opcode","","",617,[[["self"]],["u16"]]],[11,"child","","",617,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",617,N],[11,"into_raw","","",617,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",617,N],[11,"as_raw_c_in","","",617,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",230,[[["self"]],["bool"]]],[11,"opcode","","",230,[[["self"]],["u16"]]],[11,"child","","",230,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",230,N],[11,"into_raw","","",230,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",230,N],[11,"as_raw_c_in","","",230,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",231,[[["self"]],["bool"]]],[11,"opcode","","",231,[[["self"]],["u16"]]],[11,"child","","",231,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",231,N],[11,"into_raw","","",231,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",231,N],[11,"as_raw_c_in","","",231,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",233,[[["self"]],["bool"]]],[11,"opcode","","",233,[[["self"]],["u16"]]],[11,"child","","",233,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",233,N],[11,"into_raw","","",233,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",233,N],[11,"as_raw_c_in","","",233,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",620,[[["self"]],["bool"]]],[11,"opcode","","",620,[[["self"]],["u16"]]],[11,"child","","",620,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",620,N],[11,"into_raw","","",620,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",620,N],[11,"as_raw_c_in","","",620,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",237,[[["self"]],["bool"]]],[11,"opcode","","",237,[[["self"]],["u16"]]],[11,"child","","",237,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",237,N],[11,"into_raw","","",237,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",237,N],[11,"as_raw_c_in","","",237,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",238,[[["self"]],["bool"]]],[11,"opcode","","",238,[[["self"]],["u16"]]],[11,"child","","",238,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",238,N],[11,"into_raw","","",238,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",238,N],[11,"as_raw_c_in","","",238,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",239,[[["self"]],["bool"]]],[11,"opcode","","",239,[[["self"]],["u16"]]],[11,"child","","",239,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",239,N],[11,"into_raw","","",239,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",239,N],[11,"as_raw_c_in","","",239,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",623,[[["self"]],["bool"]]],[11,"opcode","","",623,[[["self"]],["u16"]]],[11,"child","","",623,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",623,N],[11,"into_raw","","",623,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",623,N],[11,"as_raw_c_in","","",623,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",242,[[["self"]],["bool"]]],[11,"opcode","","",242,[[["self"]],["u16"]]],[11,"child","","",242,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",242,N],[11,"into_raw","","",242,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",242,N],[11,"as_raw_c_in","","",242,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",625,[[["self"]],["bool"]]],[11,"opcode","","",625,[[["self"]],["u16"]]],[11,"child","","",625,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",625,N],[11,"into_raw","","",625,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",625,N],[11,"as_raw_c_in","","",625,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",246,[[["self"]],["bool"]]],[11,"opcode","","",246,[[["self"]],["u16"]]],[11,"child","","",246,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",246,N],[11,"into_raw","","",246,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",246,N],[11,"as_raw_c_in","","",246,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",247,[[["self"]],["bool"]]],[11,"opcode","","",247,[[["self"]],["u16"]]],[11,"child","","",247,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",247,N],[11,"into_raw","","",247,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",247,N],[11,"as_raw_c_in","","",247,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",249,[[["self"]],["bool"]]],[11,"opcode","","",249,[[["self"]],["u16"]]],[11,"child","","",249,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",249,N],[11,"into_raw","","",249,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",249,N],[11,"as_raw_c_in","","",249,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",628,[[["self"]],["bool"]]],[11,"opcode","","",628,[[["self"]],["u16"]]],[11,"child","","",628,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",628,N],[11,"into_raw","","",628,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",628,N],[11,"as_raw_c_in","","",628,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",252,[[["self"]],["bool"]]],[11,"opcode","","",252,[[["self"]],["u16"]]],[11,"child","","",252,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",252,N],[11,"into_raw","","",252,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",252,N],[11,"as_raw_c_in","","",252,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",253,[[["self"]],["bool"]]],[11,"opcode","","",253,[[["self"]],["u16"]]],[11,"child","","",253,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",253,N],[11,"into_raw","","",253,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",253,N],[11,"as_raw_c_in","","",253,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",254,[[["self"]],["bool"]]],[11,"opcode","","",254,[[["self"]],["u16"]]],[11,"child","","",254,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",254,N],[11,"into_raw","","",254,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",254,N],[11,"as_raw_c_in","","",254,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",631,[[["self"]],["bool"]]],[11,"opcode","","",631,[[["self"]],["u16"]]],[11,"child","","",631,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",631,N],[11,"into_raw","","",631,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",631,N],[11,"as_raw_c_in","","",631,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",256,[[["self"]],["bool"]]],[11,"opcode","","",256,[[["self"]],["u16"]]],[11,"child","","",256,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",256,N],[11,"into_raw","","",256,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",256,N],[11,"as_raw_c_in","","",256,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",633,[[["self"]],["bool"]]],[11,"opcode","","",633,[[["self"]],["u16"]]],[11,"child","","",633,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",633,N],[11,"into_raw","","",633,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",633,N],[11,"as_raw_c_in","","",633,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",258,[[["self"]],["bool"]]],[11,"opcode","","",258,[[["self"]],["u16"]]],[11,"child","","",258,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",258,N],[11,"into_raw","","",258,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",258,N],[11,"as_raw_c_in","","",258,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",259,[[["self"]],["bool"]]],[11,"opcode","","",259,[[["self"]],["u16"]]],[11,"child","","",259,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",259,N],[11,"into_raw","","",259,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",259,N],[11,"as_raw_c_in","","",259,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",261,[[["self"]],["bool"]]],[11,"opcode","","",261,[[["self"]],["u16"]]],[11,"child","","",261,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",261,N],[11,"into_raw","","",261,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",261,N],[11,"as_raw_c_in","","",261,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",262,[[["self"]],["bool"]]],[11,"opcode","","",262,[[["self"]],["u16"]]],[11,"child","","",262,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",262,N],[11,"into_raw","","",262,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",262,N],[11,"as_raw_c_in","","",262,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",264,[[["self"]],["bool"]]],[11,"opcode","","",264,[[["self"]],["u16"]]],[11,"child","","",264,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",264,N],[11,"into_raw","","",264,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",264,N],[11,"as_raw_c_in","","",264,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",637,[[["self"]],["bool"]]],[11,"opcode","","",637,[[["self"]],["u16"]]],[11,"child","","",637,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",637,N],[11,"into_raw","","",637,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",637,N],[11,"as_raw_c_in","","",637,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",265,[[["self"]],["bool"]]],[11,"opcode","","",265,[[["self"]],["u16"]]],[11,"child","","",265,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",265,N],[11,"into_raw","","",265,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",265,N],[11,"as_raw_c_in","","",265,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",639,[[["self"]],["bool"]]],[11,"opcode","","",639,[[["self"]],["u16"]]],[11,"child","","",639,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",639,N],[11,"into_raw","","",639,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",639,N],[11,"as_raw_c_in","","",639,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",266,[[["self"]],["bool"]]],[11,"opcode","","",266,[[["self"]],["u16"]]],[11,"child","","",266,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",266,N],[11,"into_raw","","",266,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",266,N],[11,"as_raw_c_in","","",266,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",267,[[["self"]],["bool"]]],[11,"opcode","","",267,[[["self"]],["u16"]]],[11,"child","","",267,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",267,N],[11,"into_raw","","",267,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",267,N],[11,"as_raw_c_in","","",267,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",268,[[["self"]],["bool"]]],[11,"opcode","","",268,[[["self"]],["u16"]]],[11,"child","","",268,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",268,N],[11,"into_raw","","",268,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",268,N],[11,"as_raw_c_in","","",268,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",269,[[["self"]],["bool"]]],[11,"opcode","","",269,[[["self"]],["u16"]]],[11,"child","","",269,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",269,N],[11,"into_raw","","",269,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",269,N],[11,"as_raw_c_in","","",269,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",270,[[["self"]],["bool"]]],[11,"opcode","","",270,[[["self"]],["u16"]]],[11,"child","","",270,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",270,N],[11,"into_raw","","",270,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",270,N],[11,"as_raw_c_in","","",270,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",643,[[["self"]],["bool"]]],[11,"opcode","","",643,[[["self"]],["u16"]]],[11,"child","","",643,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",643,N],[11,"into_raw","","",643,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",643,N],[11,"as_raw_c_in","","",643,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",272,[[["self"]],["bool"]]],[11,"opcode","","",272,[[["self"]],["u16"]]],[11,"child","","",272,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",272,N],[11,"into_raw","","",272,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",272,N],[11,"as_raw_c_in","","",272,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",645,[[["self"]],["bool"]]],[11,"opcode","","",645,[[["self"]],["u16"]]],[11,"child","","",645,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",645,N],[11,"into_raw","","",645,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",645,N],[11,"as_raw_c_in","","",645,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",274,[[["self"]],["bool"]]],[11,"opcode","","",274,[[["self"]],["u16"]]],[11,"child","","",274,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",274,N],[11,"into_raw","","",274,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",274,N],[11,"as_raw_c_in","","",274,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",275,[[["self"]],["bool"]]],[11,"opcode","","",275,[[["self"]],["u16"]]],[11,"child","","",275,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",275,N],[11,"into_raw","","",275,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",275,N],[11,"as_raw_c_in","","",275,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",277,[[["self"]],["bool"]]],[11,"opcode","","",277,[[["self"]],["u16"]]],[11,"child","","",277,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",277,N],[11,"into_raw","","",277,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",277,N],[11,"as_raw_c_in","","",277,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",278,[[["self"]],["bool"]]],[11,"opcode","","",278,[[["self"]],["u16"]]],[11,"child","","",278,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",278,N],[11,"into_raw","","",278,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",278,N],[11,"as_raw_c_in","","",278,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",280,[[["self"]],["bool"]]],[11,"opcode","","",280,[[["self"]],["u16"]]],[11,"child","","",280,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",280,N],[11,"into_raw","","",280,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",280,N],[11,"as_raw_c_in","","",280,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",649,[[["self"]],["bool"]]],[11,"opcode","","",649,[[["self"]],["u16"]]],[11,"child","","",649,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",649,N],[11,"into_raw","","",649,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",649,N],[11,"as_raw_c_in","","",649,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",281,[[["self"]],["bool"]]],[11,"opcode","","",281,[[["self"]],["u16"]]],[11,"child","","",281,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",281,N],[11,"into_raw","","",281,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",281,N],[11,"as_raw_c_in","","",281,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",651,[[["self"]],["bool"]]],[11,"opcode","","",651,[[["self"]],["u16"]]],[11,"child","","",651,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",651,N],[11,"into_raw","","",651,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",651,N],[11,"as_raw_c_in","","",651,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",282,[[["self"]],["bool"]]],[11,"opcode","","",282,[[["self"]],["u16"]]],[11,"child","","",282,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",282,N],[11,"into_raw","","",282,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",282,N],[11,"as_raw_c_in","","",282,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",283,[[["self"]],["bool"]]],[11,"opcode","","",283,[[["self"]],["u16"]]],[11,"child","","",283,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",283,N],[11,"into_raw","","",283,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",283,N],[11,"as_raw_c_in","","",283,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",284,[[["self"]],["bool"]]],[11,"opcode","","",284,[[["self"]],["u16"]]],[11,"child","","",284,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",284,N],[11,"into_raw","","",284,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",284,N],[11,"as_raw_c_in","","",284,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",285,[[["self"]],["bool"]]],[11,"opcode","","",285,[[["self"]],["u16"]]],[11,"child","","",285,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",285,N],[11,"into_raw","","",285,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",285,N],[11,"as_raw_c_in","","",285,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",286,[[["self"]],["bool"]]],[11,"opcode","","",286,[[["self"]],["u16"]]],[11,"child","","",286,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",286,N],[11,"into_raw","","",286,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",286,N],[11,"as_raw_c_in","","",286,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",655,[[["self"]],["bool"]]],[11,"opcode","","",655,[[["self"]],["u16"]]],[11,"child","","",655,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",655,N],[11,"into_raw","","",655,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",655,N],[11,"as_raw_c_in","","",655,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",288,[[["self"]],["bool"]]],[11,"opcode","","",288,[[["self"]],["u16"]]],[11,"child","","",288,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",288,N],[11,"into_raw","","",288,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",288,N],[11,"as_raw_c_in","","",288,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",289,[[["self"]],["bool"]]],[11,"opcode","","",289,[[["self"]],["u16"]]],[11,"child","","",289,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",289,N],[11,"into_raw","","",289,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",289,N],[11,"as_raw_c_in","","",289,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",291,[[["self"]],["bool"]]],[11,"opcode","","",291,[[["self"]],["u16"]]],[11,"child","","",291,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",291,N],[11,"into_raw","","",291,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",291,N],[11,"as_raw_c_in","","",291,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",658,[[["self"]],["bool"]]],[11,"opcode","","",658,[[["self"]],["u16"]]],[11,"child","","",658,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",658,N],[11,"into_raw","","",658,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",658,N],[11,"as_raw_c_in","","",658,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",292,[[["self"]],["bool"]]],[11,"opcode","","",292,[[["self"]],["u16"]]],[11,"child","","",292,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",292,N],[11,"into_raw","","",292,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",292,N],[11,"as_raw_c_in","","",292,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",293,[[["self"]],["bool"]]],[11,"opcode","","",293,[[["self"]],["u16"]]],[11,"child","","",293,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",293,N],[11,"into_raw","","",293,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",293,N],[11,"as_raw_c_in","","",293,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",296,[[["self"]],["bool"]]],[11,"opcode","","",296,[[["self"]],["u16"]]],[11,"child","","",296,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",296,N],[11,"into_raw","","",296,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",296,N],[11,"as_raw_c_in","","",296,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",297,[[["self"]],["bool"]]],[11,"opcode","","",297,[[["self"]],["u16"]]],[11,"child","","",297,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",297,N],[11,"into_raw","","",297,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",297,N],[11,"as_raw_c_in","","",297,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",301,[[["self"]],["bool"]]],[11,"opcode","","",301,[[["self"]],["u16"]]],[11,"child","","",301,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",301,N],[11,"into_raw","","",301,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",301,N],[11,"as_raw_c_in","","",301,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",302,[[["self"]],["bool"]]],[11,"opcode","","",302,[[["self"]],["u16"]]],[11,"child","","",302,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",302,N],[11,"into_raw","","",302,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",302,N],[11,"as_raw_c_in","","",302,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",304,[[["self"]],["bool"]]],[11,"opcode","","",304,[[["self"]],["u16"]]],[11,"child","","",304,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",304,N],[11,"into_raw","","",304,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",304,N],[11,"as_raw_c_in","","",304,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",305,[[["self"]],["bool"]]],[11,"opcode","","",305,[[["self"]],["u16"]]],[11,"child","","",305,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",305,N],[11,"into_raw","","",305,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",305,N],[11,"as_raw_c_in","","",305,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",309,[[["self"]],["bool"]]],[11,"opcode","","",309,[[["self"]],["u16"]]],[11,"child","","",309,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",309,N],[11,"into_raw","","",309,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",309,N],[11,"as_raw_c_in","","",309,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",310,[[["self"]],["bool"]]],[11,"opcode","","",310,[[["self"]],["u16"]]],[11,"child","","",310,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",310,N],[11,"into_raw","","",310,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",310,N],[11,"as_raw_c_in","","",310,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",313,[[["self"]],["bool"]]],[11,"opcode","","",313,[[["self"]],["u16"]]],[11,"child","","",313,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",313,N],[11,"into_raw","","",313,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",313,N],[11,"as_raw_c_in","","",313,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",314,[[["self"]],["bool"]]],[11,"opcode","","",314,[[["self"]],["u16"]]],[11,"child","","",314,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",314,N],[11,"into_raw","","",314,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",314,N],[11,"as_raw_c_in","","",314,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",315,[[["self"]],["bool"]]],[11,"opcode","","",315,[[["self"]],["u16"]]],[11,"child","","",315,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",315,N],[11,"into_raw","","",315,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",315,N],[11,"as_raw_c_in","","",315,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",316,[[["self"]],["bool"]]],[11,"opcode","","",316,[[["self"]],["u16"]]],[11,"child","","",316,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",316,N],[11,"into_raw","","",316,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",316,N],[11,"as_raw_c_in","","",316,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",318,[[["self"]],["bool"]]],[11,"opcode","","",318,[[["self"]],["u16"]]],[11,"child","","",318,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",318,N],[11,"into_raw","","",318,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",318,N],[11,"as_raw_c_in","","",318,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",319,[[["self"]],["bool"]]],[11,"opcode","","",319,[[["self"]],["u16"]]],[11,"child","","",319,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",319,N],[11,"into_raw","","",319,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",319,N],[11,"as_raw_c_in","","",319,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",322,[[["self"]],["bool"]]],[11,"opcode","","",322,[[["self"]],["u16"]]],[11,"child","","",322,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",322,N],[11,"into_raw","","",322,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",322,N],[11,"as_raw_c_in","","",322,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",668,[[["self"]],["bool"]]],[11,"opcode","","",668,[[["self"]],["u16"]]],[11,"child","","",668,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",668,N],[11,"into_raw","","",668,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",668,N],[11,"as_raw_c_in","","",668,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",325,[[["self"]],["bool"]]],[11,"opcode","","",325,[[["self"]],["u16"]]],[11,"child","","",325,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",325,N],[11,"into_raw","","",325,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",325,N],[11,"as_raw_c_in","","",325,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",326,[[["self"]],["bool"]]],[11,"opcode","","",326,[[["self"]],["u16"]]],[11,"child","","",326,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",326,N],[11,"into_raw","","",326,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",326,N],[11,"as_raw_c_in","","",326,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",330,[[["self"]],["bool"]]],[11,"opcode","","",330,[[["self"]],["u16"]]],[11,"child","","",330,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",330,N],[11,"into_raw","","",330,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",330,N],[11,"as_raw_c_in","","",330,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",331,[[["self"]],["bool"]]],[11,"opcode","","",331,[[["self"]],["u16"]]],[11,"child","","",331,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",331,N],[11,"into_raw","","",331,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",331,N],[11,"as_raw_c_in","","",331,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",334,[[["self"]],["bool"]]],[11,"opcode","","",334,[[["self"]],["u16"]]],[11,"child","","",334,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",334,N],[11,"into_raw","","",334,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",334,N],[11,"as_raw_c_in","","",334,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",335,[[["self"]],["bool"]]],[11,"opcode","","",335,[[["self"]],["u16"]]],[11,"child","","",335,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",335,N],[11,"into_raw","","",335,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",335,N],[11,"as_raw_c_in","","",335,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",338,[[["self"]],["bool"]]],[11,"opcode","","",338,[[["self"]],["u16"]]],[11,"child","","",338,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",338,N],[11,"into_raw","","",338,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",338,N],[11,"as_raw_c_in","","",338,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",339,[[["self"]],["bool"]]],[11,"opcode","","",339,[[["self"]],["u16"]]],[11,"child","","",339,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",339,N],[11,"into_raw","","",339,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",339,N],[11,"as_raw_c_in","","",339,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",341,[[["self"]],["bool"]]],[11,"opcode","","",341,[[["self"]],["u16"]]],[11,"child","","",341,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",341,N],[11,"into_raw","","",341,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",341,N],[11,"as_raw_c_in","","",341,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",674,[[["self"]],["bool"]]],[11,"opcode","","",674,[[["self"]],["u16"]]],[11,"child","","",674,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",674,N],[11,"into_raw","","",674,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",674,N],[11,"as_raw_c_in","","",674,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",343,[[["self"]],["bool"]]],[11,"opcode","","",343,[[["self"]],["u16"]]],[11,"child","","",343,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",343,N],[11,"into_raw","","",343,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",343,N],[11,"as_raw_c_in","","",343,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",344,[[["self"]],["bool"]]],[11,"opcode","","",344,[[["self"]],["u16"]]],[11,"child","","",344,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",344,N],[11,"into_raw","","",344,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",344,N],[11,"as_raw_c_in","","",344,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",347,[[["self"]],["bool"]]],[11,"opcode","","",347,[[["self"]],["u16"]]],[11,"child","","",347,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",347,N],[11,"into_raw","","",347,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",347,N],[11,"as_raw_c_in","","",347,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",348,[[["self"]],["bool"]]],[11,"opcode","","",348,[[["self"]],["u16"]]],[11,"child","","",348,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",348,N],[11,"into_raw","","",348,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",348,N],[11,"as_raw_c_in","","",348,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",350,[[["self"]],["bool"]]],[11,"opcode","","",350,[[["self"]],["u16"]]],[11,"child","","",350,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",350,N],[11,"into_raw","","",350,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",350,N],[11,"as_raw_c_in","","",350,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",351,[[["self"]],["bool"]]],[11,"opcode","","",351,[[["self"]],["u16"]]],[11,"child","","",351,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",351,N],[11,"into_raw","","",351,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",351,N],[11,"as_raw_c_in","","",351,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",358,[[["self"]],["bool"]]],[11,"opcode","","",358,[[["self"]],["u16"]]],[11,"child","","",358,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",358,N],[11,"into_raw","","",358,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",358,N],[11,"as_raw_c_in","","",358,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",679,[[["self"]],["bool"]]],[11,"opcode","","",679,[[["self"]],["u16"]]],[11,"child","","",679,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",679,N],[11,"into_raw","","",679,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",679,N],[11,"as_raw_c_in","","",679,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",360,[[["self"]],["bool"]]],[11,"opcode","","",360,[[["self"]],["u16"]]],[11,"child","","",360,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",360,N],[11,"into_raw","","",360,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",360,N],[11,"as_raw_c_in","","",360,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",681,[[["self"]],["bool"]]],[11,"opcode","","",681,[[["self"]],["u16"]]],[11,"child","","",681,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",681,N],[11,"into_raw","","",681,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",681,N],[11,"as_raw_c_in","","",681,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",362,[[["self"]],["bool"]]],[11,"opcode","","",362,[[["self"]],["u16"]]],[11,"child","","",362,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",362,N],[11,"into_raw","","",362,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",362,N],[11,"as_raw_c_in","","",362,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",683,[[["self"]],["bool"]]],[11,"opcode","","",683,[[["self"]],["u16"]]],[11,"child","","",683,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",683,N],[11,"into_raw","","",683,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",683,N],[11,"as_raw_c_in","","",683,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",363,[[["self"]],["bool"]]],[11,"opcode","","",363,[[["self"]],["u16"]]],[11,"child","","",363,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",363,N],[11,"into_raw","","",363,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",363,N],[11,"as_raw_c_in","","",363,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",685,[[["self"]],["bool"]]],[11,"opcode","","",685,[[["self"]],["u16"]]],[11,"child","","",685,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",685,N],[11,"into_raw","","",685,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",685,N],[11,"as_raw_c_in","","",685,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",364,[[["self"]],["bool"]]],[11,"opcode","","",364,[[["self"]],["u16"]]],[11,"child","","",364,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",364,N],[11,"into_raw","","",364,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",364,N],[11,"as_raw_c_in","","",364,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",687,[[["self"]],["bool"]]],[11,"opcode","","",687,[[["self"]],["u16"]]],[11,"child","","",687,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",687,N],[11,"into_raw","","",687,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",687,N],[11,"as_raw_c_in","","",687,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",368,[[["self"]],["bool"]]],[11,"opcode","","",368,[[["self"]],["u16"]]],[11,"child","","",368,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",368,N],[11,"into_raw","","",368,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",368,N],[11,"as_raw_c_in","","",368,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",369,[[["self"]],["bool"]]],[11,"opcode","","",369,[[["self"]],["u16"]]],[11,"child","","",369,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",369,N],[11,"into_raw","","",369,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",369,N],[11,"as_raw_c_in","","",369,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",371,[[["self"]],["bool"]]],[11,"opcode","","",371,[[["self"]],["u16"]]],[11,"child","","",371,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",371,N],[11,"into_raw","","",371,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",371,N],[11,"as_raw_c_in","","",371,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",690,[[["self"]],["bool"]]],[11,"opcode","","",690,[[["self"]],["u16"]]],[11,"child","","",690,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",690,N],[11,"into_raw","","",690,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",690,N],[11,"as_raw_c_in","","",690,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",374,[[["self"]],["bool"]]],[11,"opcode","","",374,[[["self"]],["u16"]]],[11,"child","","",374,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",374,N],[11,"into_raw","","",374,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",374,N],[11,"as_raw_c_in","","",374,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",375,[[["self"]],["bool"]]],[11,"opcode","","",375,[[["self"]],["u16"]]],[11,"child","","",375,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",375,N],[11,"into_raw","","",375,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",375,N],[11,"as_raw_c_in","","",375,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",376,[[["self"]],["bool"]]],[11,"opcode","","",376,[[["self"]],["u16"]]],[11,"child","","",376,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",376,N],[11,"into_raw","","",376,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",376,N],[11,"as_raw_c_in","","",376,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",377,[[["self"]],["bool"]]],[11,"opcode","","",377,[[["self"]],["u16"]]],[11,"child","","",377,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",377,N],[11,"into_raw","","",377,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",377,N],[11,"as_raw_c_in","","",377,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",381,[[["self"]],["bool"]]],[11,"opcode","","",381,[[["self"]],["u16"]]],[11,"child","","",381,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",381,N],[11,"into_raw","","",381,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",381,N],[11,"as_raw_c_in","","",381,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",382,[[["self"]],["bool"]]],[11,"opcode","","",382,[[["self"]],["u16"]]],[11,"child","","",382,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",382,N],[11,"into_raw","","",382,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",382,N],[11,"as_raw_c_in","","",382,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",384,[[["self"]],["bool"]]],[11,"opcode","","",384,[[["self"]],["u16"]]],[11,"child","","",384,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",384,N],[11,"into_raw","","",384,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",384,N],[11,"as_raw_c_in","","",384,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",385,[[["self"]],["bool"]]],[11,"opcode","","",385,[[["self"]],["u16"]]],[11,"child","","",385,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",385,N],[11,"into_raw","","",385,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",385,N],[11,"as_raw_c_in","","",385,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",388,[[["self"]],["bool"]]],[11,"opcode","","",388,[[["self"]],["u16"]]],[11,"child","","",388,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",388,N],[11,"into_raw","","",388,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",388,N],[11,"as_raw_c_in","","",388,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",389,[[["self"]],["bool"]]],[11,"opcode","","",389,[[["self"]],["u16"]]],[11,"child","","",389,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",389,N],[11,"into_raw","","",389,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",389,N],[11,"as_raw_c_in","","",389,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",390,[[["self"]],["bool"]]],[11,"opcode","","",390,[[["self"]],["u16"]]],[11,"child","","",390,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",390,N],[11,"into_raw","","",390,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",390,N],[11,"as_raw_c_in","","",390,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",697,[[["self"]],["bool"]]],[11,"opcode","","",697,[[["self"]],["u16"]]],[11,"child","","",697,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",697,N],[11,"into_raw","","",697,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",697,N],[11,"as_raw_c_in","","",697,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",393,[[["self"]],["bool"]]],[11,"opcode","","",393,[[["self"]],["u16"]]],[11,"child","","",393,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",393,N],[11,"into_raw","","",393,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",393,N],[11,"as_raw_c_in","","",393,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",394,[[["self"]],["bool"]]],[11,"opcode","","",394,[[["self"]],["u16"]]],[11,"child","","",394,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",394,N],[11,"into_raw","","",394,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",394,N],[11,"as_raw_c_in","","",394,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",396,[[["self"]],["bool"]]],[11,"opcode","","",396,[[["self"]],["u16"]]],[11,"child","","",396,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",396,N],[11,"into_raw","","",396,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",396,N],[11,"as_raw_c_in","","",396,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",700,[[["self"]],["bool"]]],[11,"opcode","","",700,[[["self"]],["u16"]]],[11,"child","","",700,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",700,N],[11,"into_raw","","",700,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",700,N],[11,"as_raw_c_in","","",700,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",398,[[["self"]],["bool"]]],[11,"opcode","","",398,[[["self"]],["u16"]]],[11,"child","","",398,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",398,N],[11,"into_raw","","",398,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",398,N],[11,"as_raw_c_in","","",398,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",399,[[["self"]],["bool"]]],[11,"opcode","","",399,[[["self"]],["u16"]]],[11,"child","","",399,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",399,N],[11,"into_raw","","",399,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",399,N],[11,"as_raw_c_in","","",399,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",401,[[["self"]],["bool"]]],[11,"opcode","","",401,[[["self"]],["u16"]]],[11,"child","","",401,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",401,N],[11,"into_raw","","",401,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",401,N],[11,"as_raw_c_in","","",401,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",703,[[["self"]],["bool"]]],[11,"opcode","","",703,[[["self"]],["u16"]]],[11,"child","","",703,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",703,N],[11,"into_raw","","",703,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",703,N],[11,"as_raw_c_in","","",703,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",403,[[["self"]],["bool"]]],[11,"opcode","","",403,[[["self"]],["u16"]]],[11,"child","","",403,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",403,N],[11,"into_raw","","",403,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",403,N],[11,"as_raw_c_in","","",403,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",705,[[["self"]],["bool"]]],[11,"opcode","","",705,[[["self"]],["u16"]]],[11,"child","","",705,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",705,N],[11,"into_raw","","",705,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",705,N],[11,"as_raw_c_in","","",705,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",406,[[["self"]],["bool"]]],[11,"opcode","","",406,[[["self"]],["u16"]]],[11,"child","","",406,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",406,N],[11,"into_raw","","",406,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",406,N],[11,"as_raw_c_in","","",406,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",707,[[["self"]],["bool"]]],[11,"opcode","","",707,[[["self"]],["u16"]]],[11,"child","","",707,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",707,N],[11,"into_raw","","",707,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",707,N],[11,"as_raw_c_in","","",707,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",407,[[["self"]],["bool"]]],[11,"opcode","","",407,[[["self"]],["u16"]]],[11,"child","","",407,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",407,N],[11,"into_raw","","",407,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",407,N],[11,"as_raw_c_in","","",407,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",709,[[["self"]],["bool"]]],[11,"opcode","","",709,[[["self"]],["u16"]]],[11,"child","","",709,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",709,N],[11,"into_raw","","",709,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",709,N],[11,"as_raw_c_in","","",709,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",410,[[["self"]],["bool"]]],[11,"opcode","","",410,[[["self"]],["u16"]]],[11,"child","","",410,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",410,N],[11,"into_raw","","",410,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",410,N],[11,"as_raw_c_in","","",410,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",711,[[["self"]],["bool"]]],[11,"opcode","","",711,[[["self"]],["u16"]]],[11,"child","","",711,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",711,N],[11,"into_raw","","",711,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",711,N],[11,"as_raw_c_in","","",711,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",413,[[["self"]],["bool"]]],[11,"opcode","","",413,[[["self"]],["u16"]]],[11,"child","","",413,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",413,N],[11,"into_raw","","",413,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",413,N],[11,"as_raw_c_in","","",413,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",414,[[["self"]],["bool"]]],[11,"opcode","","",414,[[["self"]],["u16"]]],[11,"child","","",414,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",414,N],[11,"into_raw","","",414,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",414,N],[11,"as_raw_c_in","","",414,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",418,[[["self"]],["bool"]]],[11,"opcode","","",418,[[["self"]],["u16"]]],[11,"child","","",418,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",418,N],[11,"into_raw","","",418,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",418,N],[11,"as_raw_c_in","","",418,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",714,[[["self"]],["bool"]]],[11,"opcode","","",714,[[["self"]],["u16"]]],[11,"child","","",714,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",714,N],[11,"into_raw","","",714,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",714,N],[11,"as_raw_c_in","","",714,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",420,[[["self"]],["bool"]]],[11,"opcode","","",420,[[["self"]],["u16"]]],[11,"child","","",420,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",420,N],[11,"into_raw","","",420,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",420,N],[11,"as_raw_c_in","","",420,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",421,[[["self"]],["bool"]]],[11,"opcode","","",421,[[["self"]],["u16"]]],[11,"child","","",421,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",421,N],[11,"into_raw","","",421,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",421,N],[11,"as_raw_c_in","","",421,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",424,[[["self"]],["bool"]]],[11,"opcode","","",424,[[["self"]],["u16"]]],[11,"child","","",424,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",424,N],[11,"into_raw","","",424,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",424,N],[11,"as_raw_c_in","","",424,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",717,[[["self"]],["bool"]]],[11,"opcode","","",717,[[["self"]],["u16"]]],[11,"child","","",717,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",717,N],[11,"into_raw","","",717,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",717,N],[11,"as_raw_c_in","","",717,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",427,[[["self"]],["bool"]]],[11,"opcode","","",427,[[["self"]],["u16"]]],[11,"child","","",427,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",427,N],[11,"into_raw","","",427,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",427,N],[11,"as_raw_c_in","","",427,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",428,[[["self"]],["bool"]]],[11,"opcode","","",428,[[["self"]],["u16"]]],[11,"child","","",428,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",428,N],[11,"into_raw","","",428,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",428,N],[11,"as_raw_c_in","","",428,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",430,[[["self"]],["bool"]]],[11,"opcode","","",430,[[["self"]],["u16"]]],[11,"child","","",430,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",430,N],[11,"into_raw","","",430,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",430,N],[11,"as_raw_c_in","","",430,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",720,[[["self"]],["bool"]]],[11,"opcode","","",720,[[["self"]],["u16"]]],[11,"child","","",720,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",720,N],[11,"into_raw","","",720,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",720,N],[11,"as_raw_c_in","","",720,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",432,[[["self"]],["bool"]]],[11,"opcode","","",432,[[["self"]],["u16"]]],[11,"child","","",432,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",432,N],[11,"into_raw","","",432,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",432,N],[11,"as_raw_c_in","","",432,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",433,[[["self"]],["bool"]]],[11,"opcode","","",433,[[["self"]],["u16"]]],[11,"child","","",433,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",433,N],[11,"into_raw","","",433,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",433,N],[11,"as_raw_c_in","","",433,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation","",437,[[["self"]],["bool"]]],[11,"opcode","","",437,[[["self"]],["u16"]]],[11,"child","","",437,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",437,N],[11,"into_raw","","",437,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",437,N],[11,"as_raw_c_in","","",437,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",438,[[["self"]],["bool"]]],[11,"opcode","","",438,[[["self"]],["u16"]]],[11,"child","","",438,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",438,N],[11,"into_raw","","",438,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",438,N],[11,"as_raw_c_in","","",438,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation_feedback","",724,[[["self"]],["bool"]]],[11,"opcode","","",724,[[["self"]],["u16"]]],[11,"child","","",724,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",724,N],[11,"into_raw","","",724,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",724,N],[11,"as_raw_c_in","","",724,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",441,[[["self"]],["bool"]]],[11,"opcode","","",441,[[["self"]],["u16"]]],[11,"child","","",441,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",441,N],[11,"into_raw","","",441,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",441,N],[11,"as_raw_c_in","","",441,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation","",443,[[["self"]],["bool"]]],[11,"opcode","","",443,[[["self"]],["u16"]]],[11,"child","","",443,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",443,N],[11,"into_raw","","",443,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",443,N],[11,"as_raw_c_in","","",443,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",444,[[["self"]],["bool"]]],[11,"opcode","","",444,[[["self"]],["u16"]]],[11,"child","","",444,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",444,N],[11,"into_raw","","",444,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",444,N],[11,"as_raw_c_in","","",444,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation_feedback","",727,[[["self"]],["bool"]]],[11,"opcode","","",727,[[["self"]],["u16"]]],[11,"child","","",727,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",727,N],[11,"into_raw","","",727,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",727,N],[11,"as_raw_c_in","","",727,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",446,[[["self"]],["bool"]]],[11,"opcode","","",446,[[["self"]],["u16"]]],[11,"child","","",446,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",446,N],[11,"into_raw","","",446,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",446,N],[11,"as_raw_c_in","","",446,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_wm_base","",448,[[["self"]],["bool"]]],[11,"opcode","","",448,[[["self"]],["u16"]]],[11,"child","","",448,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",448,N],[11,"into_raw","","",448,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",448,N],[11,"as_raw_c_in","","",448,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",449,[[["self"]],["bool"]]],[11,"opcode","","",449,[[["self"]],["u16"]]],[11,"child","","",449,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",449,N],[11,"into_raw","","",449,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",449,N],[11,"as_raw_c_in","","",449,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_positioner","",454,[[["self"]],["bool"]]],[11,"opcode","","",454,[[["self"]],["u16"]]],[11,"child","","",454,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",454,N],[11,"into_raw","","",454,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",454,N],[11,"as_raw_c_in","","",454,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",731,[[["self"]],["bool"]]],[11,"opcode","","",731,[[["self"]],["u16"]]],[11,"child","","",731,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",731,N],[11,"into_raw","","",731,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",731,N],[11,"as_raw_c_in","","",731,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_surface","",457,[[["self"]],["bool"]]],[11,"opcode","","",457,[[["self"]],["u16"]]],[11,"child","","",457,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",457,N],[11,"into_raw","","",457,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",457,N],[11,"as_raw_c_in","","",457,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",458,[[["self"]],["bool"]]],[11,"opcode","","",458,[[["self"]],["u16"]]],[11,"child","","",458,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",458,N],[11,"into_raw","","",458,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",458,N],[11,"as_raw_c_in","","",458,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_toplevel","",462,[[["self"]],["bool"]]],[11,"opcode","","",462,[[["self"]],["u16"]]],[11,"child","","",462,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",462,N],[11,"into_raw","","",462,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",462,N],[11,"as_raw_c_in","","",462,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",463,[[["self"]],["bool"]]],[11,"opcode","","",463,[[["self"]],["u16"]]],[11,"child","","",463,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",463,N],[11,"into_raw","","",463,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",463,N],[11,"as_raw_c_in","","",463,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_popup","",466,[[["self"]],["bool"]]],[11,"opcode","","",466,[[["self"]],["u16"]]],[11,"child","","",466,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",466,N],[11,"into_raw","","",466,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",466,N],[11,"as_raw_c_in","","",466,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",467,[[["self"]],["bool"]]],[11,"opcode","","",467,[[["self"]],["u16"]]],[11,"child","","",467,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",467,N],[11,"into_raw","","",467,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",467,N],[11,"as_raw_c_in","","",467,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_wm_base","",470,[[["self"]],["bool"]]],[11,"opcode","","",470,[[["self"]],["u16"]]],[11,"child","","",470,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",470,N],[11,"into_raw","","",470,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",470,N],[11,"as_raw_c_in","","",470,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",471,[[["self"]],["bool"]]],[11,"opcode","","",471,[[["self"]],["u16"]]],[11,"child","","",471,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",471,N],[11,"into_raw","","",471,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",471,N],[11,"as_raw_c_in","","",471,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_positioner","",475,[[["self"]],["bool"]]],[11,"opcode","","",475,[[["self"]],["u16"]]],[11,"child","","",475,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",475,N],[11,"into_raw","","",475,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",475,N],[11,"as_raw_c_in","","",475,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",738,[[["self"]],["bool"]]],[11,"opcode","","",738,[[["self"]],["u16"]]],[11,"child","","",738,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",738,N],[11,"into_raw","","",738,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",738,N],[11,"as_raw_c_in","","",738,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_surface","",477,[[["self"]],["bool"]]],[11,"opcode","","",477,[[["self"]],["u16"]]],[11,"child","","",477,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",477,N],[11,"into_raw","","",477,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",477,N],[11,"as_raw_c_in","","",477,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",478,[[["self"]],["bool"]]],[11,"opcode","","",478,[[["self"]],["u16"]]],[11,"child","","",478,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",478,N],[11,"into_raw","","",478,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",478,N],[11,"as_raw_c_in","","",478,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_toplevel","",481,[[["self"]],["bool"]]],[11,"opcode","","",481,[[["self"]],["u16"]]],[11,"child","","",481,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",481,N],[11,"into_raw","","",481,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",481,N],[11,"as_raw_c_in","","",481,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",482,[[["self"]],["bool"]]],[11,"opcode","","",482,[[["self"]],["u16"]]],[11,"child","","",482,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",482,N],[11,"into_raw","","",482,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",482,N],[11,"as_raw_c_in","","",482,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_popup","",484,[[["self"]],["bool"]]],[11,"opcode","","",484,[[["self"]],["u16"]]],[11,"child","","",484,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",484,N],[11,"into_raw","","",484,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",484,N],[11,"as_raw_c_in","","",484,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",485,[[["self"]],["bool"]]],[11,"opcode","","",485,[[["self"]],["u16"]]],[11,"child","","",485,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",485,N],[11,"into_raw","","",485,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",485,N],[11,"as_raw_c_in","","",485,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewporter","",487,[[["self"]],["bool"]]],[11,"opcode","","",487,[[["self"]],["u16"]]],[11,"child","","",487,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",487,N],[11,"into_raw","","",487,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",487,N],[11,"as_raw_c_in","","",487,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",743,[[["self"]],["bool"]]],[11,"opcode","","",743,[[["self"]],["u16"]]],[11,"child","","",743,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",743,N],[11,"into_raw","","",743,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",743,N],[11,"as_raw_c_in","","",743,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewport","",490,[[["self"]],["bool"]]],[11,"opcode","","",490,[[["self"]],["u16"]]],[11,"child","","",490,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",490,N],[11,"into_raw","","",490,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",490,N],[11,"as_raw_c_in","","",490,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",745,[[["self"]],["bool"]]],[11,"opcode","","",745,[[["self"]],["u16"]]],[11,"child","","",745,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",745,N],[11,"into_raw","","",745,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",745,N],[11,"as_raw_c_in","","",745,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewporter","",493,[[["self"]],["bool"]]],[11,"opcode","","",493,[[["self"]],["u16"]]],[11,"child","","",493,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",493,N],[11,"into_raw","","",493,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",493,N],[11,"as_raw_c_in","","",493,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",747,[[["self"]],["bool"]]],[11,"opcode","","",747,[[["self"]],["u16"]]],[11,"child","","",747,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",747,N],[11,"into_raw","","",747,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",747,N],[11,"as_raw_c_in","","",747,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewport","",495,[[["self"]],["bool"]]],[11,"opcode","","",495,[[["self"]],["u16"]]],[11,"child","","",495,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",495,N],[11,"into_raw","","",495,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",495,N],[11,"as_raw_c_in","","",495,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",749,[[["self"]],["bool"]]],[11,"opcode","","",749,[[["self"]],["u16"]]],[11,"child","","",749,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",749,N],[11,"into_raw","","",749,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",749,N],[11,"as_raw_c_in","","",749,[[["self"],["f"]],["t"]]],[11,"c_interface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",496,N],[11,"c_interface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",497,N],[11,"c_interface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",499,N],[11,"c_interface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",500,N],[11,"c_interface","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",502,N],[11,"c_interface","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",504,N],[11,"c_interface","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",506,N],[11,"c_interface","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",508,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",510,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",511,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",513,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",515,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",517,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",518,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",520,N],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",522,N],[11,"c_interface","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1","",524,N],[11,"c_interface","wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1","",526,N],[11,"c_interface","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",527,N],[11,"c_interface","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",529,N],[11,"c_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",530,N],[11,"c_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",532,N],[11,"c_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",533,N],[11,"c_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",535,N],[11,"c_interface","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",536,N],[11,"c_interface","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",537,N],[11,"c_interface","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",538,N],[11,"c_interface","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",539,N],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1","",540,N],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1","",542,N],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1","",544,N],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",546,N],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",548,N],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",550,N],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",552,N],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",554,N],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",555,N],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",556,N],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",558,N],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",559,N],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",560,N],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",562,N],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",563,N],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",564,N],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",566,N],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",567,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1","",568,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1","",570,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1","",571,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1","",572,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",573,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",575,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",576,N],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",577,N],[11,"c_interface","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",578,N],[11,"c_interface","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",580,N],[11,"c_interface","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",581,N],[11,"c_interface","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",583,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",584,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",586,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",587,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",588,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",589,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",591,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",592,N],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",593,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",594,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",596,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",597,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",598,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",599,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",600,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",601,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",602,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",603,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",605,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",606,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",607,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",608,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",609,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",610,N],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",611,N],[11,"c_interface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",612,N],[11,"c_interface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",613,N],[11,"c_interface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",615,N],[11,"c_interface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",616,N],[11,"c_interface","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3","",618,N],[11,"c_interface","wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3","",619,N],[11,"c_interface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",621,N],[11,"c_interface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",622,N],[11,"c_interface","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",624,N],[11,"c_interface","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",626,N],[11,"c_interface","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",627,N],[11,"c_interface","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",629,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",630,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",632,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",634,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",635,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",636,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",638,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",640,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",641,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",642,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",644,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",646,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",647,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",648,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",650,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",652,N],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",653,N],[11,"c_interface","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",654,N],[11,"c_interface","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",656,N],[11,"c_interface","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",657,N],[11,"c_interface","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",659,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",660,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",661,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",662,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",663,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",664,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",665,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",666,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",667,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",669,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",670,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",671,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",672,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",673,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",675,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",676,N],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",677,N],[11,"c_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",678,N],[11,"c_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",680,N],[11,"c_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",682,N],[11,"c_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",684,N],[11,"c_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1","",686,N],[11,"c_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1","",688,N],[11,"c_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",689,N],[11,"c_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",691,N],[11,"c_interface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1","",692,N],[11,"c_interface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1","",693,N],[11,"c_interface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",694,N],[11,"c_interface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",695,N],[11,"c_interface","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1","",696,N],[11,"c_interface","wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1","",698,N],[11,"c_interface","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",699,N],[11,"c_interface","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",701,N],[11,"c_interface","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1","",702,N],[11,"c_interface","wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1","",704,N],[11,"c_interface","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",706,N],[11,"c_interface","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",708,N],[11,"c_interface","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1","",710,N],[11,"c_interface","wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1","",712,N],[11,"c_interface","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",713,N],[11,"c_interface","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",715,N],[11,"c_interface","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1","",716,N],[11,"c_interface","wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1","",718,N],[11,"c_interface","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",719,N],[11,"c_interface","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",721,N],[11,"c_interface","wayland_protocols::presentation_time::client::wp_presentation","",722,N],[11,"c_interface","wayland_protocols::presentation_time::client::wp_presentation_feedback","",723,N],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation","",725,N],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation_feedback","",726,N],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_wm_base","",728,N],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_positioner","",730,N],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_surface","",732,N],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_toplevel","",733,N],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_popup","",734,N],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_wm_base","",735,N],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_positioner","",737,N],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_surface","",739,N],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_toplevel","",740,N],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_popup","",741,N],[11,"c_interface","wayland_protocols::viewporter::client::wp_viewporter","",742,N],[11,"c_interface","wayland_protocols::viewporter::client::wp_viewport","",744,N],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewporter","",746,N],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewport","",748,N],[11,"from_raw","wayland_protocols::presentation_time::client::wp_presentation","",436,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",436,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::presentation_time::client::wp_presentation_feedback","",440,[[["u32"]],["option",["kind"]]]],[11,"to_raw","","",440,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::presentation_time::server::wp_presentation","",442,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",442,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::presentation_time::server::wp_presentation_feedback","",445,[[["u32"]],["option",["kind"]]]],[11,"to_raw","","",445,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_wm_base","",447,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",447,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_positioner","",451,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",451,[[["self"]],["u32"]]],[11,"from_raw","","",452,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",452,[[["self"]],["u32"]]],[11,"from_raw","","",453,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",453,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",729,N],[18,"SlideX","","move along the x axis until unconstrained",729,N],[18,"SlideY","","move along the y axis until unconstrained",729,N],[18,"FlipX","","invert the anchor and gravity on the x axis",729,N],[18,"FlipY","","invert the anchor and gravity on the y axis",729,N],[18,"ResizeX","","horizontally resize the surface",729,N],[18,"ResizeY","","vertically resize the surface",729,N],[11,"empty","","Returns an empty set of flags.",729,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",729,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",729,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",729,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",729,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",729,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",729,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",729,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",729,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",729,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",729,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",729,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",729,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",729,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_surface","",456,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",456,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_toplevel","",460,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",460,[[["self"]],["u32"]]],[11,"from_raw","","",461,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",461,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_popup","",465,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",465,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_wm_base","",469,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",469,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_positioner","",472,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",472,[[["self"]],["u32"]]],[11,"from_raw","","",473,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",473,[[["self"]],["u32"]]],[11,"from_raw","","",474,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",474,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",736,N],[18,"SlideX","","move along the x axis until unconstrained",736,N],[18,"SlideY","","move along the y axis until unconstrained",736,N],[18,"FlipX","","invert the anchor and gravity on the x axis",736,N],[18,"FlipY","","invert the anchor and gravity on the y axis",736,N],[18,"ResizeX","","horizontally resize the surface",736,N],[18,"ResizeY","","vertically resize the surface",736,N],[11,"empty","","Returns an empty set of flags.",736,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",736,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",736,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",736,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",736,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",736,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",736,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",736,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",736,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",736,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",736,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",736,[[["self"],["constraintadjustment"],["bool"]]]],[11,"from_raw","","",736,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",736,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_surface","",476,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",476,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_toplevel","",479,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",479,[[["self"]],["u32"]]],[11,"from_raw","","",480,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",480,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_popup","",483,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",483,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewporter","",486,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",486,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewport","",489,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",489,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewporter","",492,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",492,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewport","",494,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",494,[[["self"]],["u32"]]]],"paths":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Request"],[4,"Position"],[4,"Request"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"ChangeCause"],[4,"ContentPurpose"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"ChangeCause"],[4,"ContentPurpose"],[4,"Request"],[4,"Event"],[4,"Request"],[3,"ContentHint"],[3,"ContentHint"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[8,"RequestsTrait"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"State"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"State"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Layer"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Layer"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"Anchor"],[3,"Anchor"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"Flags"],[3,"Flags"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Event"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[4,"Request"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Event"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[4,"Request"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Event"],[3,"ZwpInputTimestampsManagerV1"],[4,"Event"],[3,"ZwpInputTimestampsV1"],[3,"ZwpInputTimestampsManagerV1"],[4,"Event"],[3,"ZwpInputTimestampsV1"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxExplicitSynchronizationV1"],[4,"Event"],[3,"ZwpLinuxSurfaceSynchronizationV1"],[4,"Event"],[3,"ZwpLinuxBufferReleaseV1"],[4,"Request"],[3,"ZwpLinuxExplicitSynchronizationV1"],[4,"Event"],[3,"ZwpLinuxSurfaceSynchronizationV1"],[4,"Event"],[3,"ZwpLinuxBufferReleaseV1"],[4,"Request"],[3,"ZwpPointerConstraintsV1"],[4,"Event"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[3,"ZwpPointerConstraintsV1"],[4,"Event"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[3,"ZwpPointerGesturesV1"],[4,"Event"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[3,"ZwpPointerGesturesV1"],[4,"Event"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[4,"Event"],[3,"ZwpPrimarySelectionDeviceV1"],[3,"ZwpPrimarySelectionOfferV1"],[3,"ZwpPrimarySelectionSourceV1"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[4,"Event"],[3,"ZwpPrimarySelectionDeviceV1"],[3,"ZwpPrimarySelectionOfferV1"],[3,"ZwpPrimarySelectionSourceV1"],[3,"ZwpRelativePointerManagerV1"],[4,"Event"],[3,"ZwpRelativePointerV1"],[3,"ZwpRelativePointerManagerV1"],[4,"Event"],[3,"ZwpRelativePointerV1"],[3,"ZwpTabletManagerV1"],[4,"Event"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[3,"ZwpTabletManagerV1"],[4,"Event"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[3,"ZwpTabletManagerV2"],[4,"Event"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[3,"ZwpTabletManagerV2"],[4,"Event"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[4,"Event"],[3,"ZwpTextInputV1"],[3,"ZwpTextInputManagerV1"],[4,"Event"],[3,"ZwpTextInputV3"],[3,"ZwpTextInputManagerV3"],[4,"Event"],[3,"ZwpTextInputV3"],[3,"ZwpTextInputManagerV3"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[4,"Event"],[3,"ZxdgToplevelDecorationV1"],[3,"ZxdgDecorationManagerV1"],[4,"Event"],[3,"ZxdgToplevelDecorationV1"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[4,"Event"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[4,"Event"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[4,"Event"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[4,"Event"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[3,"ZxdgOutputManagerV1"],[4,"Event"],[3,"ZxdgOutputV1"],[3,"ZxdgOutputManagerV1"],[4,"Event"],[3,"ZxdgOutputV1"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"ZxdgShellV6"],[3,"ZxdgPositionerV6"],[4,"Event"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZxdgShellV6"],[3,"ZxdgPositionerV6"],[4,"Event"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[4,"Event"],[3,"ZwlrExportDmabufFrameV1"],[3,"ZwlrExportDmabufManagerV1"],[4,"Event"],[3,"ZwlrExportDmabufFrameV1"],[3,"ZwlrForeignToplevelManagerV1"],[3,"ZwlrForeignToplevelHandleV1"],[3,"ZwlrForeignToplevelManagerV1"],[3,"ZwlrForeignToplevelHandleV1"],[3,"ZwlrGammaControlManagerV1"],[4,"Event"],[3,"ZwlrGammaControlV1"],[3,"ZwlrGammaControlManagerV1"],[4,"Event"],[3,"ZwlrGammaControlV1"],[3,"ZwlrInputInhibitManagerV1"],[4,"Event"],[3,"ZwlrInputInhibitorV1"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Event"],[3,"ZwlrInputInhibitorV1"],[4,"Event"],[3,"ZwlrLayerShellV1"],[4,"Event"],[3,"ZwlrLayerSurfaceV1"],[3,"ZwlrLayerShellV1"],[4,"Event"],[3,"ZwlrLayerSurfaceV1"],[3,"ZwlrScreencopyManagerV1"],[4,"Event"],[3,"ZwlrScreencopyFrameV1"],[3,"ZwlrScreencopyManagerV1"],[4,"Event"],[3,"ZwlrScreencopyFrameV1"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"WpPresentation"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"]]};
searchIndex["wayland_scanner"]={"doc":"Wayland scanner crate","items":[[4,"Side","wayland_scanner","Side to generate",N,N],[13,"Client","","wayland client applications",0,N],[13,"Server","","wayland compositors",0,N],[5,"generate_c_interfaces","","Generate the interfaces for a protocol",N,[[["p1"],["p2"]]]],[5,"generate_rust_code","","Generate the code for a protocol using the Rust implementation",N,[[["p1"],["p2"],["side"]]]],[5,"generate_c_code","","Generate the code for a protocol using the C system libs",N,[[["p1"],["p2"],["side"]]]],[5,"generate_c_interfaces_streams","","Generate the interfaces for a protocol from/to IO streams",N,[[["p1"],["p2"]]]],[5,"generate_rust_code_streams","","Generate the code for a protocol from/to IO streams using the rust implementation",N,[[["p1"],["p2"],["side"]]]],[5,"generate_c_code_streams","","Generate the code for a protocol from/to IO streams using the C system libs",N,[[["p1"],["p2"],["side"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["side"]]],[11,"eq","","",0,[[["self"],["side"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Side"]]};
searchIndex["wayland_server"]={"doc":"Server-side Wayland connector","items":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",N,N],[3,"AnonymousObject","","Anonymous interface",N,N],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",0,N],[16,"Event","","Set of events associated to this interface",0,N],[18,"NAME","","Name of this interface",0,N],[18,"VERSION","","Maximum supported version of this interface",0,N],[10,"c_interface","","Pointer to the C representation of this interface",0,N],[8,"MessageGroup","","A group of messages",N,N],[18,"MESSAGES","","Wire representation of this MessageGroup",1,N],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",1,N],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"child","","Retrieve the child `Object` associated with this message if any",1,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,N],[10,"into_raw","","Turn this message into its raw representation",1,[[["self"],["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,N],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["self"],["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[3,"Client","","A handle to a client connected to your server",N,N],[3,"Display","","The wayland display",N,N],[3,"DisplayToken","","A token that is required for providing non-Send implementations to resources",N,N],[3,"Global","","A handle to a global object",N,N],[3,"NewResource","","A newly-created resource that needs implementation",N,N],[3,"Resource","","An handle to a wayland resource",N,N],[4,"ResourceMap","","A handle to the object map internal to the lib state",N,N],[11,"from_ptr","","Create a client from a `wayland-server.so` pointer",2,N],[11,"c_ptr","","Retrieve a pointer to the underlying `wl_client` of `wayland-server.so`",2,N],[11,"alive","","Check whether this client is still connected to the server",2,[[["self"]],["bool"]]],[11,"equals","","Check whether this client handle refers to the same client as an other",2,[[["self"],["client"]],["bool"]]],[11,"flush","","Flush the pending events to this client",2,[[["self"]]]],[11,"kill","","Kills this client",2,[[["self"]]]],[11,"data_map","","Access the map handling user data associated to this client",2,[[["self"]],["userdatamap"]]],[11,"add_destructor","","Add a destructor for this client",2,[[["self"],["f"]]]],[11,"create_resource","","Create a new resource for this client",2,[[["self"],["u32"]],["option",["newresource"]]]],[11,"new","","Create a new display",3,[[["loophandle"]],["display"]]],[11,"get_token","","Get a `DisplayToken` for make non-send implementations",3,[[["self"]],["displaytoken"]]],[11,"create_global","","Create a new global object",3,[[["self"],["u32"],["f"]],["global"]]],[11,"create_global_with_filter","","Create a new global object with a filter",3,[[["self"],["u32"],["f1"],["f2"]],["global"]]],[11,"flush_clients","","Flush events to the clients",3,[[["self"]]]],[11,"add_socket","","Add a listening socket to this display",3,[[["self"],["option"]],["ioresult"]]],[11,"add_socket_auto","","Add an automatically named listening socket to this display",3,[[["self"]],["ioresult",["osstring"]]]],[11,"add_socket_from","","Add existing listening socket to this display",3,[[["self"],["t"]],["ioresult"]]],[11,"add_socket_fd","","Add existing listening socket to this display from a raw file descriptor",3,[[["self"],["rawfd"]],["ioresult"]]],[11,"create_client","","Create a new client to this display from an already-existing connected Fd",3,[[["self"],["rawfd"]],["client"]]],[11,"c_ptr","","Retrieve a pointer from the C lib to this `wl_display`",3,N],[11,"destroy","","Destroy the associated global object.",4,[[["self"]]]],[11,"send","","Send an event through this object",5,N],[11,"is_alive","","Check if the object associated with this resource is still alive",5,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object instance",5,[[["self"]],["u32"]]],[11,"equals","","Check if the other resource refers to the same underlying wayland object",5,[[["self"],["resource"]],["bool"]]],[11,"same_client_as","","Check if this resource and the other belong to the same client",5,[[["self"],["resource"]],["bool"]]],[11,"post_error","","Posts a protocol error to this resource",5,[[["self"],["u32"],["string"]]]],[11,"user_data","","Access the arbitrary payload associated to this object",5,[[["self"]],["option"]]],[11,"client","","Retrieve an handle to the client associated with this resource",5,[[["self"]],["option",["client"]]]],[11,"id","","Retrieve the object id of this wayland object",5,[[["self"]],["u32"]]],[11,"is_external","","Check whether this resource is managed by the library or not",5,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",5,N],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",5,N],[11,"implement","","Implement this resource using given function, destructor, and user data.",6,[[["self"],["f"],["option"],["ud"]],["resource"]]],[11,"implement_nonsend","","Implement this resource using given function and implementation data.",6,[[["self"],["f"],["option"],["ud"],["displaytoken"]],["resource"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",6,N],[11,"from_c_ptr","","Create a `NewResource` instance from a C pointer.",6,N],[0,"sys","","C-associated types",N,N],[0,"common","wayland_server::sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_server::sys::common","",N,N],[12,"name","","",7,N],[12,"signature","","",7,N],[12,"types","","",7,N],[3,"wl_interface","","",N,N],[12,"name","","",8,N],[12,"version","","",8,N],[12,"request_count","","",8,N],[12,"requests","","",8,N],[12,"event_count","","",8,N],[12,"events","","",8,N],[3,"wl_list","","",N,N],[12,"prev","","",9,N],[12,"next","","",9,N],[3,"wl_array","","",N,N],[12,"size","","",10,N],[12,"alloc","","",10,N],[12,"data","","",10,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",11,N],[12,"u","","",11,N],[12,"f","","",11,N],[12,"s","","",11,N],[12,"o","","",11,N],[12,"n","","",11,N],[12,"a","","",11,N],[12,"h","","",11,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",N,N],[4,"wl_client","wayland_server::sys::server","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[6,"wl_event_loop_fd_func_t","","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[3,"wl_listener","","",N,N],[12,"link","","",12,N],[12,"notify","","",12,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",13,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",14,N],[12,"wl_client_destroy","","",14,N],[12,"wl_client_get_display","","",14,N],[12,"wl_client_get_credentials","","",14,N],[12,"wl_client_get_object","","",14,N],[12,"wl_client_add_destroy_listener","","",14,N],[12,"wl_client_get_destroy_listener","","",14,N],[12,"wl_client_post_no_memory","","",14,N],[12,"wl_resource_create","","",14,N],[12,"wl_client_create","","",14,N],[12,"wl_display_create","","",14,N],[12,"wl_display_destroy","","",14,N],[12,"wl_display_destroy_clients","","",14,N],[12,"wl_display_get_serial","","",14,N],[12,"wl_display_next_serial","","",14,N],[12,"wl_display_add_socket","","",14,N],[12,"wl_display_add_socket_auto","","",14,N],[12,"wl_display_add_socket_fd","","",14,N],[12,"wl_display_add_shm_format","","",14,N],[12,"wl_display_get_event_loop","","",14,N],[12,"wl_display_terminate","","",14,N],[12,"wl_display_run","","",14,N],[12,"wl_display_flush_clients","","",14,N],[12,"wl_display_add_destroy_listener","","",14,N],[12,"wl_display_get_destroy_listener","","",14,N],[12,"wl_global_create","","",14,N],[12,"wl_display_init_shm","","",14,N],[12,"wl_display_add_client_created_listener","","",14,N],[12,"wl_display_set_global_filter","","",14,N],[12,"wl_event_loop_create","","",14,N],[12,"wl_event_loop_destroy","","",14,N],[12,"wl_event_loop_add_fd","","",14,N],[12,"wl_event_loop_add_timer","","",14,N],[12,"wl_event_loop_add_signal","","",14,N],[12,"wl_event_loop_dispatch","","",14,N],[12,"wl_event_loop_dispatch_idle","","",14,N],[12,"wl_event_loop_add_idle","","",14,N],[12,"wl_event_loop_get_fd","","",14,N],[12,"wl_event_loop_add_destroy_listener","","",14,N],[12,"wl_event_loop_get_destroy_listener","","",14,N],[12,"wl_event_source_fd_update","","",14,N],[12,"wl_event_source_timer_update","","",14,N],[12,"wl_event_source_remove","","",14,N],[12,"wl_event_source_check","","",14,N],[12,"wl_global_destroy","","",14,N],[12,"wl_global_get_user_data","","",14,N],[12,"wl_resource_post_event_array","","",14,N],[12,"wl_resource_queue_event_array","","",14,N],[12,"wl_resource_post_no_memory","","",14,N],[12,"wl_resource_set_implementation","","",14,N],[12,"wl_resource_set_dispatcher","","",14,N],[12,"wl_resource_destroy","","",14,N],[12,"wl_resource_get_client","","",14,N],[12,"wl_resource_get_id","","",14,N],[12,"wl_resource_get_link","","",14,N],[12,"wl_resource_from_link","","",14,N],[12,"wl_resource_find_for_client","","",14,N],[12,"wl_resource_set_user_data","","",14,N],[12,"wl_resource_get_user_data","","",14,N],[12,"wl_resource_get_version","","",14,N],[12,"wl_resource_set_destructor","","",14,N],[12,"wl_resource_instance_of","","",14,N],[12,"wl_resource_add_destroy_listener","","",14,N],[12,"wl_resource_get_destroy_listener","","",14,N],[12,"wl_shm_buffer_begin_access","","",14,N],[12,"wl_shm_buffer_end_access","","",14,N],[12,"wl_shm_buffer_get","","",14,N],[12,"wl_shm_buffer_get_data","","",14,N],[12,"wl_shm_buffer_get_stride","","",14,N],[12,"wl_shm_buffer_get_format","","",14,N],[12,"wl_shm_buffer_get_width","","",14,N],[12,"wl_shm_buffer_get_height","","",14,N],[12,"wl_log_set_handler_server","","",14,N],[12,"wl_list_init","","",14,N],[12,"wl_list_insert","","",14,N],[12,"wl_list_remove","","",14,N],[12,"wl_list_length","","",14,N],[12,"wl_list_empty","","",14,N],[12,"wl_list_insert_list","","",14,N],[12,"wl_array_init","","",14,N],[12,"wl_array_release","","",14,N],[12,"wl_array_add","","",14,N],[12,"wl_array_copy","","",14,N],[12,"wl_resource_post_event","","",14,N],[12,"wl_resource_queue_event","","",14,N],[12,"wl_resource_post_error","","",14,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wayland_server::sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[0,"protocol_interfaces","wayland_server::sys","",N,N],[7,"wl_display_requests","wayland_server::sys::protocol_interfaces","",N,N],[7,"wl_display_events","","",N,N],[7,"wl_display_interface","","",N,N],[7,"wl_registry_requests","","",N,N],[7,"wl_registry_events","","",N,N],[7,"wl_registry_interface","","",N,N],[7,"wl_callback_events","","",N,N],[7,"wl_callback_interface","","",N,N],[7,"wl_compositor_requests","","",N,N],[7,"wl_compositor_interface","","",N,N],[7,"wl_shm_pool_requests","","",N,N],[7,"wl_shm_pool_interface","","",N,N],[7,"wl_shm_requests","","",N,N],[7,"wl_shm_events","","",N,N],[7,"wl_shm_interface","","",N,N],[7,"wl_buffer_requests","","",N,N],[7,"wl_buffer_events","","",N,N],[7,"wl_buffer_interface","","",N,N],[7,"wl_data_offer_requests","","",N,N],[7,"wl_data_offer_events","","",N,N],[7,"wl_data_offer_interface","","",N,N],[7,"wl_data_source_requests","","",N,N],[7,"wl_data_source_events","","",N,N],[7,"wl_data_source_interface","","",N,N],[7,"wl_data_device_requests","","",N,N],[7,"wl_data_device_events","","",N,N],[7,"wl_data_device_interface","","",N,N],[7,"wl_data_device_manager_requests","","",N,N],[7,"wl_data_device_manager_interface","","",N,N],[7,"wl_shell_requests","","",N,N],[7,"wl_shell_interface","","",N,N],[7,"wl_shell_surface_requests","","",N,N],[7,"wl_shell_surface_events","","",N,N],[7,"wl_shell_surface_interface","","",N,N],[7,"wl_surface_requests","","",N,N],[7,"wl_surface_events","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_seat_requests","","",N,N],[7,"wl_seat_events","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"wl_pointer_requests","","",N,N],[7,"wl_pointer_events","","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_keyboard_requests","","",N,N],[7,"wl_keyboard_events","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"wl_touch_requests","","",N,N],[7,"wl_touch_events","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"wl_output_requests","","",N,N],[7,"wl_output_events","","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_region_requests","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_subcompositor_requests","","",N,N],[7,"wl_subcompositor_interface","","",N,N],[7,"wl_subsurface_requests","","",N,N],[7,"wl_subsurface_interface","","",N,N],[11,"get","wayland_server","Retrieve the Resource corresponding to a given id",15,[[["self"],["u32"]],["option",["resource"]]]],[11,"get_new","","Create a new resource for a given id",15,[[["self"],["u32"]],["option",["newresource"]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",N,N],[0,"wl_callback","wayland_server::protocol","callback object",N,N],[3,"WlCallback","wayland_server::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",16,N],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",16,N],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",17,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",17,N],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",17,N],[12,"id","wayland_server::protocol::wl_compositor::Request","",17,N],[4,"Event","wayland_server::protocol::wl_compositor","",N,N],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",18,N],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",18,N],[12,"offset","","",18,N],[12,"width","","",18,N],[12,"height","","",18,N],[12,"stride","","",18,N],[12,"format","","",18,N],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",18,N],[13,"Resize","","change the size of the pool mapping",18,N],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",18,N],[4,"Event","wayland_server::protocol::wl_shm_pool","",N,N],[0,"wl_shm","wayland_server::protocol","shared memory support",N,N],[3,"WlShm","wayland_server::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",19,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",19,N],[13,"InvalidFd","","mmapping the file descriptor failed",19,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",20,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",20,N],[13,"C8","","8-bit color index format, [7:0] C",20,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",20,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",20,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",20,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",20,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",20,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",20,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",20,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",20,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",20,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",20,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",20,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",20,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",20,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",20,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",20,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",20,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",20,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",20,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",20,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",20,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",20,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",20,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",20,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",20,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",20,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",20,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",20,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",20,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",20,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",20,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",20,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",20,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",20,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",20,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",20,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",20,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",20,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",20,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",20,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",20,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",20,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",20,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",20,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",20,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",20,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",20,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",20,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",20,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",20,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",20,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",20,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",20,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",20,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",20,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",20,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",21,N],[12,"id","wayland_server::protocol::wl_shm::Request","",21,N],[12,"fd","","",21,N],[12,"size","","",21,N],[4,"Event","wayland_server::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",22,N],[12,"format","wayland_server::protocol::wl_shm::Event","",22,N],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",23,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",24,N],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",25,N],[13,"InvalidActionMask","","action mask contains invalid values",25,N],[13,"InvalidAction","","action argument has an invalid value",25,N],[13,"InvalidOffer","","offer doesn't accept this request",25,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",26,N],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",26,N],[12,"mime_type","","",26,N],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",26,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",26,N],[12,"fd","","",26,N],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",26,N],[13,"Finish","","the offer will no longer be used",26,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",26,N],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",26,N],[12,"preferred_action","","",26,N],[4,"Event","wayland_server::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",27,N],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",27,N],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",27,N],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",27,N],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",27,N],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",27,N],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",28,N],[13,"InvalidSource","","source doesn't accept this request",28,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",29,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",29,N],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",29,N],[13,"SetActions","","set the available drag-and-drop actions",29,N],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",29,N],[4,"Event","wayland_server::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",30,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",30,N],[13,"Send","wayland_server::protocol::wl_data_source","send the data",30,N],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",30,N],[12,"fd","","",30,N],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",30,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",30,N],[13,"DndFinished","","the drag-and-drop operation concluded",30,N],[13,"Action","","notify the selected action",30,N],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",30,N],[0,"wl_data_device","wayland_server::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",31,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",32,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",32,N],[12,"origin","","",32,N],[12,"icon","","",32,N],[12,"serial","","",32,N],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",32,N],[12,"source","wayland_server::protocol::wl_data_device::Request","",32,N],[12,"serial","","",32,N],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",32,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",33,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",33,N],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",33,N],[12,"serial","wayland_server::protocol::wl_data_device::Event","",33,N],[12,"surface","","",33,N],[12,"x","","",33,N],[12,"y","","",33,N],[12,"id","","",33,N],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",33,N],[13,"Motion","","drag-and-drop session motion",33,N],[12,"time","wayland_server::protocol::wl_data_device::Event","",33,N],[12,"x","","",33,N],[12,"y","","",33,N],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",33,N],[13,"Selection","","advertise new selection",33,N],[12,"id","wayland_server::protocol::wl_data_device::Event","",33,N],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",N,N],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",34,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",34,N],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",34,N],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",34,N],[12,"seat","","",34,N],[4,"Event","wayland_server::protocol::wl_data_device_manager","",N,N],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_server::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",35,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",36,N],[12,"id","wayland_server::protocol::wl_shell::Request","",36,N],[12,"surface","","",36,N],[4,"Event","wayland_server::protocol::wl_shell","",N,N],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",37,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",37,N],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",37,N],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",37,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",38,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",38,N],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",38,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",38,N],[12,"serial","","",38,N],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",38,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",38,N],[12,"serial","","",38,N],[12,"edges","","",38,N],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",38,N],[13,"SetTransient","","make the surface a transient surface",38,N],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",38,N],[12,"x","","",38,N],[12,"y","","",38,N],[12,"flags","","",38,N],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",38,N],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",38,N],[12,"framerate","","",38,N],[12,"output","","",38,N],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",38,N],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",38,N],[12,"serial","","",38,N],[12,"parent","","",38,N],[12,"x","","",38,N],[12,"y","","",38,N],[12,"flags","","",38,N],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",38,N],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",38,N],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",38,N],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",38,N],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",38,N],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",38,N],[4,"Event","wayland_server::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",39,N],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",39,N],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",39,N],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",39,N],[12,"width","","",39,N],[12,"height","","",39,N],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",39,N],[0,"wl_surface","wayland_server::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_server::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",40,N],[13,"InvalidTransform","","buffer transform value is invalid",40,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",41,N],[13,"Attach","","set the surface contents",41,N],[12,"buffer","wayland_server::protocol::wl_surface::Request","",41,N],[12,"x","","",41,N],[12,"y","","",41,N],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",41,N],[12,"x","wayland_server::protocol::wl_surface::Request","",41,N],[12,"y","","",41,N],[12,"width","","",41,N],[12,"height","","",41,N],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",41,N],[12,"callback","wayland_server::protocol::wl_surface::Request","",41,N],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",41,N],[12,"region","wayland_server::protocol::wl_surface::Request","",41,N],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",41,N],[12,"region","wayland_server::protocol::wl_surface::Request","",41,N],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",41,N],[13,"SetBufferTransform","","sets the buffer transformation",41,N],[12,"transform","wayland_server::protocol::wl_surface::Request","",41,N],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",41,N],[12,"scale","wayland_server::protocol::wl_surface::Request","",41,N],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",41,N],[12,"x","wayland_server::protocol::wl_surface::Request","",41,N],[12,"y","","",41,N],[12,"width","","",41,N],[12,"height","","",41,N],[4,"Event","wayland_server::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",42,N],[12,"output","wayland_server::protocol::wl_surface::Event","",42,N],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",42,N],[12,"output","wayland_server::protocol::wl_surface::Event","",42,N],[0,"wl_seat","wayland_server::protocol","group of input devices",N,N],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",43,N],[12,"id","wayland_server::protocol::wl_seat::Request","",43,N],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",43,N],[12,"id","wayland_server::protocol::wl_seat::Request","",43,N],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",43,N],[12,"id","wayland_server::protocol::wl_seat::Request","",43,N],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",43,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",44,N],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",44,N],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",44,N],[12,"name","wayland_server::protocol::wl_seat::Event","",44,N],[0,"wl_pointer","wayland_server::protocol","pointer input device",N,N],[3,"WlPointer","wayland_server::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",45,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",46,N],[13,"Pressed","","the button is pressed",46,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",47,N],[13,"HorizontalScroll","","horizontal axis",47,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel",48,N],[13,"Finger","","finger on a touch surface",48,N],[13,"Continuous","","continuous coordinate space",48,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",49,N],[12,"serial","wayland_server::protocol::wl_pointer::Request","",49,N],[12,"surface","","",49,N],[12,"hotspot_x","","",49,N],[12,"hotspot_y","","",49,N],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",49,N],[4,"Event","","",N,N],[13,"Enter","","enter event",50,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",50,N],[12,"surface","","",50,N],[12,"surface_x","","",50,N],[12,"surface_y","","",50,N],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",50,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",50,N],[12,"surface","","",50,N],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",50,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",50,N],[12,"surface_x","","",50,N],[12,"surface_y","","",50,N],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",50,N],[12,"serial","wayland_server::protocol::wl_pointer::Event","",50,N],[12,"time","","",50,N],[12,"button","","",50,N],[12,"state","","",50,N],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",50,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",50,N],[12,"axis","","",50,N],[12,"value","","",50,N],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",50,N],[13,"AxisSource","","axis source event",50,N],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",50,N],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",50,N],[12,"time","wayland_server::protocol::wl_pointer::Event","",50,N],[12,"axis","","",50,N],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",50,N],[12,"axis","wayland_server::protocol::wl_pointer::Event","",50,N],[12,"discrete","","",50,N],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",51,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",51,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",52,N],[13,"Pressed","","key is pressed",52,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",53,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",54,N],[12,"format","wayland_server::protocol::wl_keyboard::Event","",54,N],[12,"fd","","",54,N],[12,"size","","",54,N],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",54,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",54,N],[12,"surface","","",54,N],[12,"keys","","",54,N],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",54,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",54,N],[12,"surface","","",54,N],[13,"Key","wayland_server::protocol::wl_keyboard","key event",54,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",54,N],[12,"time","","",54,N],[12,"key","","",54,N],[12,"state","","",54,N],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",54,N],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",54,N],[12,"mods_depressed","","",54,N],[12,"mods_latched","","",54,N],[12,"mods_locked","","",54,N],[12,"group","","",54,N],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",54,N],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",54,N],[12,"delay","","",54,N],[0,"wl_touch","wayland_server::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_server::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",55,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",56,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",56,N],[12,"time","","",56,N],[12,"surface","","",56,N],[12,"id","","",56,N],[12,"x","","",56,N],[12,"y","","",56,N],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",56,N],[12,"serial","wayland_server::protocol::wl_touch::Event","",56,N],[12,"time","","",56,N],[12,"id","","",56,N],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",56,N],[12,"time","wayland_server::protocol::wl_touch::Event","",56,N],[12,"id","","",56,N],[12,"x","","",56,N],[12,"y","","",56,N],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",56,N],[13,"Cancel","","touch session cancelled",56,N],[0,"wl_output","wayland_server::protocol","compositor output region",N,N],[3,"Mode","wayland_server::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",57,N],[13,"None","","no geometry",57,N],[13,"HorizontalRgb","","horizontal RGB",57,N],[13,"HorizontalBgr","","horizontal BGR",57,N],[13,"VerticalRgb","","vertical RGB",57,N],[13,"VerticalBgr","","vertical BGR",57,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",58,N],[13,"_90","","90 degrees counter-clockwise",58,N],[13,"_180","","180 degrees counter-clockwise",58,N],[13,"_270","","270 degrees counter-clockwise",58,N],[13,"Flipped","","180 degree flip around a vertical axis",58,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",58,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",58,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",58,N],[4,"Request","","",N,N],[13,"Release","","release the output object",59,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",60,N],[12,"x","wayland_server::protocol::wl_output::Event","",60,N],[12,"y","","",60,N],[12,"physical_width","","",60,N],[12,"physical_height","","",60,N],[12,"subpixel","","",60,N],[12,"make","","",60,N],[12,"model","","",60,N],[12,"transform","","",60,N],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",60,N],[12,"flags","wayland_server::protocol::wl_output::Event","",60,N],[12,"width","","",60,N],[12,"height","","",60,N],[12,"refresh","","",60,N],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",60,N],[13,"Scale","","output scaling properties",60,N],[12,"factor","wayland_server::protocol::wl_output::Event","",60,N],[0,"wl_region","wayland_server::protocol","region interface",N,N],[3,"WlRegion","wayland_server::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",61,N],[13,"Add","","add rectangle to region",61,N],[12,"x","wayland_server::protocol::wl_region::Request","",61,N],[12,"y","","",61,N],[12,"width","","",61,N],[12,"height","","",61,N],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",61,N],[12,"x","wayland_server::protocol::wl_region::Request","",61,N],[12,"y","","",61,N],[12,"width","","",61,N],[12,"height","","",61,N],[4,"Event","wayland_server::protocol::wl_region","",N,N],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",62,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",63,N],[13,"GetSubsurface","","give a surface the role sub-surface",63,N],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",63,N],[12,"surface","","",63,N],[12,"parent","","",63,N],[4,"Event","wayland_server::protocol::wl_subcompositor","",N,N],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",64,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",65,N],[13,"SetPosition","","reposition the sub-surface",65,N],[12,"x","wayland_server::protocol::wl_subsurface::Request","",65,N],[12,"y","","",65,N],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",65,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",65,N],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",65,N],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",65,N],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",65,N],[13,"SetDesync","","set sub-surface to desynchronized mode",65,N],[4,"Event","","",N,N],[11,"from_raw","wayland_server::protocol::wl_shm","",19,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",19,[[["self"]],["u32"]]],[11,"from_raw","","",20,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",20,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_data_offer","",25,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",25,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_data_source","",28,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",28,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_data_device","",31,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",31,[[["self"]],["u32"]]],[18,"None","wayland_server::protocol::wl_data_device_manager","no action",66,N],[18,"Copy","","copy action",66,N],[18,"Move","","move action",66,N],[18,"Ask","","ask action",66,N],[11,"empty","","Returns an empty set of flags.",66,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",66,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",66,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",66,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",66,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",66,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",66,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",66,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",66,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",66,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",66,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",66,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",66,[[["self"],["dndaction"],["bool"]]]],[11,"from_raw","","",66,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",66,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_shell","",35,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",35,[[["self"]],["u32"]]],[18,"None","wayland_server::protocol::wl_shell_surface","no edge",67,N],[18,"Top","","top edge",67,N],[18,"Bottom","","bottom edge",67,N],[18,"Left","","left edge",67,N],[18,"TopLeft","","top and left edges",67,N],[18,"BottomLeft","","bottom and left edges",67,N],[18,"Right","","right edge",67,N],[18,"TopRight","","top and right edges",67,N],[18,"BottomRight","","bottom and right edges",67,N],[11,"empty","","Returns an empty set of flags.",67,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",67,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",67,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",67,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",67,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",67,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",67,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",67,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",67,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",67,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",67,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",67,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",67,[[["self"],["resize"],["bool"]]]],[11,"from_raw","","",67,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",67,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",68,N],[11,"empty","","Returns an empty set of flags.",68,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",68,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",68,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",68,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",68,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",68,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",68,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",68,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",68,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",68,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",68,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",68,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",68,[[["self"],["transient"],["bool"]]]],[11,"from_raw","","",68,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",68,[[["self"]],["u32"]]],[11,"from_raw","","",37,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",37,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_surface","",40,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",40,[[["self"]],["u32"]]],[18,"Pointer","wayland_server::protocol::wl_seat","the seat has pointer devices",69,N],[18,"Keyboard","","the seat has one or more keyboards",69,N],[18,"Touch","","the seat has touch devices",69,N],[11,"empty","","Returns an empty set of flags.",69,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",69,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",69,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",69,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",69,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",69,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",69,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",69,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",69,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",69,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",69,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",69,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",69,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",69,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",69,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_pointer","",45,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",45,[[["self"]],["u32"]]],[11,"from_raw","","",46,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"from_raw","","",47,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",47,[[["self"]],["u32"]]],[11,"from_raw","","",48,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",48,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_keyboard","",51,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",51,[[["self"]],["u32"]]],[11,"from_raw","","",52,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",52,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_output","",57,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",57,[[["self"]],["u32"]]],[11,"from_raw","","",58,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",58,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",70,N],[18,"Preferred","","indicates this is the preferred mode",70,N],[11,"empty","","Returns an empty set of flags.",70,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",70,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",70,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",70,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",70,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",70,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",70,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",70,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",70,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",70,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",70,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",70,[[["self"],["mode"],["bool"]]]],[11,"from_raw","","",70,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",70,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_subcompositor","",62,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",62,[[["self"]],["u32"]]],[11,"from_raw","wayland_server::protocol::wl_subsurface","",64,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",64,[[["self"]],["u32"]]],[11,"from","wayland_server","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,N],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","wayland_server::sys::common","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","wayland_server::sys::server","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[["self"]],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"try_into","","",81,[[["self"]],["result"]]],[11,"get_type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[["self"]],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"try_into","","",82,[[["self"]],["result"]]],[11,"get_type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[["self"]],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"try_into","","",83,[[["self"]],["result"]]],[11,"get_type_id","","",83,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_callback","",84,[[["t"]],["t"]]],[11,"into","","",84,[[["self"]],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"try_into","","",84,[[["self"]],["result"]]],[11,"get_type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[["self"]],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"try_into","","",85,[[["self"]],["result"]]],[11,"get_type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_compositor","",86,[[["t"]],["t"]]],[11,"into","","",86,[[["self"]],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"try_into","","",86,[[["self"]],["result"]]],[11,"get_type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[["self"]],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"try_into","","",87,[[["self"]],["result"]]],[11,"get_type_id","","",87,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shm_pool","",88,[[["t"]],["t"]]],[11,"into","","",88,[[["self"]],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"try_into","","",88,[[["self"]],["result"]]],[11,"get_type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[["self"]],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"try_into","","",89,[[["self"]],["result"]]],[11,"get_type_id","","",89,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shm","",90,[[["t"]],["t"]]],[11,"into","","",90,[[["self"]],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"try_into","","",90,[[["self"]],["result"]]],[11,"get_type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_buffer","",91,[[["t"]],["t"]]],[11,"into","","",91,[[["self"]],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"try_into","","",91,[[["self"]],["result"]]],[11,"get_type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_offer","",92,[[["t"]],["t"]]],[11,"into","","",92,[[["self"]],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"try_into","","",92,[[["self"]],["result"]]],[11,"get_type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_source","",93,[[["t"]],["t"]]],[11,"into","","",93,[[["self"]],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"try_into","","",93,[[["self"]],["result"]]],[11,"get_type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_device","",94,[[["t"]],["t"]]],[11,"into","","",94,[[["self"]],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"try_into","","",94,[[["self"]],["result"]]],[11,"get_type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,N],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[["self"]],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"try_into","","",95,[[["self"]],["result"]]],[11,"get_type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[["self"]],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"try_into","","",96,[[["self"]],["result"]]],[11,"get_type_id","","",96,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shell","",97,[[["t"]],["t"]]],[11,"into","","",97,[[["self"]],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"try_into","","",97,[[["self"]],["result"]]],[11,"get_type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[["self"]],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"try_into","","",98,[[["self"]],["result"]]],[11,"get_type_id","","",98,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_shell_surface","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,N],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,N],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[["self"]],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"try_into","","",99,[[["self"]],["result"]]],[11,"get_type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_surface","",100,[[["t"]],["t"]]],[11,"into","","",100,[[["self"]],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"try_into","","",100,[[["self"]],["result"]]],[11,"get_type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_seat","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,N],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[["self"]],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"try_into","","",101,[[["self"]],["result"]]],[11,"get_type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_pointer","",102,[[["t"]],["t"]]],[11,"into","","",102,[[["self"]],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"try_into","","",102,[[["self"]],["result"]]],[11,"get_type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_keyboard","",103,[[["t"]],["t"]]],[11,"into","","",103,[[["self"]],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"try_into","","",103,[[["self"]],["result"]]],[11,"get_type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_touch","",104,[[["t"]],["t"]]],[11,"into","","",104,[[["self"]],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"try_into","","",104,[[["self"]],["result"]]],[11,"get_type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_output","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,N],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[["self"]],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"try_into","","",105,[[["self"]],["result"]]],[11,"get_type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_region","",106,[[["t"]],["t"]]],[11,"into","","",106,[[["self"]],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"try_into","","",106,[[["self"]],["result"]]],[11,"get_type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[["self"]],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"try_into","","",107,[[["self"]],["result"]]],[11,"get_type_id","","",107,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_subcompositor","",108,[[["t"]],["t"]]],[11,"into","","",108,[[["self"]],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"try_into","","",108,[[["self"]],["result"]]],[11,"get_type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,N],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[["self"]],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"try_into","","",109,[[["self"]],["result"]]],[11,"get_type_id","","",109,[[["self"]],["typeid"]]],[11,"from","wayland_server::protocol::wl_subsurface","",110,[[["t"]],["t"]]],[11,"into","","",110,[[["self"]],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"try_into","","",110,[[["self"]],["result"]]],[11,"get_type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,N],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[["self"]],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"try_into","","",111,[[["self"]],["result"]]],[11,"get_type_id","","",111,[[["self"]],["typeid"]]],[11,"is_destructor","wayland_server","",73,[[["self"]],["bool"]]],[11,"opcode","","",73,[[["self"]],["u16"]]],[11,"child","","",73,[[["u16"],["u32"],["m"]],["option",["object"]]]],[11,"from_raw","","",73,N],[11,"into_raw","","",73,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",73,N],[11,"as_raw_c_in","","",73,[[["self"],["f"]],["t"]]],[11,"c_interface","","",72,N],[11,"initialize","wayland_server::sys::server","",83,N],[11,"initialize","","",82,N],[11,"deref","","",83,[[["self"]],["waylandserver"]]],[11,"deref","","",82,[[["self"]],["option"]]],[11,"clone","wayland_server","",2,[[["self"]],["client"]]],[11,"clone","","",74,[[["self"]],["displaytoken"]]],[11,"clone","","",5,[[["self"]],["resource"]]],[11,"clone","wayland_server::protocol::wl_shm","",19,[[["self"]],["error"]]],[11,"clone","","",20,[[["self"]],["format"]]],[11,"clone","wayland_server::protocol::wl_data_offer","",25,[[["self"]],["error"]]],[11,"clone","wayland_server::protocol::wl_data_source","",28,[[["self"]],["error"]]],[11,"clone","wayland_server::protocol::wl_data_device","",31,[[["self"]],["error"]]],[11,"clone","wayland_server::protocol::wl_data_device_manager","",66,[[["self"]],["dndaction"]]],[11,"clone","wayland_server::protocol::wl_shell","",35,[[["self"]],["error"]]],[11,"clone","wayland_server::protocol::wl_shell_surface","",67,[[["self"]],["resize"]]],[11,"clone","","",68,[[["self"]],["transient"]]],[11,"clone","","",37,[[["self"]],["fullscreenmethod"]]],[11,"clone","wayland_server::protocol::wl_surface","",40,[[["self"]],["error"]]],[11,"clone","wayland_server::protocol::wl_seat","",69,[[["self"]],["capability"]]],[11,"clone","wayland_server::protocol::wl_pointer","",45,[[["self"]],["error"]]],[11,"clone","","",46,[[["self"]],["buttonstate"]]],[11,"clone","","",47,[[["self"]],["axis"]]],[11,"clone","","",48,[[["self"]],["axissource"]]],[11,"clone","wayland_server::protocol::wl_keyboard","",51,[[["self"]],["keymapformat"]]],[11,"clone","","",52,[[["self"]],["keystate"]]],[11,"clone","wayland_server::protocol::wl_output","",57,[[["self"]],["subpixel"]]],[11,"clone","","",58,[[["self"]],["transform"]]],[11,"clone","","",70,[[["self"]],["mode"]]],[11,"clone","wayland_server::protocol::wl_subcompositor","",62,[[["self"]],["error"]]],[11,"clone","wayland_server::protocol::wl_subsurface","",64,[[["self"]],["error"]]],[11,"extend","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["t"]]]],[11,"extend","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["t"]]]],[11,"extend","","",68,[[["self"],["t"]]]],[11,"extend","wayland_server::protocol::wl_seat","",69,[[["self"],["t"]]]],[11,"extend","wayland_server::protocol::wl_output","",70,[[["self"],["t"]]]],[11,"partial_cmp","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",66,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",66,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",66,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",66,[[["self"],["dndaction"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",67,[[["self"],["resize"]],["bool"]]],[11,"le","","",67,[[["self"],["resize"]],["bool"]]],[11,"gt","","",67,[[["self"],["resize"]],["bool"]]],[11,"ge","","",67,[[["self"],["resize"]],["bool"]]],[11,"partial_cmp","","",68,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",68,[[["self"],["transient"]],["bool"]]],[11,"le","","",68,[[["self"],["transient"]],["bool"]]],[11,"gt","","",68,[[["self"],["transient"]],["bool"]]],[11,"ge","","",68,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_seat","",69,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",69,[[["self"],["capability"]],["bool"]]],[11,"le","","",69,[[["self"],["capability"]],["bool"]]],[11,"gt","","",69,[[["self"],["capability"]],["bool"]]],[11,"ge","","",69,[[["self"],["capability"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_output","",70,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",70,[[["self"],["mode"]],["bool"]]],[11,"le","","",70,[[["self"],["mode"]],["bool"]]],[11,"gt","","",70,[[["self"],["mode"]],["bool"]]],[11,"ge","","",70,[[["self"],["mode"]],["bool"]]],[11,"eq","wayland_server","",5,[[["self"],["resource"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shm","",19,[[["self"],["error"]],["bool"]]],[11,"eq","","",20,[[["self"],["format"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_offer","",25,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_source","",28,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device","",31,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",66,[[["self"],["dndaction"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell","",35,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["resize"]],["bool"]]],[11,"ne","","",67,[[["self"],["resize"]],["bool"]]],[11,"eq","","",68,[[["self"],["transient"]],["bool"]]],[11,"ne","","",68,[[["self"],["transient"]],["bool"]]],[11,"eq","","",37,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_surface","",40,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_seat","",69,[[["self"],["capability"]],["bool"]]],[11,"ne","","",69,[[["self"],["capability"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_pointer","",45,[[["self"],["error"]],["bool"]]],[11,"eq","","",46,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",47,[[["self"],["axis"]],["bool"]]],[11,"eq","","",48,[[["self"],["axissource"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_keyboard","",51,[[["self"],["keymapformat"]],["bool"]]],[11,"eq","","",52,[[["self"],["keystate"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_output","",57,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",58,[[["self"],["transform"]],["bool"]]],[11,"eq","","",70,[[["self"],["mode"]],["bool"]]],[11,"ne","","",70,[[["self"],["mode"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subcompositor","",62,[[["self"],["error"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subsurface","",64,[[["self"],["error"]],["bool"]]],[11,"cmp","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["dndaction"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["resize"]],["ordering"]]],[11,"cmp","","",68,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_seat","",69,[[["self"],["capability"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_output","",70,[[["self"],["mode"]],["ordering"]]],[11,"hash","wayland_server::protocol::wl_data_device_manager","",66,N],[11,"hash","wayland_server::protocol::wl_shell_surface","",67,N],[11,"hash","","",68,N],[11,"hash","wayland_server::protocol::wl_seat","",69,N],[11,"hash","wayland_server::protocol::wl_output","",70,N],[11,"fmt","wayland_server::protocol::wl_shm","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_offer","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_source","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_surface","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_pointer","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_keyboard","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subcompositor","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subsurface","",64,[[["self"],["formatter"]],["result"]]],[11,"sub","wayland_server::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",66,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub","wayland_server::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",67,[[["self"],["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",68,[[["self"],["transient"]],["transient"]]],[11,"sub","wayland_server::protocol::wl_seat","Returns the set difference of the two sets of flags.",69,[[["self"],["capability"]],["capability"]]],[11,"sub","wayland_server::protocol::wl_output","Returns the set difference of the two sets of flags.",70,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags enabled in the set.",66,[[["self"],["dndaction"]]]],[11,"sub_assign","wayland_server::protocol::wl_shell_surface","Disables all flags enabled in the set.",67,[[["self"],["resize"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",68,[[["self"],["transient"]]]],[11,"sub_assign","wayland_server::protocol::wl_seat","Disables all flags enabled in the set.",69,[[["self"],["capability"]]]],[11,"sub_assign","wayland_server::protocol::wl_output","Disables all flags enabled in the set.",70,[[["self"],["mode"]]]],[11,"not","wayland_server::protocol::wl_data_device_manager","Returns the complement of this set of flags.",66,[[["self"]],["dndaction"]]],[11,"not","wayland_server::protocol::wl_shell_surface","Returns the complement of this set of flags.",67,[[["self"]],["resize"]]],[11,"not","","Returns the complement of this set of flags.",68,[[["self"]],["transient"]]],[11,"not","wayland_server::protocol::wl_seat","Returns the complement of this set of flags.",69,[[["self"]],["capability"]]],[11,"not","wayland_server::protocol::wl_output","Returns the complement of this set of flags.",70,[[["self"]],["mode"]]],[11,"bitand","wayland_server::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",66,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand","wayland_server::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",67,[[["self"],["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",68,[[["self"],["transient"]],["transient"]]],[11,"bitand","wayland_server::protocol::wl_seat","Returns the intersection between the two sets of flags.",69,[[["self"],["capability"]],["capability"]]],[11,"bitand","wayland_server::protocol::wl_output","Returns the intersection between the two sets of flags.",70,[[["self"],["mode"]],["mode"]]],[11,"bitor","wayland_server::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",66,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor","wayland_server::protocol::wl_shell_surface","Returns the union of the two sets of flags.",67,[[["self"],["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",68,[[["self"],["transient"]],["transient"]]],[11,"bitor","wayland_server::protocol::wl_seat","Returns the union of the two sets of flags.",69,[[["self"],["capability"]],["capability"]]],[11,"bitor","wayland_server::protocol::wl_output","Returns the union of the two sets of flags.",70,[[["self"],["mode"]],["mode"]]],[11,"bitxor","wayland_server::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags toggled.",66,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_server::protocol::wl_shell_surface","Returns the left flags, but with all the right flags toggled.",67,[[["self"],["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",68,[[["self"],["transient"]],["transient"]]],[11,"bitxor","wayland_server::protocol::wl_seat","Returns the left flags, but with all the right flags toggled.",69,[[["self"],["capability"]],["capability"]]],[11,"bitxor","wayland_server::protocol::wl_output","Returns the left flags, but with all the right flags toggled.",70,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags disabled in the set.",66,[[["self"],["dndaction"]]]],[11,"bitand_assign","wayland_server::protocol::wl_shell_surface","Disables all flags disabled in the set.",67,[[["self"],["resize"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",68,[[["self"],["transient"]]]],[11,"bitand_assign","wayland_server::protocol::wl_seat","Disables all flags disabled in the set.",69,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_server::protocol::wl_output","Disables all flags disabled in the set.",70,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_server::protocol::wl_data_device_manager","Adds the set of flags.",66,[[["self"],["dndaction"]]]],[11,"bitor_assign","wayland_server::protocol::wl_shell_surface","Adds the set of flags.",67,[[["self"],["resize"]]]],[11,"bitor_assign","","Adds the set of flags.",68,[[["self"],["transient"]]]],[11,"bitor_assign","wayland_server::protocol::wl_seat","Adds the set of flags.",69,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_server::protocol::wl_output","Adds the set of flags.",70,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_data_device_manager","Toggles the set of flags.",66,[[["self"],["dndaction"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_shell_surface","Toggles the set of flags.",67,[[["self"],["resize"]]]],[11,"bitxor_assign","","Toggles the set of flags.",68,[[["self"],["transient"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_seat","Toggles the set of flags.",69,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_output","Toggles the set of flags.",70,[[["self"],["mode"]]]],[11,"from_iter","wayland_server::protocol::wl_data_device_manager","",66,[[["t"]],["dndaction"]]],[11,"from_iter","wayland_server::protocol::wl_shell_surface","",67,[[["t"]],["resize"]]],[11,"from_iter","","",68,[[["t"]],["transient"]]],[11,"from_iter","wayland_server::protocol::wl_seat","",69,[[["t"]],["capability"]]],[11,"from_iter","wayland_server::protocol::wl_output","",70,[[["t"]],["mode"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",70,[[["self"],["formatter"]],["result"]]],[11,"is_destructor","wayland_server::protocol::wl_callback","",85,[[["self"]],["bool"]]],[11,"opcode","","",85,[[["self"]],["u16"]]],[11,"child","","",85,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",85,N],[11,"into_raw","","",85,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",85,N],[11,"as_raw_c_in","","",85,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",16,[[["self"]],["bool"]]],[11,"opcode","","",16,[[["self"]],["u16"]]],[11,"child","","",16,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",16,N],[11,"into_raw","","",16,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",16,N],[11,"as_raw_c_in","","",16,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_compositor","",17,[[["self"]],["bool"]]],[11,"opcode","","",17,[[["self"]],["u16"]]],[11,"child","","",17,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",17,N],[11,"into_raw","","",17,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",17,N],[11,"as_raw_c_in","","",17,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",87,[[["self"]],["bool"]]],[11,"opcode","","",87,[[["self"]],["u16"]]],[11,"child","","",87,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",87,N],[11,"into_raw","","",87,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",87,N],[11,"as_raw_c_in","","",87,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",18,N],[11,"into_raw","","",18,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",18,N],[11,"as_raw_c_in","","",18,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",89,[[["self"]],["bool"]]],[11,"opcode","","",89,[[["self"]],["u16"]]],[11,"child","","",89,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",89,N],[11,"into_raw","","",89,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",89,N],[11,"as_raw_c_in","","",89,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shm","",21,[[["self"]],["bool"]]],[11,"opcode","","",21,[[["self"]],["u16"]]],[11,"child","","",21,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",21,N],[11,"into_raw","","",21,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",21,N],[11,"as_raw_c_in","","",21,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",22,N],[11,"into_raw","","",22,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",22,N],[11,"as_raw_c_in","","",22,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_buffer","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",23,N],[11,"into_raw","","",23,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",24,N],[11,"into_raw","","",24,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",24,N],[11,"as_raw_c_in","","",24,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_offer","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",26,N],[11,"into_raw","","",26,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",26,N],[11,"as_raw_c_in","","",26,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",27,N],[11,"into_raw","","",27,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",27,N],[11,"as_raw_c_in","","",27,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_source","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",29,N],[11,"into_raw","","",29,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",29,N],[11,"as_raw_c_in","","",29,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",30,N],[11,"into_raw","","",30,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",30,N],[11,"as_raw_c_in","","",30,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device","",32,[[["self"]],["bool"]]],[11,"opcode","","",32,[[["self"]],["u16"]]],[11,"child","","",32,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",32,N],[11,"into_raw","","",32,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",32,N],[11,"as_raw_c_in","","",32,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",33,N],[11,"into_raw","","",33,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",33,N],[11,"as_raw_c_in","","",33,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device_manager","",34,[[["self"]],["bool"]]],[11,"opcode","","",34,[[["self"]],["u16"]]],[11,"child","","",34,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",34,N],[11,"into_raw","","",34,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",34,N],[11,"as_raw_c_in","","",34,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",96,[[["self"]],["bool"]]],[11,"opcode","","",96,[[["self"]],["u16"]]],[11,"child","","",96,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",96,N],[11,"into_raw","","",96,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",96,N],[11,"as_raw_c_in","","",96,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shell","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",36,N],[11,"into_raw","","",36,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",36,N],[11,"as_raw_c_in","","",36,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",98,[[["self"]],["bool"]]],[11,"opcode","","",98,[[["self"]],["u16"]]],[11,"child","","",98,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",98,N],[11,"into_raw","","",98,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",98,N],[11,"as_raw_c_in","","",98,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shell_surface","",38,[[["self"]],["bool"]]],[11,"opcode","","",38,[[["self"]],["u16"]]],[11,"child","","",38,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",38,N],[11,"into_raw","","",38,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",38,N],[11,"as_raw_c_in","","",38,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",39,N],[11,"into_raw","","",39,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",39,N],[11,"as_raw_c_in","","",39,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_surface","",41,[[["self"]],["bool"]]],[11,"opcode","","",41,[[["self"]],["u16"]]],[11,"child","","",41,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",41,N],[11,"into_raw","","",41,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",41,N],[11,"as_raw_c_in","","",41,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",42,N],[11,"into_raw","","",42,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",42,N],[11,"as_raw_c_in","","",42,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_seat","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",43,N],[11,"into_raw","","",43,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",44,N],[11,"into_raw","","",44,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",44,N],[11,"as_raw_c_in","","",44,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_pointer","",49,[[["self"]],["bool"]]],[11,"opcode","","",49,[[["self"]],["u16"]]],[11,"child","","",49,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",49,N],[11,"into_raw","","",49,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",49,N],[11,"as_raw_c_in","","",49,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",50,N],[11,"into_raw","","",50,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",50,N],[11,"as_raw_c_in","","",50,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_keyboard","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",53,N],[11,"into_raw","","",53,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",53,N],[11,"as_raw_c_in","","",53,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",54,N],[11,"into_raw","","",54,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",54,N],[11,"as_raw_c_in","","",54,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_touch","",55,[[["self"]],["bool"]]],[11,"opcode","","",55,[[["self"]],["u16"]]],[11,"child","","",55,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",55,N],[11,"into_raw","","",55,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",55,N],[11,"as_raw_c_in","","",55,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",56,[[["self"]],["bool"]]],[11,"opcode","","",56,[[["self"]],["u16"]]],[11,"child","","",56,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",56,N],[11,"into_raw","","",56,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",56,N],[11,"as_raw_c_in","","",56,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_output","",59,[[["self"]],["bool"]]],[11,"opcode","","",59,[[["self"]],["u16"]]],[11,"child","","",59,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",59,N],[11,"into_raw","","",59,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",59,N],[11,"as_raw_c_in","","",59,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",60,N],[11,"into_raw","","",60,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_region","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",61,N],[11,"into_raw","","",61,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",61,N],[11,"as_raw_c_in","","",61,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",107,[[["self"]],["bool"]]],[11,"opcode","","",107,[[["self"]],["u16"]]],[11,"child","","",107,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",107,N],[11,"into_raw","","",107,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",107,N],[11,"as_raw_c_in","","",107,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_subcompositor","",63,[[["self"]],["bool"]]],[11,"opcode","","",63,[[["self"]],["u16"]]],[11,"child","","",63,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",63,N],[11,"into_raw","","",63,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",63,N],[11,"as_raw_c_in","","",63,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",109,[[["self"]],["bool"]]],[11,"opcode","","",109,[[["self"]],["u16"]]],[11,"child","","",109,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",109,N],[11,"into_raw","","",109,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",109,N],[11,"as_raw_c_in","","",109,[[["self"],["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_subsurface","",65,[[["self"]],["bool"]]],[11,"opcode","","",65,[[["self"]],["u16"]]],[11,"child","","",65,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",65,N],[11,"into_raw","","",65,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",65,N],[11,"as_raw_c_in","","",65,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",111,[[["self"]],["bool"]]],[11,"opcode","","",111,[[["self"]],["u16"]]],[11,"child","","",111,[[["u16"],["u32"],["meta"]],["option",["object"]]]],[11,"from_raw","","",111,N],[11,"into_raw","","",111,[[["self"],["u32"]],["message"]]],[11,"from_raw_c","","",111,N],[11,"as_raw_c_in","","",111,[[["self"],["f"]],["t"]]],[11,"c_interface","wayland_server::protocol::wl_callback","",84,N],[11,"c_interface","wayland_server::protocol::wl_compositor","",86,N],[11,"c_interface","wayland_server::protocol::wl_shm_pool","",88,N],[11,"c_interface","wayland_server::protocol::wl_shm","",90,N],[11,"c_interface","wayland_server::protocol::wl_buffer","",91,N],[11,"c_interface","wayland_server::protocol::wl_data_offer","",92,N],[11,"c_interface","wayland_server::protocol::wl_data_source","",93,N],[11,"c_interface","wayland_server::protocol::wl_data_device","",94,N],[11,"c_interface","wayland_server::protocol::wl_data_device_manager","",95,N],[11,"c_interface","wayland_server::protocol::wl_shell","",97,N],[11,"c_interface","wayland_server::protocol::wl_shell_surface","",99,N],[11,"c_interface","wayland_server::protocol::wl_surface","",100,N],[11,"c_interface","wayland_server::protocol::wl_seat","",101,N],[11,"c_interface","wayland_server::protocol::wl_pointer","",102,N],[11,"c_interface","wayland_server::protocol::wl_keyboard","",103,N],[11,"c_interface","wayland_server::protocol::wl_touch","",104,N],[11,"c_interface","wayland_server::protocol::wl_output","",105,N],[11,"c_interface","wayland_server::protocol::wl_region","",106,N],[11,"c_interface","wayland_server::protocol::wl_subcompositor","",108,N],[11,"c_interface","wayland_server::protocol::wl_subsurface","",110,N],[11,"new","wayland_server","Create a new map",71,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",71,[[["self"]],["option"]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",71,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",71,[[["self"],["f"]],["bool"]]],[11,"open","wayland_server::sys::server","",14,[[["str"]],["result",["waylandserver","dlerror"]]]]],"paths":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"NewResource"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[4,"ResourceMap"],[4,"Event"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[3,"DndAction"],[3,"Resize"],[3,"Transient"],[3,"Capability"],[3,"Mode"],[3,"UserDataMap"],[3,"AnonymousObject"],[4,"NoMessage"],[3,"DisplayToken"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WlCallback"],[4,"Request"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[4,"Event"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[4,"Event"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"WlOutput"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"Event"]]};
searchIndex["wayland_sys"]={"doc":"FFI bindings to the wayland system libraries.","items":[[6,"gid_t","wayland_sys","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[0,"common","","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_sys::common","",N,N],[12,"name","","",0,N],[12,"signature","","",0,N],[12,"types","","",0,N],[3,"wl_interface","","",N,N],[12,"name","","",1,N],[12,"version","","",1,N],[12,"request_count","","",1,N],[12,"requests","","",1,N],[12,"event_count","","",1,N],[12,"events","","",1,N],[3,"wl_list","","",N,N],[12,"prev","","",2,N],[12,"next","","",2,N],[3,"wl_array","","",N,N],[12,"size","","",3,N],[12,"alloc","","",3,N],[12,"data","","",3,N],[19,"wl_argument","","",N,N],[12,"i","","",4,N],[12,"u","","",4,N],[12,"f","","",4,N],[12,"s","","",4,N],[12,"o","","",4,N],[12,"n","","",4,N],[12,"a","","",4,N],[12,"h","","",4,N],[5,"wl_fixed_to_double","","",N,[[["wl_fixed_t"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["wl_fixed_t"]]],[5,"wl_fixed_to_int","","",N,[[["wl_fixed_t"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["wl_fixed_t"]]],[6,"wl_fixed_t","","",N,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",N,N],[3,"WaylandClient","wayland_sys::client","",N,N],[12,"wl_display_connect_to_fd","","",5,N],[12,"wl_display_connect","","",5,N],[12,"wl_display_disconnect","","",5,N],[12,"wl_display_get_fd","","",5,N],[12,"wl_display_roundtrip","","",5,N],[12,"wl_display_read_events","","",5,N],[12,"wl_display_prepare_read","","",5,N],[12,"wl_display_cancel_read","","",5,N],[12,"wl_display_dispatch","","",5,N],[12,"wl_display_dispatch_pending","","",5,N],[12,"wl_display_get_error","","",5,N],[12,"wl_display_get_protocol_error","","",5,N],[12,"wl_display_flush","","",5,N],[12,"wl_event_queue_destroy","","",5,N],[12,"wl_display_create_queue","","",5,N],[12,"wl_display_roundtrip_queue","","",5,N],[12,"wl_display_prepare_read_queue","","",5,N],[12,"wl_display_dispatch_queue","","",5,N],[12,"wl_display_dispatch_queue_pending","","",5,N],[12,"wl_proxy_create","","",5,N],[12,"wl_proxy_destroy","","",5,N],[12,"wl_proxy_add_listener","","",5,N],[12,"wl_proxy_get_listener","","",5,N],[12,"wl_proxy_add_dispatcher","","",5,N],[12,"wl_proxy_marshal_array_constructor","","",5,N],[12,"wl_proxy_marshal_array_constructor_versioned","","",5,N],[12,"wl_proxy_marshal_array","","",5,N],[12,"wl_proxy_set_user_data","","",5,N],[12,"wl_proxy_get_user_data","","",5,N],[12,"wl_proxy_get_id","","",5,N],[12,"wl_proxy_get_class","","",5,N],[12,"wl_proxy_set_queue","","",5,N],[12,"wl_proxy_get_version","","",5,N],[12,"wl_proxy_create_wrapper","","",5,N],[12,"wl_proxy_wrapper_destroy","","",5,N],[12,"wl_log_set_handler_client","","",5,N],[12,"wl_list_init","","",5,N],[12,"wl_list_insert","","",5,N],[12,"wl_list_remove","","",5,N],[12,"wl_list_length","","",5,N],[12,"wl_list_empty","","",5,N],[12,"wl_list_insert_list","","",5,N],[12,"wl_array_init","","",5,N],[12,"wl_array_release","","",5,N],[12,"wl_array_add","","",5,N],[12,"wl_array_copy","","",5,N],[12,"wl_proxy_marshal_constructor","","",5,N],[12,"wl_proxy_marshal_constructor_versioned","","",5,N],[12,"wl_proxy_marshal","","",5,N],[3,"WAYLAND_CLIENT_OPTION","","",N,N],[3,"WAYLAND_CLIENT_HANDLE","","",N,N],[4,"wl_proxy","","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_queue","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",5,[[["str"]],["result",["waylandclient","dlerror"]]]],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",N,N],[3,"wl_listener","wayland_sys::server","",N,N],[12,"link","","",6,N],[12,"notify","","",6,N],[3,"wl_signal","","",N,N],[12,"listener_list","","",7,N],[3,"WaylandServer","","",N,N],[12,"wl_client_flush","","",8,N],[12,"wl_client_destroy","","",8,N],[12,"wl_client_get_display","","",8,N],[12,"wl_client_get_credentials","","",8,N],[12,"wl_client_get_object","","",8,N],[12,"wl_client_add_destroy_listener","","",8,N],[12,"wl_client_get_destroy_listener","","",8,N],[12,"wl_client_post_no_memory","","",8,N],[12,"wl_resource_create","","",8,N],[12,"wl_client_create","","",8,N],[12,"wl_display_create","","",8,N],[12,"wl_display_destroy","","",8,N],[12,"wl_display_destroy_clients","","",8,N],[12,"wl_display_get_serial","","",8,N],[12,"wl_display_next_serial","","",8,N],[12,"wl_display_add_socket","","",8,N],[12,"wl_display_add_socket_auto","","",8,N],[12,"wl_display_add_socket_fd","","",8,N],[12,"wl_display_add_shm_format","","",8,N],[12,"wl_display_get_event_loop","","",8,N],[12,"wl_display_terminate","","",8,N],[12,"wl_display_run","","",8,N],[12,"wl_display_flush_clients","","",8,N],[12,"wl_display_add_destroy_listener","","",8,N],[12,"wl_display_get_destroy_listener","","",8,N],[12,"wl_global_create","","",8,N],[12,"wl_display_init_shm","","",8,N],[12,"wl_display_add_client_created_listener","","",8,N],[12,"wl_display_set_global_filter","","",8,N],[12,"wl_event_loop_create","","",8,N],[12,"wl_event_loop_destroy","","",8,N],[12,"wl_event_loop_add_fd","","",8,N],[12,"wl_event_loop_add_timer","","",8,N],[12,"wl_event_loop_add_signal","","",8,N],[12,"wl_event_loop_dispatch","","",8,N],[12,"wl_event_loop_dispatch_idle","","",8,N],[12,"wl_event_loop_add_idle","","",8,N],[12,"wl_event_loop_get_fd","","",8,N],[12,"wl_event_loop_add_destroy_listener","","",8,N],[12,"wl_event_loop_get_destroy_listener","","",8,N],[12,"wl_event_source_fd_update","","",8,N],[12,"wl_event_source_timer_update","","",8,N],[12,"wl_event_source_remove","","",8,N],[12,"wl_event_source_check","","",8,N],[12,"wl_global_destroy","","",8,N],[12,"wl_global_get_user_data","","",8,N],[12,"wl_resource_post_event_array","","",8,N],[12,"wl_resource_queue_event_array","","",8,N],[12,"wl_resource_post_no_memory","","",8,N],[12,"wl_resource_set_implementation","","",8,N],[12,"wl_resource_set_dispatcher","","",8,N],[12,"wl_resource_destroy","","",8,N],[12,"wl_resource_get_client","","",8,N],[12,"wl_resource_get_id","","",8,N],[12,"wl_resource_get_link","","",8,N],[12,"wl_resource_from_link","","",8,N],[12,"wl_resource_find_for_client","","",8,N],[12,"wl_resource_set_user_data","","",8,N],[12,"wl_resource_get_user_data","","",8,N],[12,"wl_resource_get_version","","",8,N],[12,"wl_resource_set_destructor","","",8,N],[12,"wl_resource_instance_of","","",8,N],[12,"wl_resource_add_destroy_listener","","",8,N],[12,"wl_resource_get_destroy_listener","","",8,N],[12,"wl_shm_buffer_begin_access","","",8,N],[12,"wl_shm_buffer_end_access","","",8,N],[12,"wl_shm_buffer_get","","",8,N],[12,"wl_shm_buffer_get_data","","",8,N],[12,"wl_shm_buffer_get_stride","","",8,N],[12,"wl_shm_buffer_get_format","","",8,N],[12,"wl_shm_buffer_get_width","","",8,N],[12,"wl_shm_buffer_get_height","","",8,N],[12,"wl_log_set_handler_server","","",8,N],[12,"wl_list_init","","",8,N],[12,"wl_list_insert","","",8,N],[12,"wl_list_remove","","",8,N],[12,"wl_list_length","","",8,N],[12,"wl_list_empty","","",8,N],[12,"wl_list_insert_list","","",8,N],[12,"wl_array_init","","",8,N],[12,"wl_array_release","","",8,N],[12,"wl_array_add","","",8,N],[12,"wl_array_copy","","",8,N],[12,"wl_resource_post_event","","",8,N],[12,"wl_resource_queue_event","","",8,N],[12,"wl_resource_post_error","","",8,N],[3,"WAYLAND_SERVER_OPTION","","",N,N],[3,"WAYLAND_SERVER_HANDLE","","",N,N],[4,"wl_client","","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_loop","","",N,N],[4,"wl_event_source","","",N,N],[4,"wl_global","","",N,N],[4,"wl_resource","","",N,N],[4,"wl_shm_buffer","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"signal","","",N,N],[5,"wl_signal_init","wayland_sys::server::signal","",N,N],[5,"wl_signal_add","","",N,N],[5,"wl_signal_get","","",N,N],[5,"wl_signal_emit","","",N,N],[5,"rust_listener_create","","",N,N],[5,"rust_listener_get_user_data","","",N,N],[5,"rust_listener_set_user_data","","",N,N],[5,"rust_listener_destroy","","",N,N],[6,"wl_event_loop_fd_func_t","wayland_sys::server","",N,N],[6,"wl_event_loop_timer_func_t","","",N,N],[6,"wl_event_loop_signal_func_t","","",N,N],[6,"wl_event_loop_idle_func_t","","",N,N],[6,"wl_global_bind_func_t","","",N,N],[6,"wl_notify_func_t","","",N,N],[6,"wl_resource_destroy_func_t","","",N,N],[6,"wl_display_global_filter_func_t","","",N,N],[11,"open","","",8,[[["str"]],["result",["waylandserver","dlerror"]]]],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",N,N],[3,"WaylandEgl","wayland_sys::egl","",N,N],[12,"wl_egl_window_create","","",9,N],[12,"wl_egl_window_destroy","","",9,N],[12,"wl_egl_window_resize","","",9,N],[12,"wl_egl_window_get_attached_size","","",9,N],[3,"WAYLAND_EGL_OPTION","","",N,N],[3,"WAYLAND_EGL_HANDLE","","",N,N],[4,"wl_egl_window","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",9,[[["str"]],["result",["waylandegl","dlerror"]]]],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",N,N],[3,"wl_cursor_image","wayland_sys::cursor","",N,N],[12,"width","","actual width",10,N],[12,"height","","actual height",10,N],[12,"hotspot_x","","hot spot x (must be inside image)",10,N],[12,"hotspot_y","","hot spot y (must be inside image)",10,N],[12,"delay","","animation delay to next frame",10,N],[3,"wl_cursor","","",N,N],[12,"image_count","","",11,N],[12,"images","","",11,N],[12,"name","","",11,N],[3,"WaylandCursor","","",N,N],[12,"wl_cursor_theme_load","","",12,N],[12,"wl_cursor_theme_destroy","","",12,N],[12,"wl_cursor_theme_get_cursor","","",12,N],[12,"wl_cursor_image_get_buffer","","",12,N],[12,"wl_cursor_frame","","",12,N],[12,"wl_cursor_frame_and_duration","","",12,N],[3,"WAYLAND_CURSOR_OPTION","","",N,N],[3,"WAYLAND_CURSOR_HANDLE","","",N,N],[4,"wl_cursor_theme","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",12,[[["str"]],["result",["waylandcursor","dlerror"]]]],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",N,N],[14,"ffi_dispatch","","",N,N],[11,"from","wayland_sys::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_sys::client","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","wayland_sys::server","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","wayland_sys::egl","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","wayland_sys::cursor","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"deref","wayland_sys::client","",13,[[["self"]],["option"]]],[11,"deref","","",14,[[["self"]],["waylandclient"]]],[11,"deref","wayland_sys::server","",18,[[["self"]],["option"]]],[11,"deref","","",19,[[["self"]],["waylandserver"]]],[11,"deref","wayland_sys::egl","",27,[[["self"]],["option"]]],[11,"deref","","",28,[[["self"]],["waylandegl"]]],[11,"deref","wayland_sys::cursor","",30,[[["self"]],["option"]]],[11,"deref","","",31,[[["self"]],["waylandcursor"]]],[11,"initialize","wayland_sys::client","",13,[[["self"]]]],[11,"initialize","","",14,[[["self"]]]],[11,"initialize","wayland_sys::server","",18,[[["self"]]]],[11,"initialize","","",19,[[["self"]]]],[11,"initialize","wayland_sys::egl","",27,[[["self"]]]],[11,"initialize","","",28,[[["self"]]]],[11,"initialize","wayland_sys::cursor","",30,[[["self"]]]],[11,"initialize","","",31,[[["self"]]]]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"WaylandClient"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"WaylandEgl"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[4,"wl_egl_window"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"],[4,"wl_cursor_theme"]]};
initSearch(searchIndex);
